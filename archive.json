{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-03-04T00:17:36.409519+00:00",
  "repo": "oauth-wg/draft-ietf-oauth-status-list",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "dependencies",
      "description": "Pull requests that update a dependency file",
      "color": "0366d6"
    },
    {
      "name": "feature",
      "description": "",
      "color": "DD8C73"
    },
    {
      "name": "ready-for-pr",
      "description": "",
      "color": "19E11B"
    },
    {
      "name": "discuss",
      "description": "",
      "color": "03BA91"
    },
    {
      "name": "editorial",
      "description": "",
      "color": "DAF986"
    },
    {
      "name": "pending-close",
      "description": null,
      "color": "aaaaaa"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOJZ2aqs5mOZGo",
      "title": "Extensibility point - Allowing for different types of statuses",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/1",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The draft currently sets at least directionally that there can be different types of status lists that convey different kinds of statuses (e.g revocation vs a more complex suspended/active/inactive status setup), w.r.t I think we need to agree:\r\n\r\n1. We think this extensibility point is useful\r\n2. What the extensibility point should control e.g does it affect things like the number of bits allocated per index (so more than a binary state can be expressed)\r\n3. Does it control the type of URI the status list can be resolved from e.g MUST be an HTTPS url or is that controlled else where.",
      "createdAt": "2023-05-18T06:08:10Z",
      "updatedAt": "2023-06-15T13:44:01Z",
      "closedAt": "2023-06-15T13:44:01Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@c2bo and me were thinking on that. Our ideas were:\r\n- having the possibility that a status contains more than one bit is very useful and should be included. Otherwise multiple statuses for one token (e.g. revocation and suspension) requires two status lists, this means additional calls, potential syncing issues etc. this is a shortcoming of the StatusList2021\r\n- the spec should serve a predefined template for the most common usecases, e.g. simple revocation with 1 bit and maybe one more template with revocation and suspension\r\n- in other cases the statusList should either include the definition in its metadata and/or point to a issuer-controlled URL that explains the status bits\r\n\r\nOur proposal was:\r\n```\r\n{\r\n    \"iss\": \"https://example.org/\" //MUST\r\n    \"iat\": 1683560915, //MUST\r\n    \"exp\": 1686232115, //MAY -> this allows issuer to defined a TTL\r\n    // this part probably needs to change\r\n    \"def\": { // optional: could be left out if pre-defined type\r\n        \"bits\": 2, //MUST\r\n        \"state_definitions_uri\":, //CONDITIONAL: uri to explanations\r\n        \"state_definitions\" { //CONDITIONAL: explanations inline\r\n            \"0\" : \"VALID\",\r\n            \"1\" : \"SUSPENDED\",\r\n            \"2\" : \"REVOKED\",\r\n            \"3\" : \"UNDEFINED\" //or absent\r\n        }\r\n    }\r\n    \"encoded_status\" : \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA\"\r\n}\r\n```\r\nIn this example `state_definitions_uri` could point to a tempalte from this spec",
          "createdAt": "2023-05-19T12:22:14Z",
          "updatedAt": "2023-05-19T12:22:14Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I do believe we have to give some pre-defined interpretations - parsing the different states doesn't really work well for fully automated flows imho. Biggest question then would be if just mentioning that template via name would be enough or if we still want to have that information served in the status list as well.\r\n\r\nIf we take revocation as an example, then we likely need to define at least 2 default templates similar to these:\r\n- 1bit-revocation:\r\n where 0 equals `VALID` and 1 equals `REVOKED`\r\n- 2bit-revocation: \r\n 0 = `VALID`\r\n 1 = `REVOKED`\r\n 2 = `SUSPENDED`\r\n 3 = ..\r\n\r\nWe could then either have that definition as part of the JWT or just reference via name/uri (which I would prefer - makes implementation a lot easier). ",
          "createdAt": "2023-05-19T12:57:59Z",
          "updatedAt": "2023-05-19T12:57:59Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Our proposal was:\r\n\r\nThanks this is great to be able to review!  IMO the simplest possible conveyance about what statues a list can represent I believe can be done through the sts.typ alone. Because I think majority of implementations will require explicit handling of different status types rather than supporting generic statuses. For example as an implementation if I were to come across a JWT with a sts.typ value set to \"revocation-list\" it would mean each status entry in the list is represented by 1bit where when the bit is set to 0 it represents NOT REVOKED status and when the bit is set to 1 it represents REVOKED.",
          "createdAt": "2023-05-21T21:17:12Z",
          "updatedAt": "2023-05-21T21:17:12Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is addressed by #17, @tplooker please close this issue",
          "createdAt": "2023-06-15T09:40:07Z",
          "updatedAt": "2023-06-15T09:40:36Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "I_kwDOJZ2aqs5mOaOs",
      "title": "Document validation procedure",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/2",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need to document end to end the validation procedure for a JWT and CWT referencing a status list including resolution of the status list, validation of the status list and how to get the status information for the JWT referencing the status list.",
      "createdAt": "2023-05-18T06:09:52Z",
      "updatedAt": "2023-10-06T06:50:12Z",
      "closedAt": "2023-10-06T06:50:12Z",
      "comments": []
    },
    {
      "number": 3,
      "id": "I_kwDOJZ2aqs5mOaZC",
      "title": "Document the CWT variation of the status list",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/3",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [],
      "body": "As described in the title, detail the CWT representation of the status list which is complementary to the JWT representation.",
      "createdAt": "2023-05-18T06:10:35Z",
      "updatedAt": "2024-03-03T21:35:52Z",
      "closedAt": "2024-03-03T21:35:52Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "Maybe a naive question but what's the motivation for this draft having the two representations? When positioned\r\nas a companion of the SD-JWT VC draft and aiming for the OAuth WG, it seems like keeping the scope tighter and only having the JWT representation would be sufficient/okay/preferable.  \r\n",
          "createdAt": "2023-06-26T21:31:52Z",
          "updatedAt": "2023-06-26T21:31:52Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "@bc-pi, credential formats like mDocs do not have a status/revocation mechanism hence a CWT based representation is beneficial to these applications as they dont typically have JWT support.",
          "createdAt": "2023-07-11T06:36:02Z",
          "updatedAt": "2023-07-11T06:38:29Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "I dunno, I'm not convinced that necessitates having multiple status list token representations. Especially in one draft. This draft, which again is being positioned as a companion to the SD-JWT VC. I suspect the work would be more palatable for adoption with a scope that's reflective of that. But maybe that's just me. Thanks for the context. ",
          "createdAt": "2023-07-11T16:42:32Z",
          "updatedAt": "2023-07-11T16:42:32Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOJZ2aqs5mOa7a",
      "title": "Add a privacy consideration around suggested list sizes for heard privacy",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/4",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As described in the title the size of the list (number of token statuses represented by the list) will have a significant impact on privacy related applications.",
      "createdAt": "2023-05-18T06:12:50Z",
      "updatedAt": "2023-10-06T06:50:40Z",
      "closedAt": "2023-10-06T06:50:40Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I see this is related to #12 ",
          "createdAt": "2023-05-23T15:41:36Z",
          "updatedAt": "2023-05-23T15:41:36Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Should we define a minimum size or give this as a recommendation in privacy recommendation?",
          "createdAt": "2023-05-23T20:07:02Z",
          "updatedAt": "2023-05-23T20:07:02Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "use SHOULD for minimum size 16K",
          "createdAt": "2023-05-26T12:45:49Z",
          "updatedAt": "2023-05-26T12:45:49Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOJZ2aqs5mWe-e",
      "title": "Add the size of the statusList as a property",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/5",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It could be handy to include the size of the statusList, i.e. the total number of entities and there status.\r\nThis could serve as an additional check that the statusList was correctly uncompressed and decoded by the verifier, especially if we think about including variable size of bits per status, see #1 \r\nProposed change to the current draft:\r\n```\r\n{\r\n  \"alg\": \"ES256\",\r\n  \"kid\": \"11\"\r\n}\r\n.\r\n{\r\n  \"iss\": \"https://example.com\",\r\n  \"iat\": 1683560915,\r\n  \"exp\": 1686232115,\r\n  \"sts_lst\": {\r\n    \"typ\": \"revocation-list\",\r\n    \"size\": 16384,\r\n    \"lst\": \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAA......IC3AYbSVKsAQAAA\"\r\n  }\r\n}\r\n```",
      "createdAt": "2023-05-19T12:27:52Z",
      "updatedAt": "2023-07-11T06:30:55Z",
      "closedAt": "2023-07-11T06:30:55Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Just so I understand better @paulbastian is your concern that developers would struggle to decode the status list reliably and that size would assist in validating this was done correctly? Because if so I think test vectors would probably assist in this regard. If its about corruption of the list it self I dont think that is of material concern because the list is always signed. R.e multi bits per status what would size convey in this context the number of bits/bytes or statuses represented?",
          "createdAt": "2023-05-21T20:53:20Z",
          "updatedAt": "2023-05-21T20:53:20Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Exactly, integrity is protected by the signature, but uncompressing and getting the correct index needs to be done correctly. I agree we should add text vectors to the spec, let's open an issue on that.\nIn my opinion size = total bits uncompressed / bits per status = number of entities covered by the status list.\nDo you agree?",
          "createdAt": "2023-05-21T20:56:10Z",
          "updatedAt": "2023-05-21T20:57:45Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Does it make sense to introduce\r\n`size` = amount of entries \r\n`states` = possible states that an entry can have (e.g., 2 for standard revocation)\r\nas mandatory values to the status list? That would allow for an easy check if interpretation/conversion of the status list worked properly on the verifier side.\r\n\r\n\r\nWould result in something like this:\r\n```\r\n{\r\n  \"iss\": \"https://example.com\",\r\n  \"iat\": 1683560915,\r\n  \"exp\": 1686232115,\r\n  \"status\": {\r\n    \"typ\": \"revocation-list\",\r\n    \"size\": 16384,\r\n    \"states\": 2,\r\n    \"lst\": \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAA......IC3AYbSVKsAQAAA\"\r\n  }\r\n}\r\n```",
          "createdAt": "2023-05-22T08:58:11Z",
          "updatedAt": "2023-05-22T08:58:11Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker are you arguing that it is not necessary at all? While I agree that you could get additional safety of correct deciding through test vectors, I think it is anyway a useful metadata to have and does not take large amounts of space.",
          "createdAt": "2023-05-22T20:31:38Z",
          "updatedAt": "2023-05-22T20:31:38Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed to not integrate this",
          "createdAt": "2023-07-11T06:30:55Z",
          "updatedAt": "2023-07-11T06:30:55Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOJZ2aqs5mW5EE",
      "title": "Optional authorization towards the statusList endpoint",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/7",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "To limit the tracking/profiling possiblities of the statusList, an optional mechanism for verifiers to get authorized access could be implemented. This limits the entities that have access to the status list. A mechanism could be:\r\n- not defined in this spec but added to privacy considerations\r\n- defined in this spec",
      "createdAt": "2023-05-19T13:44:53Z",
      "updatedAt": "2024-08-07T06:33:10Z",
      "closedAt": "2024-08-07T06:33:10Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I think it is a good idea to at least desribe the different scenarios of who (verifier/holder) is requesting the status list and how it is protected.",
          "createdAt": "2023-05-19T18:59:54Z",
          "updatedAt": "2023-05-19T18:59:54Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, one question this raises for me is whether there needs to be any information in the status entry of the issued credential that convey's this constraint to a verifying party (e.g the status list is access controlled and you need to do X to be able to resolve it?)",
          "createdAt": "2023-05-21T20:49:28Z",
          "updatedAt": "2023-05-21T20:49:28Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Either as an entry in the issued credential or we need to provide some form of meta information online prior to requesting the status list?",
          "createdAt": "2023-05-22T08:37:05Z",
          "updatedAt": "2023-05-22T08:37:05Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Main spec should have a short discussion why/where this would make sense.\r\nIn-depth discussion can happen in an appendix.",
          "createdAt": "2023-05-26T12:43:11Z",
          "updatedAt": "2023-05-26T12:43:11Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Discussed in editor's call and decided that this is out of scope currently for the draft",
          "createdAt": "2024-08-07T06:33:10Z",
          "updatedAt": "2024-08-07T06:33:10Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOJZ2aqs5ma42d",
      "title": "STS acronym",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/9",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In the OAuth2 ecosystem we have already the acronym STS, as Security Token Service, as defined in Token Exchange RFC 8693\r\n\r\nwhy not simply `status`?",
      "createdAt": "2023-05-21T00:07:19Z",
      "updatedAt": "2023-05-23T19:04:15Z",
      "closedAt": "2023-05-23T19:04:15Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for flagging, yes we can consider this,  I was trying to align to the informal convention JWT's typically use for root level claims which are strings with 3 characters.",
          "createdAt": "2023-05-21T20:47:42Z",
          "updatedAt": "2023-05-21T20:47:42Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I love this sensibility, even if from years at this part this convention is not respected anymore\r\n\r\n`sta` is weird\r\n`stat` is something good even if outside the three chars, at the same time it may be misleading since stat may point also to statistics\r\n\r\nwho knows if `status` besides being explicit represents the best compromise after all",
          "createdAt": "2023-05-21T21:10:50Z",
          "updatedAt": "2023-05-21T21:10:50Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, status feels like the most sensible compromise, I will prepare a PR that makes this change.",
          "createdAt": "2023-05-21T22:18:36Z",
          "updatedAt": "2023-05-21T22:18:36Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed, please also adopt this for the status_list",
          "createdAt": "2023-05-22T21:03:28Z",
          "updatedAt": "2023-05-22T21:03:28Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Close with #16 ?",
          "createdAt": "2023-05-23T15:40:43Z",
          "updatedAt": "2023-05-23T15:40:43Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, closing.",
          "createdAt": "2023-05-23T19:04:15Z",
          "updatedAt": "2023-05-23T19:04:15Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOJZ2aqs5ma5F5",
      "title": "Ownership of the status endpoint and third party status list providers use case",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/10",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "we assume (and that's good) that the issuer of a VC is responsible of its lifecycle, and then it has to maintain the revocation status of its issued vcs.\r\n\r\nthere may be some cases where the revocation list could be deployed outside the issuer domain\r\n\r\nin this case the status JSON Object shouln't be a JWS instead, signed by the owner of the status list (different from the isser)? \r\n\r\n````\r\n  \"sts\": $JWS\r\n````  ",
      "createdAt": "2023-05-21T00:11:48Z",
      "updatedAt": "2024-08-14T06:39:52Z",
      "closedAt": "2024-08-14T06:39:51Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "@peppelinux 3rd party distribution of the status list (e.g it being hosted by someone other than the issuer) I think is a good usecase to elaborate on, however regardless of host I think it is important that the list is always signed by the issuer.",
          "createdAt": "2023-05-21T20:46:25Z",
          "updatedAt": "2023-05-21T20:46:25Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I prefer a decentralized approach, where each issuer manages the lifecycle of its issuance but there comes other models where revocation must or may be hosted to third parties \r\n\r\nso we should give a verifiable attestation of the status provider, and this attestation must be verifiable\r\n\r\nthis brings again the aspect to have this status object directly as a JWS for both cases but I'd prefer a plantext json is the issuer is the same, just because it is simple and the hope that there won't be centralized approaches\r\n\r\ndifferently, if the issuer is not the same and the status object should be a JWS, well in it we should have a verifiable trust (x5c, trust_chain ...) embedded or referenced in it -> payload increase but necessary ",
          "createdAt": "2023-05-21T21:15:51Z",
          "updatedAt": "2023-05-21T21:15:51Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "@peppelinux so If I understand you correctly you would like to support a model where the statuse being conveyed about a JWT is by someone other than the issuer of the JWT?",
          "createdAt": "2023-05-21T22:17:24Z",
          "updatedAt": "2023-05-21T22:17:24Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I dont like It but there May be some cases when It Is required\r\n\r\nNot in my implementations :-)",
          "createdAt": "2023-05-22T06:37:38Z",
          "updatedAt": "2023-05-22T06:37:38Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I have this use case also in mind, I parked this concept in the privacy considerations part 5.5 as hosting service. It's an easy way to get additional privacy because the issuer can not track who accessed the status list",
          "createdAt": "2023-05-22T21:06:55Z",
          "updatedAt": "2023-05-22T21:06:55Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Clarify after discussions with @tplooker : This is only about hosting the Status List Token, not about the htird party signing the Token",
          "createdAt": "2023-07-11T06:29:58Z",
          "updatedAt": "2023-07-11T06:29:58Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- we acknowledge 3rd Party hosting by the Status List Provider and will explain this in more detail in the spec, see #158 \r\n- other scenarios, where the issuer of the Referenced Token is not the same as the issuer of the Status List Token will not be detailed, but are still possible to do with this spec given that we don't give guidance on the key management\r\n\r\nPending close if no new feedback",
          "createdAt": "2024-08-07T06:44:16Z",
          "updatedAt": "2024-08-07T06:44:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- opened #159 to solve the latter discussion\r\n- closing this one",
          "createdAt": "2024-08-14T06:39:51Z",
          "updatedAt": "2024-08-14T06:39:51Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOJZ2aqs5ma5Qn",
      "title": "idx is a counter then a information leaker",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/11",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Since idx is a positive integer number, it is assumed that its numbering is given by a counter\r\nby guessing all the positive number greater than zero, an adversary would know how many credential a credential issuer has issued\r\n\r\nwould it be better using an exadecimal and opaque uid instead of a number?",
      "createdAt": "2023-05-21T00:14:59Z",
      "updatedAt": "2023-05-23T19:08:54Z",
      "closedAt": "2023-05-23T19:08:54Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "@peppelinux, an adversary looking at a status list only knows the maximum number of *possible* statuses that a list conveys, it cannot detect how many credentials have been issued by looking at the status list alone because issuers typically pre-allocate the list ahead of assigning a credential specific index in the list. Issuers can also employ certain noise techniques if they so choose by having \"dead entries\" in the list that are never assigned a credential.",
          "createdAt": "2023-05-21T20:44:08Z",
          "updatedAt": "2023-05-21T20:44:08Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "it seems the answer that closes this issue\r\n\r\nbefore doing that, and as an editorial strategy, I suggest to place your comment, even in a raw way, in the privacy consideration of the specs\r\n\r\nthat would take track of the FAQ directly in the specs",
          "createdAt": "2023-05-21T21:17:53Z",
          "updatedAt": "2023-05-21T21:17:53Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree. This probably belongs to the section 5.3 correlation risks and tracking as a counter measure\n\n",
          "createdAt": "2023-05-22T21:12:20Z",
          "updatedAt": "2023-05-22T21:12:20Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Close with #15 ?",
          "createdAt": "2023-05-23T15:35:22Z",
          "updatedAt": "2023-05-23T15:35:22Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed, closing.",
          "createdAt": "2023-05-23T19:08:54Z",
          "updatedAt": "2023-05-23T19:08:54Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOJZ2aqs5mpyJ8",
      "title": "Define Minimum Size",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/12",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Define a minimum size or give this as a recommendation in privacy recommendation?",
      "createdAt": "2023-05-23T14:42:54Z",
      "updatedAt": "2023-05-23T20:06:49Z",
      "closedAt": "2023-05-23T20:06:49Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Would suggest we closed in favour of #4?",
          "createdAt": "2023-05-23T19:05:18Z",
          "updatedAt": "2023-05-23T19:05:18Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOJZ2aqs5mqEtA",
      "title": "Add Terminology and rephrase the Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/13",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We need a common and better name for the first JWT aka Token aka StatusListEntry.\r\nMy proposal would be:\r\n- Subject Token\r\n- **Subject JWT**\r\n- Status Holding JWT",
      "createdAt": "2023-05-23T15:24:35Z",
      "updatedAt": "2023-06-15T09:39:36Z",
      "closedAt": "2023-06-15T09:39:36Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes I had a similar thought, I agree with Subject JWT.",
          "createdAt": "2023-05-25T04:15:33Z",
          "updatedAt": "2023-05-25T04:15:33Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I discussed with @c2bo that the spec is supposed to work for JWT and CWT, so maybe Subject Token might fit better?",
          "createdAt": "2023-05-26T12:36:03Z",
          "updatedAt": "2023-05-26T12:36:03Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressing these issues in #20 ",
          "createdAt": "2023-05-30T14:44:53Z",
          "updatedAt": "2023-05-30T14:44:53Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOJZ2aqs5mqGA5",
      "title": "Remove typ from Token status data",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/14",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The current proposal for the JWT having a status is:\r\n```\r\n{\r\n  \"alg\": \"ES256\",\r\n  \"kid\": \"11\"\r\n}\r\n.\r\n{\r\n  \"iss\": \"https://example.com\",\r\n  \"sts\": {\r\n    \"typ\": \"revocation-list\",\r\n    \"idx\": 0,\r\n    \"uri\": \"https://example.com/statuslists/1\"\r\n  }\r\n}\r\n```\r\nIn my opinion the `typ`claim here is absolete.\r\nThe type of the status list should be known from the `typ`claim in the Status List JWT.\r\nHow to fetch the Status List JWT is given by the specification or by the scheme in `uri`.",
      "createdAt": "2023-05-23T15:27:34Z",
      "updatedAt": "2023-06-15T09:41:14Z",
      "closedAt": "2023-06-15T09:41:13Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also remove the phrase \"The value MUST be equal to that of the \"typ\" attribute in the \"sts\" claim for the token who's status is being validated\" as this is obsolete in this case as well",
          "createdAt": "2023-05-23T15:49:13Z",
          "updatedAt": "2023-05-23T15:49:13Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Im not against this proposed simplification however removing it would prevent an extensibility point based of the 'typ' value to control what types of uri could be found in the URI e.g are these always https? or are other schemes supported?",
          "createdAt": "2023-05-25T04:14:48Z",
          "updatedAt": "2023-05-25T04:14:48Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Other schemes could be supported using a different prefix in the `uri` field: the uri could for example be a DID path like did:example:123/status.\r\nI don't think we should worry about that too much for the time being.",
          "createdAt": "2023-05-25T12:00:23Z",
          "updatedAt": "2023-05-25T12:00:23Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree with @c2bo . The scheme is probably enough. I would suggest making HTTPS schemes a MUST requirement and other schemes MAY be used",
          "createdAt": "2023-05-25T20:45:50Z",
          "updatedAt": "2023-05-25T20:45:50Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is addressed by #17 ",
          "createdAt": "2023-06-15T09:41:13Z",
          "updatedAt": "2023-06-15T09:41:13Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOJZ2aqs5nFDxy",
      "title": "Draft structure and section order",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/19",
      "state": "CLOSED",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I did a first review of this draft. As a newbie to the topic, I found the following issues:\r\n\r\n- I miss a description of the fundamental concept, i.e. the status list itself is a JWT (issued by the same issuer issuing the JWTs), the status list JWT is obtained from a URL hosted by that issuer or another party, the link between the JWT and its status list is provided through data in the JWT. I suggest to add this in the Introduction (or an Overview) section. \r\n- When reading Section 3.1. for the first time I was confused whether it describes the status list JWT or the JWT referring to the status list. I think it is the latter and it should be clear to the reader on first sight. \r\n- I  think the order of definition should be changed. Right now, I'm supposed to understand how a status list JWT is used in a JWT without even knowing what that status list JWT is. I suggest to change order: 1) Overview of the concepts, 2) specify status list JWT (structure and where/how to obtain), 3) embedding in a JWT (syntax, processing rules, ...). ",
      "createdAt": "2023-05-28T10:28:05Z",
      "updatedAt": "2023-07-17T06:35:02Z",
      "closedAt": "2023-07-17T06:35:02Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agree on 1+2. As mentioned in #13 we need a better word describing the \"Token\" that is being described by the status List. I will make a PR using \"Subject Token\" as this comprises both JSON and CBOR formats.\r\nAgree on 3 as well.",
          "createdAt": "2023-05-30T08:34:12Z",
          "updatedAt": "2023-05-30T08:34:12Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "For reordering it would make sense to get forward with the existing PRs first and do it afterwards..",
          "createdAt": "2023-05-30T08:35:43Z",
          "updatedAt": "2023-05-30T08:35:43Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressing some of these issues in #20 ",
          "createdAt": "2023-05-30T14:44:28Z",
          "updatedAt": "2023-05-30T14:44:28Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What's left to do: reorder Status List Token first and Referenced Token afterwards",
          "createdAt": "2023-07-11T06:18:00Z",
          "updatedAt": "2023-07-11T06:18:00Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOJZ2aqs5oC0TD",
      "title": "Title / Future Proofness for other formats than bitarrays",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/21",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I'm wondering whether\r\na) this document shall always only be about status list using bitarrays/bitstrings\r\nor\r\nb) we want to leave a window open to enable other forms of storage\r\n\r\nIn case of a) it could make sense to name bit array in the title of the document.\r\nIn case of b) it could make sense to add a field that reference the existing mechanism",
      "createdAt": "2023-06-07T10:23:03Z",
      "updatedAt": "2024-02-06T07:39:52Z",
      "closedAt": "2024-02-06T07:39:20Z",
      "comments": [
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "for this reason we are moving the equivalent to this work at w3c to something like \"bitstringstatuslist\" to avoid squatting on the broad concept of status list",
          "createdAt": "2023-08-04T21:49:52Z",
          "updatedAt": "2023-08-04T21:49:52Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Linked to #77 ",
          "createdAt": "2023-11-01T11:52:51Z",
          "updatedAt": "2023-11-01T11:52:51Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved by #85 ",
          "createdAt": "2024-02-06T07:39:20Z",
          "updatedAt": "2024-02-06T07:39:20Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOJZ2aqs5oGi-v",
      "title": "Add implementations considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/24",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "Add:\r\n- prevent double allocating an index\r\n- randomize allocation of indexes/avoid sequential usage",
      "createdAt": "2023-06-07T19:34:15Z",
      "updatedAt": "2024-09-24T18:54:45Z",
      "closedAt": "2024-09-24T18:54:45Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Peter proposes a dynamic sized list, I don't see anything preventing this",
          "createdAt": "2023-07-11T09:52:38Z",
          "updatedAt": "2023-07-11T09:52:38Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "initialize new status list with reasonable default value to avoid update on issuance",
          "createdAt": "2024-08-28T07:00:22Z",
          "updatedAt": "2024-08-28T07:00:22Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOJZ2aqs5ofMTN",
      "title": "JOSE typ for Status List Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/25",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "              > umm I thought we agreed to remove the concept of the \"typ\" attribute.. so no `revocation-list` and no `suspention-status-list`.\r\n\r\nBut I assume the Status List Token will have a `typ` JOSE header to properly distinguish it from other JWTs, right?\r\n\r\n_Originally posted by @tlodderstedt in https://github.com/vcstuff/draft-looker-jwt-cwt-status-list/issues/17#issuecomment-1584372077_\r\n            ",
      "createdAt": "2023-06-12T15:25:01Z",
      "updatedAt": "2023-11-01T08:59:04Z",
      "closedAt": "2023-11-01T08:59:04Z",
      "comments": [
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "my original comment should be removed from the description because I was referring to the `type` JWT claim. \r\nfor the purpose of this issue, simply put, a status list JWT should be typed per JWT BCP. and I would not expect any objections to that..",
          "createdAt": "2023-06-13T05:52:29Z",
          "updatedAt": "2023-06-13T05:52:29Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed, something like\r\n```\r\n{\r\n  \"typ\": \"statuslist+jwt\",\r\n  \"alg\": \"ES256\",\r\n  \"kid\": \"11\"\r\n}\r\n```\r\n?",
          "createdAt": "2023-06-13T09:45:22Z",
          "updatedAt": "2023-06-13T09:45:22Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "yes!",
          "createdAt": "2023-06-13T18:05:24Z",
          "updatedAt": "2023-06-13T18:05:24Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It's available in the example https://vcstuff.github.io/draft-looker-oauth-jwt-cwt-status-list/draft-looker-oauth-jwt-cwt-status-list.html#section-4.2-3 but its missing from the text. In general some text about header parameters is needed",
          "createdAt": "2023-07-11T06:11:16Z",
          "updatedAt": "2023-07-11T06:11:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved by #71 ",
          "createdAt": "2023-11-01T08:59:04Z",
          "updatedAt": "2023-11-01T08:59:04Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOJZ2aqs5oowGp",
      "title": "rename \"referenced token\" ",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/26",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "remaining issue from PR #20. \r\n\r\nalternatives are \"referencing token\".",
      "createdAt": "2023-06-13T19:20:19Z",
      "updatedAt": "2024-08-28T07:18:54Z",
      "closedAt": "2024-08-28T07:18:54Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Right now the diagram is a little confusing,\r\nthe upper arrow could point in both directions saying \"References\" or \"Referencing\"",
          "createdAt": "2023-06-16T09:49:06Z",
          "updatedAt": "2023-06-16T09:49:06Z"
        },
        {
          "author": "david-bakker",
          "authorAssociation": "NONE",
          "body": "> remaining issue from PR #20.\r\n> \r\n> alternatives are \"referencing token\".\r\n\r\nHi, not sure this is the right place to raise the Referencing / Referenced Token discussion again. \r\nIn any case, a way out would perhaps be to drop the 'referencing' language, since it seems unsolvable to me, as there are references between the two tokens both ways. So what about calling the Referenced Token the Listed Token instead? To me, that summarizes the relationship rather neatly: the Status List Token contains the status list, the status of a Listed Token is included in that list. ",
          "createdAt": "2023-09-21T09:04:24Z",
          "updatedAt": "2023-09-21T09:06:06Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > remaining issue from PR #20.\r\n> > alternatives are \"referencing token\".\r\n> \r\n> Hi, not sure this is the right place to raise the Referencing / Referenced Token discussion again. In any case, a way out would perhaps be to drop the 'referencing' language, since it seems unsolvable to me, as there are references between the two tokens both ways. So what about calling the Referenced Token the Listed Token instead? To me, that summarizes the relationship rather neatly: the Status List Token contains the status list, the status of a Listed Token is included in that list.\r\n\r\nAs the Status List draft is today also laying out a framework for other status mechanisms, the term \"Referenced Token\" seems better fitting as its quite neutral and would fit the Status Assertion draft as well, while \"Listed Token\" is very specific to Status List. We would hope that other Status mechanisms extending the proposed framework of this draft would adopt the same terminology. Looking at @peppelinux",
          "createdAt": "2024-08-07T06:55:38Z",
          "updatedAt": "2024-08-07T06:55:38Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The term seems established right now. Pending close if no further feedback",
          "createdAt": "2024-08-14T06:42:05Z",
          "updatedAt": "2024-08-14T06:42:05Z"
        },
        {
          "author": "david-bakker",
          "authorAssociation": "NONE",
          "body": "OK with me!",
          "createdAt": "2024-08-14T07:39:07Z",
          "updatedAt": "2024-08-14T07:39:07Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOJZ2aqs5ozHOP",
      "title": "Add suggestions for API for batch fetching statuslists",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/27",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "If a verifier wants all statuslists for a specific type of Referenced Token, e.g. for offlien caching, then it would be handy, if the issuer provides a API endpoint to get those in one call, e.g. as an array.",
      "createdAt": "2023-06-15T07:39:24Z",
      "updatedAt": "2024-07-08T07:21:02Z",
      "closedAt": "2024-07-08T07:21:02Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "ideas from discussion with Oliver and Martijn:\r\n\r\n- <fulldns-with-path>/<bucket>/<individual status list token>, and <fulldns-with-path>/<bucket> provides a list of all URLs like a web directory\r\n- well-known path\r\n- additional URL inside the status_list claim\r\n- URL provided by the Issuer metadata",
          "createdAt": "2024-02-09T14:20:01Z",
          "updatedAt": "2024-02-09T14:20:01Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would be supportive. I believe ISO called this the all_bucket property.",
          "createdAt": "2024-04-24T14:38:41Z",
          "updatedAt": "2024-04-24T14:38:41Z"
        },
        {
          "author": "nadalin",
          "authorAssociation": "NONE",
          "body": "I would also be supportive, this work is needed",
          "createdAt": "2024-04-24T16:00:33Z",
          "updatedAt": "2024-04-24T16:00:33Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors are supportive as well on this feature. Do you have any preferences on how this should be achieved and why?",
          "createdAt": "2024-04-24T17:08:45Z",
          "updatedAt": "2024-04-24T17:08:45Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@c2bo and I gave it some thoughts.\r\n\r\nThis is what group/pool/aggregation (best name tbd) file could look like:\r\n\r\n```json\r\n{\r\n   \"status_lists\" : [\r\n      \"https://example.com/statuslists/1\",\r\n      \"https://example.com/statuslists/2\",\r\n      \"https://example.com/statuslists/3\"\r\n   ]\r\n}\r\n```\r\n\r\nThere would be an equivalent in CBOR, depending on your Status List Token, the group/pool/aggregation must be in the same encoding.\r\n\r\nIs it ok to keep the group/pool/aggregation unsigned? (we think so).\r\n\r\nMost important question is how to find this file. After discussion the 4 variants mentioned above:\r\n\r\n### Option A: predefined \"/status-lists\" in the same path provides the group/pool/aggregation\r\n\r\n- Status List Providers must use a predefined URL path structure\r\n- requires a Referenced Token to find the group/pool/aggregation URL\r\n\r\n### Option B: well-known path\r\n\r\n- well-known may be hard to configure for some, especially when using CDN?\r\n- easier to find group/pool/aggregation, but only if Issuer = Status List Provider\r\n\r\n### Option C: additional URL inside the Referenced Token\r\n\r\n- two URLs\r\n- requires a Referenced Token to find the group/pool/aggregation URL\r\n\r\n### Option D: additional URL inside the Status List Token\r\n- two URLs\r\n- requires a Referenced Token to find the group/pool/aggregation URL\r\n- seems a little better than C as the Referenced Token remains smaller\r\n\r\n### Option E: URL provided by the Issuer metadata\r\n- easy to find the group/pool/aggregation URL\r\n- issuance protocol specific (seems bad)\r\n- this could be OpenID4VCI Issuer metadata and/or VICAL extension\r\n\r\nCurrent proposal is to use both Option E to easily find the URL and Option A/D to have an protocol-agnostic way.\r\n\r\n\r\n",
          "createdAt": "2024-04-26T14:41:21Z",
          "updatedAt": "2024-04-26T14:41:21Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Paul and I discussed a bit more and will create a draft PR with option D+E for further discussions / feedback.",
          "createdAt": "2024-05-08T06:13:02Z",
          "updatedAt": "2024-05-08T06:13:02Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call: Agreement that D+E seem the best options",
          "createdAt": "2024-05-15T06:24:41Z",
          "updatedAt": "2024-05-15T06:24:41Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Bikeshedding:\r\nDistribution as in CRL Distribution isn't quiet the same\r\nURLAggregationList?",
          "createdAt": "2024-05-15T06:28:43Z",
          "updatedAt": "2024-05-15T06:28:43Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDOJZ2aqs5o0jOy",
      "title": "Include the uri in the Status List Token?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/28",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If a verifier fetched the Status List Token and checked the status of the Referenced Token, he might want to store both of those, e.g. for archiving or regulative requirements.\r\nIF somebody were to review the data later, there is currently no guarantee that these matched together in the past, other than \u00ecss` is the same for both.\r\nI just thought about, if it makes sense to include the uri or some part of identifier in the Status List Token itself?",
      "createdAt": "2023-06-15T11:18:06Z",
      "updatedAt": "2023-06-17T06:24:33Z",
      "closedAt": "2023-06-17T06:24:32Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "That is also missing for the offline case (bring your status list with you) to make sure we have the correct status list. \r\n\r\nImho, we can just use the subject claim and bind it to the URI that is also used in the Referenced Token? \r\nA status list JWT would then look like this:\r\n```\r\n{\r\n  \"sub\": \"https://example.com/statuslists/1\", \r\n  \"iss\": \"https://example.com\",\r\n  \"iat\": 1683560915,\r\n  \"exp\": 1686232115,\r\n  \"status_list\": {\r\n    \"bits\": 1,\r\n    \"lst\": \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAA......IC3AYbSVKsAQAAA\"\r\n  }\r\n}\r\n```\r\nWhat do you think?",
          "createdAt": "2023-06-15T11:33:50Z",
          "updatedAt": "2023-06-15T11:33:50Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "yes, this is what I thought. `sub` is probably the best choice",
          "createdAt": "2023-06-15T11:35:56Z",
          "updatedAt": "2023-06-15T11:35:56Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved in #30 ",
          "createdAt": "2023-06-17T06:24:32Z",
          "updatedAt": "2023-06-17T06:24:32Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "I_kwDOJZ2aqs5pKHrK",
      "title": "\"bits\" in \"status\" claim example seems not right",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/35",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "NONE",
      "assignees": [
        "tplooker"
      ],
      "labels": [],
      "body": "The example of the \"Referenced Token\" content https://www.ietf.org/archive/id/draft-looker-oauth-jwt-cwt-status-list-00.html#section-4.1-3 has \"bits\" in the \"status\" claim but \"bits\" isn't defined for that claim https://www.ietf.org/archive/id/draft-looker-oauth-jwt-cwt-status-list-00.html#name-status-claim-format \r\n\r\nIt seems like \"bits\" is only for \"status_list\" claim (where it's defined https://www.ietf.org/archive/id/draft-looker-oauth-jwt-cwt-status-list-00.html#name-status-list-claim-format ) and should be removed from the aforementioned example. \r\n",
      "createdAt": "2023-06-19T21:43:52Z",
      "updatedAt": "2023-06-21T06:20:11Z",
      "closedAt": "2023-06-21T06:20:11Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for your review!\r\nThis seems correct from my view :+1: ",
          "createdAt": "2023-06-20T13:25:01Z",
          "updatedAt": "2023-06-20T13:25:01Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolution is to remove the \"bit\" field/attribute from the \"status\" claim in reference token example and instead only have it in the status list.",
          "createdAt": "2023-06-21T06:08:57Z",
          "updatedAt": "2023-06-21T06:08:57Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "I_kwDOJZ2aqs5rLl0G",
      "title": "Mixing JSON and CBOR formats",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/38",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "Is it allowed/recommended to have Status List Token in one format and the Referenced Token in another format?",
      "createdAt": "2023-07-11T06:25:53Z",
      "updatedAt": "2024-11-17T14:27:34Z",
      "closedAt": "2024-11-17T14:27:34Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Imho, I would not prevent this from this draft, but most likely people will keep within their ecosystem. ",
          "createdAt": "2024-08-07T06:56:37Z",
          "updatedAt": "2024-08-07T06:56:37Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- keep the option to have the mixing\r\n- add some guidance to implementers consideration",
          "createdAt": "2024-08-14T06:45:35Z",
          "updatedAt": "2024-08-14T06:45:35Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "I_kwDOJZ2aqs5rNHtH",
      "title": "Use zlib instead of Gzip?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/39",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "Gzip is for files and uses zlib internally",
      "createdAt": "2023-07-11T10:15:27Z",
      "updatedAt": "2024-01-15T08:14:56Z",
      "closedAt": "2024-01-15T08:14:56Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "After some research to the difference between gzip, zlib and Deflate, I would propose to consider zlib instead Gzip:\r\n- both rely on Deflate compression algorithm\r\n- Gzip is more focused on files\r\n- Gzip contains more metadata that we do not need as they are redundant in JWT or deprecated (modifytime, content type)\r\n- header is a little smaller",
          "createdAt": "2023-07-12T15:17:05Z",
          "updatedAt": "2023-07-12T15:17:05Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "(apologies in advance for any misunderstanding/confusion around the relationship between gzip, zlib, and Deflate) but FWIW JWE uses DEFLATE/RFC1951 directly for its optional compression https://datatracker.ietf.org/doc/html/rfc7516#section-4.1.3 (and there's one example test in https://www.rfc-editor.org/rfc/rfc7520.html#section-5.9.4), which might be an option here. Some/many JOSE/JWT libraries will already have some support for it.\r\n",
          "createdAt": "2023-07-18T18:04:42Z",
          "updatedAt": "2023-07-18T18:06:39Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "add recommendation for BEST_COMPRESSION mode",
          "createdAt": "2023-10-06T06:55:28Z",
          "updatedAt": "2023-10-06T06:55:28Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved in #80 ",
          "createdAt": "2024-01-15T08:14:56Z",
          "updatedAt": "2024-01-15T08:14:56Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOJZ2aqs5rRCxi",
      "title": "Rename claim names of Referenced Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/40",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "@tlodderstedt propoeses to:\r\n\r\n- rename `status` to something shorter\r\n- rename `uri` to `slt` (status list token)",
      "createdAt": "2023-07-11T19:31:30Z",
      "updatedAt": "2024-08-14T06:47:01Z",
      "closedAt": "2024-08-14T06:47:01Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I like the idea to rename `uri` to  `slt`. That makes it even clearer what to expect and we could still require `slt` to be an URI.",
          "createdAt": "2023-07-16T20:04:41Z",
          "updatedAt": "2023-07-16T20:04:41Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Status List Token:\r\n```\r\n{\r\n  \"typ\": \"statuslist+jwt\",\r\n  \"alg\": \"ES256\",\r\n  \"kid\": \"11\"\r\n}\r\n.\r\n{\r\n  \"iss\": \"https://example.com\",\r\n  \"sub\": \"https://example.com/statuslists/1\",\r\n  \"iat\": 1683560915,\r\n  \"exp\": 1686232115,\r\n  \"sl\": {\r\n    \"bts\": 1,\r\n    \"lst\": \"H4sIAMo_jGQC_9u5GABc9QE7AgAAAA\"\r\n  }\r\n}\r\n```\r\nsl (tatus list), bts (bits), lst (list)\r\nReferenced Token:\r\n```\r\n{\r\n  \"alg\": \"ES256\",\r\n  \"kid\": \"11\"\r\n}\r\n.\r\n{\r\n  \"iss\": \"https://example.com\",\r\n  \"sta\": {\r\n    \"slt\": \"https://example.com/statuslists/1\",\r\n    \"idx\": 0    \r\n  }\r\n}\r\n```\r\nsta (status), slt(status list toklen), idx (index)",
          "createdAt": "2023-07-17T08:07:15Z",
          "updatedAt": "2023-07-17T08:07:15Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- Given that this would be breaking changes and we have a considerable amount of specifications and having limited benefits on the other side, we tend to not make these changes",
          "createdAt": "2024-08-07T07:00:39Z",
          "updatedAt": "2024-08-07T07:00:39Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "I_kwDOJZ2aqs5rRDt8",
      "title": "Does Status List need to be signed as JWT?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/41",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "@bc-pi questions whether Status List needs to be signed as a JWT and what are the arguments for doing so",
      "createdAt": "2023-07-11T19:34:19Z",
      "updatedAt": "2024-01-15T07:07:13Z",
      "closedAt": "2024-01-15T07:07:13Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "My thinking behind the question was wondering if simplification might be possible/reasonable because the prototypical case (as I understand it anyway) it that an HTTPS URL of the status list is in the signed credential and the verifier obtains the list from that location and checks the status. A signature over the list itself isn't needed in that kind of case. \r\n\r\nAnd as a point of comparison: the jwt-issuer metatdata endpoint is only protected by TLS and is relied on it for key distribution/resolution. Which is similar to a unsigned status distribution protected by TLS.\r\n",
          "createdAt": "2023-07-17T16:21:16Z",
          "updatedAt": "2023-07-18T14:19:28Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See #57 ",
          "createdAt": "2023-08-23T06:47:33Z",
          "updatedAt": "2023-08-23T06:47:33Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "I_kwDOJZ2aqs5rkrR_",
      "title": "Encode StatusList as JSON Serialisation instead of Compact Serialisation",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/42",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "binary status list data is base64url-encoded for JSON.\r\nJWT then base64url-encodes this data again as part of encoding the body/payload.\r\nEncoding with JWS Compact-Serialisation avoids this and only base64url-encodes the binary status list data once",
      "createdAt": "2023-07-14T12:12:57Z",
      "updatedAt": "2023-07-18T19:22:42Z",
      "closedAt": "2023-07-18T19:22:42Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "transmitting the statusListToken over HTTP with gzip wins much of this overhead back, so the difference isn't as huge",
          "createdAt": "2023-07-14T15:06:31Z",
          "updatedAt": "2023-07-14T15:06:31Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "The JWS JSON Serializations also base64url encodes the payload https://www.rfc-editor.org/rfc/rfc7515#section-3.2 so isn't by itself a way to avoid double base64url encoding. ",
          "createdAt": "2023-07-18T17:19:22Z",
          "updatedAt": "2023-07-18T17:19:22Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@bc-pi thanks for pointing this out, I got this wrong!",
          "createdAt": "2023-07-18T19:22:33Z",
          "updatedAt": "2023-07-18T19:22:33Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDOJZ2aqs5rxPUF",
      "title": "Strip = from Base64url encoding?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/44",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-17T15:48:46Z",
      "updatedAt": "2024-08-28T06:30:49Z",
      "closedAt": "2024-08-28T06:30:49Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "the text is existing in JWT encoding, does it make sense to emphasize this change from standard base64url encoding again in our spec?",
          "createdAt": "2023-07-18T11:01:56Z",
          "updatedAt": "2023-07-18T11:01:56Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I like the solution in sd-jwt - they introduced it as terminology:\r\n> base64url denotes the URL-safe base64 encoding without padding defined in Section 2 of [[RFC7515](https://drafts.oauth.net/oauth-selective-disclosure-jwt/draft-ietf-oauth-selective-disclosure-jwt.html#RFC7515)].\r\n\r\nShould we move that to terminology and reference via base64url in the text?",
          "createdAt": "2024-08-07T13:24:57Z",
          "updatedAt": "2024-08-07T13:24:57Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOJZ2aqs5r3dBG",
      "title": "key resolution",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/45",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Do we want normative text/options for key resolution?",
      "createdAt": "2023-07-18T11:02:18Z",
      "updatedAt": "2024-02-24T15:33:29Z",
      "closedAt": "2024-02-24T15:33:29Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "We should use whatever the referenced token is using for key resolution and put it out of scope for this spec? ",
          "createdAt": "2023-08-23T06:54:43Z",
          "updatedAt": "2023-08-23T06:54:43Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "spec should say that key resolution is out of scope",
          "createdAt": "2023-10-20T09:25:53Z",
          "updatedAt": "2023-10-20T09:25:53Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Should be defined elsewhere - e.g., https://github.com/vcstuff/oid4vc-haip-sd-jwt-vc/issues/65",
          "createdAt": "2023-10-20T09:26:16Z",
          "updatedAt": "2023-10-20T09:26:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Should we add this to design considerations? #75 ",
          "createdAt": "2023-11-01T11:58:42Z",
          "updatedAt": "2023-11-01T11:58:42Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Good point. It would probably make sense to point that out in the spec itself (remark that it is out of scope). ",
          "createdAt": "2023-11-01T13:18:10Z",
          "updatedAt": "2023-11-01T13:18:10Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I guess we can close this as #75 was merged?",
          "createdAt": "2024-02-24T14:03:23Z",
          "updatedAt": "2024-02-24T14:03:23Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOJZ2aqs5r3eCL",
      "title": "Mandatory signature algorithms?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/46",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Do we want normative text on required signature algorithms, e.g. ES256?",
      "createdAt": "2023-07-18T11:05:11Z",
      "updatedAt": "2024-08-14T06:49:20Z",
      "closedAt": "2024-08-14T06:49:20Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Imho, this should be part of an interop profile and not part of this spec. We should stick to / allow jose/cose in this work.",
          "createdAt": "2023-08-23T06:47:13Z",
          "updatedAt": "2023-08-23T06:47:23Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- agreed to close this\r\n- JOSE already has mandatory ones\r\n- mandatory algos didn't seem to age will in the past\r\n- leave it to profiles",
          "createdAt": "2024-08-14T06:49:20Z",
          "updatedAt": "2024-08-14T06:49:20Z"
        }
      ]
    },
    {
      "number": 47,
      "id": "I_kwDOJZ2aqs5r3ya-",
      "title": "requirement for status list size",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/47",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "As we declined to include a size property to the status list, we do not have other means than to decode&decompress the encoded status list and get status list size from the byte array length/size:\r\nstatus list size = byte array size * 8 / bits\r\nTherefore it makes to add the requirement that status list size must \"fill up\" to bytes",
      "createdAt": "2023-07-18T12:01:54Z",
      "updatedAt": "2024-09-24T18:54:45Z",
      "closedAt": "2024-09-24T18:54:45Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "ready for PR after #57 ",
          "createdAt": "2023-08-23T06:45:24Z",
          "updatedAt": "2023-08-23T06:45:24Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- only danger that we currently see is that some bits at the end have random/un-assigned values\r\n- leaving this open for now",
          "createdAt": "2024-08-14T06:56:30Z",
          "updatedAt": "2024-08-14T06:56:30Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- maybe add this as a recommendation in implementation consideration",
          "createdAt": "2024-08-28T06:42:46Z",
          "updatedAt": "2024-08-28T06:42:46Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "I_kwDOJZ2aqs5tceUV",
      "title": "Add claim for used compression algorithm",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/50",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "We should consider to add a claim into the status list token that describes the used compression algorithm. This would allow us to easily adopt other options for compression.",
      "createdAt": "2023-08-04T06:57:57Z",
      "updatedAt": "2023-12-16T21:56:00Z",
      "closedAt": "2023-12-16T21:56:00Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm ok as long as we restrict the mandatory or allowed algorithms to 1 to start with",
          "createdAt": "2023-08-04T07:11:39Z",
          "updatedAt": "2023-08-04T07:11:39Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Yeah, I would see it as an extension point for the future. Initially I do believe, we should start with one option. ",
          "createdAt": "2023-08-04T08:08:34Z",
          "updatedAt": "2023-08-04T08:08:34Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Use `_alg` claim, gzip or zlib as mandatory default algorithm",
          "createdAt": "2023-08-23T06:43:16Z",
          "updatedAt": "2023-08-23T06:43:45Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@c2bo @tplooker and me agreed to not add this feature as\r\n- the is no reason currently as we do not envision other compressions\r\n- this mechanism could easily be added in backwards-compatible fashion later on\r\n- there would be no implementation logic for this claim right now\r\n- we are missing a registry for compression algs",
          "createdAt": "2023-11-01T21:56:08Z",
          "updatedAt": "2023-11-01T21:56:08Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "pending close",
          "createdAt": "2023-11-02T07:32:02Z",
          "updatedAt": "2023-11-02T07:32:02Z"
        }
      ]
    },
    {
      "number": 51,
      "id": "I_kwDOJZ2aqs5thDsV",
      "title": "\"A Status List can not represent multiple statuses per Referenced Token\"",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/51",
      "state": "CLOSED",
      "author": "mprorock",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "There are multiple cases that require multiple statuses to be attached to something.... this draft is also covering cbor\r\n\r\ncan we at least for cbor permit a flag that lets us embed an array of bytes into a particular status index - that would permit this use case to be covered easily",
      "createdAt": "2023-08-04T21:51:43Z",
      "updatedAt": "2024-10-16T06:34:30Z",
      "closedAt": "2024-10-16T06:34:30Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Multiple statuses are reflected by having more than 1 bit per index (through bits 2,4 or 8).\r\nBeside this, the option to have multiple Status Lists per Referenced Token still persists, however this is probably not a major use case.\r\nAdding the option for arrays in the Status List seems too complicated as we already have multiple bits as an option",
          "createdAt": "2023-08-23T06:21:12Z",
          "updatedAt": "2023-08-23T06:21:12Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- the design considerations aim for simplicity for the majority of use cases\r\n- the requirement seems niche to us and complicates the design, while we already have the ability to reflect more than 0/1 with `bits` > 1\r\n- given that we have the extension point at the `status` claim, one could build an extended status list that allows for such feature\r\n- however, we would like to understand these use cases better",
          "createdAt": "2024-08-28T06:51:24Z",
          "updatedAt": "2024-08-28T06:51:24Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- pending close without further feedback",
          "createdAt": "2024-10-09T06:39:46Z",
          "updatedAt": "2024-10-09T06:39:46Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "I_kwDOJZ2aqs5thEp4",
      "title": "arbitrary size restrictions on status",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/52",
      "state": "CLOSED",
      "author": "mprorock",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Is there a good reason to limit size to \"Each status of a Referenced Token MUST be represented with a bit size of 1,2,4, or 8\"\r\n\r\nThis can easily be resolved by setting a `size` parameter along side `bits` as suggested in #47 \r\n\r\nthen you can easily seek to the bits you are after since you know the max size and the number of bits each status takes up \r\n\r\nThis also permits implementers to cover both cases where packing into 3 bits is desireable for space reasons, or have a large number of potential statuses to reflect\r\n",
      "createdAt": "2023-08-04T21:57:14Z",
      "updatedAt": "2024-09-11T06:19:33Z",
      "closedAt": "2024-09-11T06:19:33Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "This was mainly a choice for simplicity of implementation: by only allowing bit sizes of  1,2,4,8, we only need to manipulate a single byte in an array. ",
          "createdAt": "2023-08-05T07:42:14Z",
          "updatedAt": "2023-08-05T07:42:14Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Optimisations for 3 bits are not worth it, as the expected number of usecases is negligible and the optimisation is not really worth it as the compression is still working well enough for 4 bits",
          "createdAt": "2023-08-05T07:50:18Z",
          "updatedAt": "2023-08-05T07:50:18Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "todo: add design considerations to make implementations as simple as possible / pending close",
          "createdAt": "2023-08-23T06:14:35Z",
          "updatedAt": "2023-08-23T06:14:35Z"
        }
      ]
    },
    {
      "number": 53,
      "id": "I_kwDOJZ2aqs5thFP0",
      "title": "restriction to numeric status",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/53",
      "state": "CLOSED",
      "author": "mprorock",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "\"Status Types MUST be numeric values between 0 and 255\" \r\nProbably better to just have hex pass through if you are after numerics, rather than set a status type, otherwise, why would we not permit a message to be attached and referenced, perhaps from a lookup table external.  see the `credentialSubject.statusMessages` implementation/spec [defined in the equivalent w3c work](https://w3c.github.io/vc-status-list-2021/#statuslist2021credential)\r\n",
      "createdAt": "2023-08-04T22:00:57Z",
      "updatedAt": "2024-10-09T06:38:36Z",
      "closedAt": "2024-10-09T06:38:36Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- we need further information to understand this issue\r\n- Status Types are represented as a number with 1 to 8 bits according to the chosen `bits` value\r\n- hex is just the representation, but the actual usage in this draft is binary\r\n- we favor few, simple status types described in a global registry to avoid misunderstandings\r\n- in this registry there may be some \"application-specific\" types, where ecosystems could define this on their own, but out of scope for this spec\r\n- pending close without further feedback",
          "createdAt": "2024-09-11T06:24:23Z",
          "updatedAt": "2024-09-11T06:24:23Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "I_kwDOJZ2aqs5ttgYW",
      "title": "add small section on Design Considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/54",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-08T06:25:52Z",
      "updatedAt": "2024-01-15T07:10:52Z",
      "closedAt": "2024-01-15T07:10:52Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "add expected revocation rate(0,5%, 1%, 2%) and status list size(?)",
          "createdAt": "2023-08-23T06:34:55Z",
          "updatedAt": "2023-08-23T06:35:59Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "simplicity of design, simplcitiy for implementors",
          "createdAt": "2023-08-23T06:37:29Z",
          "updatedAt": "2023-08-23T06:37:29Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "internet statistics:\r\naverage revocation rate 1,2%\r\npeak revocation rate 10%\r\nsize: ?\r\n",
          "createdAt": "2023-08-31T13:57:53Z",
          "updatedAt": "2023-08-31T13:57:53Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Scalable: Must scale to millions (100\u2019s millions) of credentials\r\nIssuer Herd Privacy: Able to protect Relying Parties and Holders/Users from Issuer knowing where a given PID/(Q)EAA is being verified/used\r\nWork with common formats: Support JOSE/COSE based tokens/credentials, i.e. can be used natively for ISO mdoc and IETF SD-JWT-VC\r\nCaching Support: Enable verifying parties to cache status lists for offline verification\r\n",
          "createdAt": "2023-10-20T09:19:58Z",
          "updatedAt": "2023-10-20T09:19:58Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "I_kwDOJZ2aqs5ttlQN",
      "title": "Define a protocol how to fetch the status list token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/55",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Using HTTP GET...",
      "createdAt": "2023-08-08T06:43:14Z",
      "updatedAt": "2023-10-06T06:56:40Z",
      "closedAt": "2023-10-06T06:56:39Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Close with #63 ",
          "createdAt": "2023-10-06T06:56:39Z",
          "updatedAt": "2023-10-06T06:56:39Z"
        }
      ]
    },
    {
      "number": 56,
      "id": "I_kwDOJZ2aqs5tySPI",
      "title": "Add option for plain status list (unsigned)",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/56",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-08T19:16:47Z",
      "updatedAt": "2024-01-15T07:07:13Z",
      "closedAt": "2024-01-15T07:07:13Z",
      "comments": []
    },
    {
      "number": 58,
      "id": "I_kwDOJZ2aqs5uymgp",
      "title": "Add section about CORS",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/58",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "We should probably add a small section mentioning that `Access-Control-Allow-Origin` should be set to `*` when explaining the endpoint. ",
      "createdAt": "2023-08-21T07:18:20Z",
      "updatedAt": "2024-08-29T07:31:26Z",
      "closedAt": "2024-08-29T07:31:25Z",
      "comments": []
    },
    {
      "number": 59,
      "id": "I_kwDOJZ2aqs5vBj_s",
      "title": "IANA considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/59",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "Propose `application/statuslist+json` and `application/statuslist+jwt` as media types",
      "createdAt": "2023-08-23T06:49:17Z",
      "updatedAt": "2023-10-23T06:12:02Z",
      "closedAt": "2023-10-23T06:12:02Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "same for jwt types?",
          "createdAt": "2023-10-20T11:10:15Z",
          "updatedAt": "2023-10-20T11:10:15Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "Note that JWT `typ` values are actually media types https://www.rfc-editor.org/rfc/rfc7519#section-5.1 which is a little odd sometimes but that's how it is - so you don't need anything different in terms of registration for a jwt type b/c it is a media type. And the JWT BCP does recommend explicit typing using `typ` https://www.rfc-editor.org/rfc/rfc8725#name-use-explicit-typing for better or worse, which would suggest that `application/statuslist+jwt` be registered. But it and `application/statuslist+json` would also probably have utility in places like HTTP `accept` and `content-type` headers so would make sense to register both. \r\nThere are some media-type-registration requests in SD-JWT that could be borrowed from https://github.com/oauth-wg/oauth-selective-disclosure-jwt/blob/master/draft-ietf-oauth-selective-disclosure-jwt.md#media-type-registration or you can look at entries in the registry https://www.iana.org/assignments/media-types/media-types.xhtml \r\n",
          "createdAt": "2023-10-20T20:43:40Z",
          "updatedAt": "2023-10-20T20:55:15Z"
        }
      ]
    },
    {
      "number": 60,
      "id": "I_kwDOJZ2aqs5vCfm5",
      "title": "Privacy Considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/60",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "batch issued credentials might be revealed in an status list update, which might correlate the related referenced tokens/credentials",
      "createdAt": "2023-08-23T09:22:23Z",
      "updatedAt": "2024-03-04T06:08:12Z",
      "closedAt": "2024-03-04T06:08:12Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "improve privacy/prevent tracking by regular re-issuance of referenced tokens",
          "createdAt": "2023-10-20T09:14:30Z",
          "updatedAt": "2023-10-20T09:14:30Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "I_kwDOJZ2aqs5wvEbi",
      "title": "Privacy requirement - how to provide and demonstrate the consent given to the RP to allow it to check the revocation status",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/62",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "We're going to implement this beautiful draft. Aside of our requirements already satisfied by the current text, we have debated about the following privacy concern:\r\n\r\n- Once an RP has obtained the VP from a wallet instance, and the related status list ref related to one or more digital credential, the RP may continuously check the status of the credentials without any control/limit. This raises a privacy issue since an RP may control the mobile driving license of a citizen until this expire and completely out of the scope of the historical authentication made by the citizen to the RP, and the consent given.\r\n\r\nanother example: by asking the EAA related to an affiliation, an RP may check if a day a User was fired. And so on, exposing personal information that are not intended to be monitored/controlled over time.\r\n\r\nThis raised to our minds the requirement to protect the status endpoint for specific audiences and cryptographically, using sender-constrained tokens.\r\n\r\nSince the User gives the consent for the presentation of the credentials, then the Holder should issue a grant token for accessing to the status of the credentials.\r\n\r\nWe take into account that the RS that hosts the status list MUST not inspect or know the identity of the requester (the RP) because it must not track the usage of a specific credential, owned by a citizen, to a specific RP.\r\n\r\nHere some points of discussion to be further explored:\r\n\r\n1. The RP MUST provide to the Wallet Instance an ephemeral key for each requested credential within the presentation request\r\n2. the Wallet Instance issues a signed status list token, by signing it using the private key referred to the public one included in the credential cnf.jwk. \r\n3. The status list token doesn't contains any information about the RP.\r\n4. The signed status list token is provided to the RP with a PoP bound to the ephemeral key provided at point 1\r\n5. the RP can only use that status list token to the RS that hosts the status list by cryptographically proving its possession\r\n6. the RS that provide the status list doesn't know the identity of the client that consumes the status list\r\n7. the status token expires in a short period (less than hours), taking out any possibility to grant the access to that anonymous client the status list for that specific credential\r\n8. each time in the future the RP needs to check the status of a previously obtained digital credential, it MUST ask to the Holder (via email or any other digital delivery under the sole control of the User and offered by this latter to the RP) a presentation of that digital credential (by type)\r\n\r\nin this way the user is always in full control of which RP is going to check the status of their digital credential.\r\n\r\nIs there any idea, concern, issue, enhanchement to be considered before all?\r\n\r\nIf I miss something please don't esitate to bring me on the right path, I was quite far for a long time from this draft, then here my excuse in advance\r\n\r\n",
      "createdAt": "2023-09-11T22:50:49Z",
      "updatedAt": "2024-08-28T08:31:19Z",
      "closedAt": "2024-08-28T08:31:19Z",
      "comments": [
        {
          "author": "fmarino-ipzs",
          "authorAssociation": "NONE",
          "body": "Some use cases require the credential status to be verified only when the holder is presenting it. In this case an easier approach could be that the Wallet gets the status list signed with the timestamp and presents it to the verifier as a vp. \nIf the verifier requires to check the status of the credential in the future then, following the comment of @peppelinux , the wallet provides a DPoP access token which should be opaque for privacy reasons and with this token the verifier can grant the access to the status list. This grant has an expiration date under the control of the user. Both approaches could be valuable. ",
          "createdAt": "2023-09-16T20:24:29Z",
          "updatedAt": "2023-09-16T20:24:29Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for your feedback @peppelinux @fmarino-ipzs !\r\nI understand your concerns and we are aware of them, as they are referenced but not yet fully written down in the privacy considerations section.\r\n\r\nTowards your proposed solution:\r\n\r\n- \"Wallet Instance issues a signed status list token\" -> beware that the term status list token is already used iun the terminology. I assume you mean that the Wallet Instance provides a sort of access token to the RP?\r\n- \"the RS that provide the status list doesn't know the identity of the client that consumes the status list\" -> in reality I do not expect RP to obfuscate/reroute its request to the Status List Provider, so usually by the IP address the Status List Provider may have a clue who the RP might be. The main privacy benefit comes from the Status List Provider not knowing which particular credential status the RP is interested in, thats the herd privacy.\r\n- How does the RS/Status List Provider in your case verify that the token is valid? It would need to know all the cnf.jwk that might sign such a token and in that way the RS can backtrack which credential status is actually requested and destorying the herd privacy\r\n\r\nFirst of all, there might be lots of use cases that do not have a problem with this and for some usecases this might a feature, as the RP can recheck without needing to recontact the holder. The recheck might in some usecases not be a privacy problem, especially for all organisational identity related topics.\r\n\r\nHowever, if this is a problem, I see in general 3 categories of approaching:\r\n1. holder gives access token to RP\r\n2. holder gives the whole status list to RP\r\n3. RP authenticates to authorized status list\r\n\r\nRegarding Option 1: I'm really unsure were this access token should come from and how the Status List Provider should verify it. If the access tokens are generated by the Issuer and given to the Holder, than the Issuer could easily link these tokens back to the Holder, destroying herd privacy. If the Wallet authorizes the status list access with a self-chosen access token that was exchanged during issuance and there is enough trust in the Issuer that he does not link those access tokens, then the wallet might sign a RP request by this way and it might be a solution(I think this is what you meant)\r\n\r\nRegarding Option 2: In this case the Status List would need to be protected and the Holder needs some capability to access it. Again, the mechanism how this works will always allow the Issuer to link the request back to the Holder, therefore allowing the Issuer to track the usage of the issued credentials. If the Wallet authorizes itself with a self-chosen access token that was exchanged during issuance and there is enough trust in the Issuer that he does not link those access tokens, this is a solution.\r\n\r\nRegarding Option 3: The RP authenticates and authorizes its access to the Status List. This gives the identity of the RP to the Status List Provider, but as I've written above, the identity might not be a secret anyway as the IP address of the request might be linked to the RP identity. By this means, only authorized RPs have access to the status list, yet they may recheck the status list more often, but it would be observable by the Status List Provider. Given that we aim for large Status Lists for better herd privacy, high volume RPs might anyway get constantly information on all the entities in the status list, even in a stricter regime like Option 1&2.\r\n\r\nOption 1&2 puts a lot of trust in the Issuer, while Option 3 seems easier/better scalable\r\n\r\n",
          "createdAt": "2023-09-20T19:00:55Z",
          "updatedAt": "2023-09-20T19:00:55Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "> How does the RS/Status List Provider in your case verify that the token is valid? It would need to know all the cnf.jwk that might sign such a token and in that way the RS can backtrack which credential status is actually requested and destorying the herd privacy\r\n\r\nthis is a case where the issuer of the credential is the same that hosts the status list, then the credential and the revocation are linked within the issuer. The RP obtains a token signed by wallet instance using the private which the public part are referenced in the holder key binding of the credential `cnf.jwk`\r\n\r\nThe RP has a PoP for the use of this token, then it's a dpop token.\r\n\r\n----------------------------------------------------------------------------------------\r\n\r\n> holder gives the whole status list to RP\r\n\r\nthe status list is then a static attestation of non-revocation, considering millions of issued PID this sounds very challenging in terms of payload size and signature costs of such big payload. This then should be valid within a short exp \r\n\r\n---------------------------------------------------------------------------------------\r\n> RP authenticates to authorized status list\r\n\r\nThis brings back the privacy issue of the idp that knows which RP the user has just used in the present, since the RP must check the status list during the presentation phase \r\n\r\n ",
          "createdAt": "2023-09-20T23:53:24Z",
          "updatedAt": "2023-09-20T23:53:24Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Here I propose a way to simplify the implementation, by removing the PoP from the grant token, issued by the wallet instances and provided to the RP for consume the status lists:\r\n\r\n![immagine](https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/assets/1297620/5a3aec8a-ada0-4943-ae88-c17164d42f34)\r\n\r\n\r\nplantuml sources: [here](https://plantuml-server.kkeisuke.dev/svg/VLIxZjim4Epv5Okhak9-u8hWWbI718XnATAaeSazUM4UoV0Xmt-V8INPSgoaCKJkxCxiSE3dN7GgzTqfNKlmzNtFIQc8Ep4IjI_qy5CxnuLUFA3Uy0FfJ2UvnNn9RDaNqOvUSgwSEihyXVfHTAcPlaakj4jX53i3iukto5TsP_43xN1vxf0KbHfIgB4JD25AcoAZBjnuJaAFd_3nH8b_LmR1MqXaPP02JUOgJvPkqpl0_DJARGmQQhJjwxuF6hluNvxsuctJLWuyNyAESkZdGt3OYOvyli32MwzSHobmqkEizllNBWId4qvnCcMBNrbUxylUqcB8Bd46IXS9VZOYOQi1ZnPNfOipAiKxnatWFopyF9FC_ROQxYkEaKeuieT75qEssb7NaA_1CmOpKPe3coCDgRr-7x9QPD48YJ7upDFqXQrlCm5vrAx2eDpduo3jDTkRDIcNzbPSwsrcBbxE4UrovibJHBg-rPCxX1Y3QrwYyBzb0FomPvqGZNx-E6NWRlQ6MrKikg-RDTXw56KPF1Gblb4Jwzw9wK5CxD29bSDc42Vh4cE4p-ljxisv2TegH0XnHptZ5tybVm00.svg\r\n)\r\n\r\nNotes:\r\n\r\n- the grant token is a bearer token signed by the Wallet Instance using the private key related to the public key used in the holder key binding of the credential\r\n- the grant token should be provided within the vp token related to a specific credential. Then it is not SIOPv2 issuance because the RP does not ask for id tokens in the scopes of the request, the grant token is contained in each vp_token\r\n- it should be short lived\r\n- it is provided to the RP, that uses it as a bearer\r\n- the Status List Server just has to validate the signature, having the proof that the grant token was signed by the legitimate holder\r\n\r\nthe grant token doesn't give nothing about the RP, but just:\r\n\r\n````\r\niss: wallet instance entity id\r\naud: status list endpoint\r\niat: created\r\nexp: valid until this timestamp\r\nrsi: (revocation status uid) unique id of the revocation entry (index uid, whatever)\r\n````\r\n\r\n@paulbastian this proposal would be the 4th option, since the RP is anonimously authorizated to consume a specific status list entry",
          "createdAt": "2023-10-05T07:54:21Z",
          "updatedAt": "2023-10-05T09:15:06Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Regarding my previous proposal, nothing prevents us to include in the token a static state of the revocation, according to what we already have within the current draft\r\n\r\nthen `rsi` can be replaced with a status member, with a ref with or without a static chunk not to be intended as valid beyond the exp of the token that carries it \r\n\r\n@fmarino-ipzs ^",
          "createdAt": "2023-10-05T10:57:42Z",
          "updatedAt": "2023-10-05T10:57:53Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "But through the signature the issuer knows that there is a communication between RP and a specific wallet instance?",
          "createdAt": "2023-10-05T13:02:03Z",
          "updatedAt": "2023-10-05T13:02:03Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "> But through the signature the issuer knows that there is a communication between RP and a specific wallet instance?\r\n\r\nI don't think so, in the limits that an RP would not be tracked though its IPv4 by the Status List Provider, because the token to consume the status list doesn't carry any RP identifier, it's just signed with the private key in possession of the holder related to the public key contained in the digital credential holder key binding. The RP uses it as a bearer token without any client authentication",
          "createdAt": "2023-10-05T14:32:21Z",
          "updatedAt": "2023-10-05T16:23:29Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "@paulbastian looking for a good fit of the option 2, where the wallet instance provides the non-revocation attestation to the RP during the presentation phase, we have moved some initial steps in the definition of the [revocation request flow](https://www.plantuml.com/plantuml/uml/TP9HRzC-5CNV_IckhF_3firTkYRjlvMAXZgGEiGsqKAVtUIklJIrW-saJ0W-EzT9DuQ0frZtT-npdECh7xGBzRuK5NyffqgR07Abon83p0rZawC4xU50lslctjVeMaH2YEaKFc1ZSnt86bv-gT47c4w5E12eLq2JbzmT-Sbg_lh7_TtzELpJXe8kOUQmG1E8bpUh9J0x5SO61DkWOwT_wyGt0I1rkP4Ja6yMbzbGdiT9UApYn3sxgwFxsUT3w2GxAgBaFqwZPhTlrStgtVnQ2l5TzEAfahoFF5cdWpGR90hxML-bUPgeyV_haHgb-IZJ6JwCXaayKEgwFMyRGkKd5nSL5Qfojg42NG-_wdrLOi-wJQib7LZRpv9qE1xt1yCuUx1ktuvbav_vGXs3olpvqctShWAre8t1WaCl9ISMOhd5ltN17Dv_N2nXZU3RBTnfs49WUUMeqG5XXuyWm66f0-DWErYlIyfRbbiJD3rj9TFoNwdWf8i4NQHeUIe4cW9YXK8ylOHFkgGY-iKVpjNz2LxK6taKiEB0ahiTN2OftyfNrdY4MmipJiLYSSLE_9P_0W00) (WI 2 Issuer) and [non-revocation attestation request](https://www.plantuml.com/plantuml/uml/dLDHRzem67pth_XaxM5JwpIC10OIKn4mDTt6AaB7O-Kc7yHjSBBO8Pqc_llia45HHn_wXBcxVBxlJhvKcXUwNASaDxyY4ZcN6kY2fobg2AIXPOGKk89A76i2fKeiQaeGGWO3c6QIpN2JHLoBJC9GQrHwTvxXhzByWS60a4e0-moY_vg-QFJl5y4Gj4XZX9iVD-Sm5YkXUGgZ0cEKMfZZzM9kkGz4PXeXss01WfpMaJy4WF9qHVj09-57lqFFBQ9_vnQHnbEnzyJumHDhF9qzL7htoQE8xIVlZ4SscdvXruklmPWIiYMElOKAfIpltdjjps-x35j-YtcHvxBUf_ikwtfHr-S-BhiTrmwalApd9LhdgdznaOkOvKMs4J4M3ZxnTPwYanMhMYkuDjgMxtgTNg_LxbXicHNh6gQRw4p5h35Aetq8jTrTSImKAuanCx5GuvYWZC4cICY_UdxoLCHS8zZzJ78lYMVfMdulCBYbZxE4PrdQCiXHOMzjvMKRGHZUJcQdodXpkFYKDrZNTGrs7EnTmbLINp-QJSQJwJmOVcDNm_2A_aTtr-of4iwQJMaabmQoAG1zg1xjsN6SBH3OsdRc2OAHWA5WmzCIuVjjE0TJTvH09NG2sYWoYT0i5GEni90rKM3AjS7YvbaS31rwh-ip_LMcm1cgF9CAwz6dtsdJ8o6NPagvJly2) (WI 2 Issuer).",
          "createdAt": "2023-10-16T17:18:45Z",
          "updatedAt": "2023-10-16T17:18:45Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I would add that given that the previous proposal is related to the issuance and presentation of non-revocation attestations, I assume that the user authentication is not required for the issuance of the non-revocation attestation because attestation is not a digital credential",
          "createdAt": "2023-10-17T09:56:02Z",
          "updatedAt": "2023-10-17T09:56:02Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @paulbastian looking for a good fit of the option 2, where the wallet instance provides the non-revocation attestation to the RP during the presentation phase, we have moved some initial steps in the definition of the [revocation request flow](https://www.plantuml.com/plantuml/uml/TP9HRzC-5CNV_IckhF_3firTkYRjlvMAXZgGEiGsqKAVtUIklJIrW-saJ0W-EzT9DuQ0frZtT-npdECh7xGBzRuK5NyffqgR07Abon83p0rZawC4xU50lslctjVeMaH2YEaKFc1ZSnt86bv-gT47c4w5E12eLq2JbzmT-Sbg_lh7_TtzELpJXe8kOUQmG1E8bpUh9J0x5SO61DkWOwT_wyGt0I1rkP4Ja6yMbzbGdiT9UApYn3sxgwFxsUT3w2GxAgBaFqwZPhTlrStgtVnQ2l5TzEAfahoFF5cdWpGR90hxML-bUPgeyV_haHgb-IZJ6JwCXaayKEgwFMyRGkKd5nSL5Qfojg42NG-_wdrLOi-wJQib7LZRpv9qE1xt1yCuUx1ktuvbav_vGXs3olpvqctShWAre8t1WaCl9ISMOhd5ltN17Dv_N2nXZU3RBTnfs49WUUMeqG5XXuyWm66f0-DWErYlIyfRbbiJD3rj9TFoNwdWf8i4NQHeUIe4cW9YXK8ylOHFkgGY-iKVpjNz2LxK6taKiEB0ahiTN2OftyfNrdY4MmipJiLYSSLE_9P_0W00) (WI 2 Issuer) and [non-revocation attestation request](https://www.plantuml.com/plantuml/uml/dLDHRzem67pth_XaxM5JwpIC10OIKn4mDTt6AaB7O-Kc7yHjSBBO8Pqc_llia45HHn_wXBcxVBxlJhvKcXUwNASaDxyY4ZcN6kY2fobg2AIXPOGKk89A76i2fKeiQaeGGWO3c6QIpN2JHLoBJC9GQrHwTvxXhzByWS60a4e0-moY_vg-QFJl5y4Gj4XZX9iVD-Sm5YkXUGgZ0cEKMfZZzM9kkGz4PXeXss01WfpMaJy4WF9qHVj09-57lqFFBQ9_vnQHnbEnzyJumHDhF9qzL7htoQE8xIVlZ4SscdvXruklmPWIiYMElOKAfIpltdjjps-x35j-YtcHvxBUf_ikwtfHr-S-BhiTrmwalApd9LhdgdznaOkOvKMs4J4M3ZxnTPwYanMhMYkuDjgMxtgTNg_LxbXicHNh6gQRw4p5h35Aetq8jTrTSImKAuanCx5GuvYWZC4cICY_UdxoLCHS8zZzJ78lYMVfMdulCBYbZxE4PrdQCiXHOMzjvMKRGHZUJcQdodXpkFYKDrZNTGrs7EnTmbLINp-QJSQJwJmOVcDNm_2A_aTtr-of4iwQJMaabmQoAG1zg1xjsN6SBH3OsdRc2OAHWA5WmzCIuVjjE0TJTvH09NG2sYWoYT0i5GEni90rKM3AjS7YvbaS31rwh-ip_LMcm1cgF9CAwz6dtsdJ8o6NPagvJly2) (WI 2 Issuer).\r\n\r\nThis is similar to Option 2, similar to OCSP-stapling and similar to the concept named ValidityCredentials. In these cases you should not send the whole status list but only the status for the requested credential.\r\nIt is a valuable alternative but is probably out of scope for the StatusList draft.",
          "createdAt": "2023-10-20T13:51:38Z",
          "updatedAt": "2023-10-20T13:52:41Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Option 1 seems complicated and has privacy iussues.\r\nOption3 does not solve the problem either but might be a feature",
          "createdAt": "2023-10-20T13:53:06Z",
          "updatedAt": "2023-10-20T13:53:06Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I would suggest to introduce and define the non-revocation attestation using the elements already defined in this specs and consolidate the option 2, at the same time start our considerations about the possibility to use these attestations as bearer tokens to enable the option 3 where the use cases requires it",
          "createdAt": "2023-10-21T11:03:42Z",
          "updatedAt": "2023-10-21T11:03:42Z"
        },
        {
          "author": "fmarino-ipzs",
          "authorAssociation": "NONE",
          "body": "I think we agree that any solution does not fit all use cases well. Given that, the best way forward is to start with the requirements and use cases and define a more general draft on Digital Credential Revocation, instead of focusing only on the representation of status lists. In this way, the different flows and processes could be defined according to the use cases and security, privacy and interoperability requirements (in light of EUDI Wallet as well). \r\n@paulbastian WDYT? ",
          "createdAt": "2023-10-23T09:11:16Z",
          "updatedAt": "2023-10-23T09:11:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we have to discuss this with the other co-authors and at IETF Prague. We also plan to schedule a semi-regular open call, where these things could be argued.",
          "createdAt": "2023-10-23T09:32:19Z",
          "updatedAt": "2023-10-23T09:32:19Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@peppelinux @fmarino-ipzs I assume this issue is solved with your draft on status assertions?\r\nPending close",
          "createdAt": "2024-08-14T07:12:40Z",
          "updatedAt": "2024-08-14T07:12:52Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Ok, the draf is here: https://datatracker.ietf.org/doc/draft-demarco-oauth-status-assertions/",
          "createdAt": "2024-08-28T08:31:19Z",
          "updatedAt": "2024-08-28T08:31:19Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "I_kwDOJZ2aqs5xlUky",
      "title": "Use consistent terminology on Issuer and Verifier",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/64",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "Sometimes we use Verifier, sometimes we use Relying Party.\r\nAfter deciding this, we should add them to the Terminology",
      "createdAt": "2023-09-20T19:39:04Z",
      "updatedAt": "2023-10-23T06:10:52Z",
      "closedAt": "2023-10-23T06:10:52Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As this is moving to OAuth Security working Group, we should adopt Relying Party as terminology",
          "createdAt": "2023-10-20T09:06:03Z",
          "updatedAt": "2023-10-20T09:06:03Z"
        }
      ]
    },
    {
      "number": 66,
      "id": "I_kwDOJZ2aqs5yOZdc",
      "title": "Compatibility with Redis Bitmaps",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/66",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://redis.io/docs/data-types/bitmaps/\r\n\r\nignoring the compression questions for now... is there some reason why we would not support this interface?\r\n\r\n",
      "createdAt": "2023-09-27T21:43:12Z",
      "updatedAt": "2024-03-15T13:21:35Z",
      "closedAt": "2024-03-15T13:21:35Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "amazing.",
          "createdAt": "2023-10-03T10:23:44Z",
          "updatedAt": "2023-10-03T10:23:44Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We had a look at this, but it does not seem to offer a mechanism to fetch the whole bitmap in one command or did I miss anything? If I fetch the whole list with single bit query operations seems very inefficient.\r\nWe are currently discussing an architecture at Bundesdruckerei, are you going to IIW next week?",
          "createdAt": "2023-10-04T11:10:44Z",
          "updatedAt": "2023-10-04T11:10:44Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "It does, you just have to read the string as you normally would ( read key, not read bitmap )... there is also some ordering issues.... I have an experimental implementation here:\n\nhttps://github.com/transmute-industries/dune\n\nI won't be at iiw",
          "createdAt": "2023-10-04T12:44:33Z",
          "updatedAt": "2023-10-04T12:46:17Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> It does, you just have to read the string as you normally would ( read key, not read bitmap )... there is also some ordering issues.... I have an experimental implementation here:\r\n> \r\n> https://github.com/transmute-industries/dune\r\n> \r\n> I won't be at iiw\r\n\r\nThat sounds pretty interesting! Sad to hear that you won't be at IIW :/",
          "createdAt": "2023-10-04T15:34:18Z",
          "updatedAt": "2023-10-04T15:34:18Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We have implemented a Status List service using Redis bitmaps, so can confirm, that this is a good choice.\r\n\r\nPending close, any further questions?",
          "createdAt": "2024-02-26T13:28:08Z",
          "updatedAt": "2024-02-26T13:28:08Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "I_kwDOJZ2aqs5zvTOw",
      "title": "Slight difference in compression result",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/67",
      "state": "CLOSED",
      "author": "TimoGlastra",
      "authorAssociation": "NONE",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "I'm working on a TypeScript implementation of this spec, and have the encoding / decoding of the status list implemented. It seems to work based on the example in the spec and the example python scripts, with one slight difference.\r\n\r\nWhen I encode either the 1 or 2 bit example it will output one character difference `_`, while mine outputs an `A`. The decoding seems to work fine, and maybe this is a gzip thing, but I'm wondering if the examples use certain gzip features to get this output?\r\n\r\nI've adapted my implementation to use compression level 9 (default for python `gzip` lib) and set the mtime to the same value\r\n\r\nThe input byte array is the same as for the python implementation and the examples in the spec, so it's really something that is happening during the gzip encoding (the output byte array here is different)\r\n\r\n```\r\nH4sIAMo_jGQCA9u5GABc9QE7AgAAAA\r\nH4sIAMo_jGQCAzvp8hMAZLRLMQMAAAA\r\n```\r\n\r\n```\r\nH4sIAMoAjGQCA9u5GABc9QE7AgAAAA\r\nH4sIAMoAjGQCAzvp8hMAZLRLMQMAAAA\r\n```\r\n\r\n\r\nany idea what is going on here? \r\n\r\nThe implementation and tests can be found here: https://github.com/TimoGlastra/jwt-status-list-ts",
      "createdAt": "2023-10-13T11:36:37Z",
      "updatedAt": "2023-11-16T08:47:52Z",
      "closedAt": "2023-11-16T08:47:52Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Seems to be a difference in the header - from the position I would assume the timestamp (even though you seem be setting it to the fixed value used in the examples in the draft)? There is also a header entry for the operating system - that would also be a very likely candidate for the difference. I will take a look at it when I am back from IIW.\r\n\r\nWe were discussing switching from gzip to zlib (or deflate directly) for that reason - we don't really need these headers and most languages seem to support both gzip and zlib (which was our concern when we initially thought about this).\r\nRelated Issue: #39 ",
          "createdAt": "2023-10-13T12:38:53Z",
          "updatedAt": "2023-10-13T12:38:53Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for testing!\n\nThere is a header as well in zlib, but it's considerably smaller. The zlib header does not include a timestamp which makes it better for reproducible results and test vectors.\n\nI think we should also give a recommendation for the used compression level, I suspect either default or highest.\n\nIt would be interesting if the underscore vanishes in zlib?",
          "createdAt": "2023-10-13T15:20:25Z",
          "updatedAt": "2023-10-13T15:20:25Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I changed the python implementation to use zlib with level 9 and did the same for your typescript implementation --> both resulted in the same:\r\n```\r\neNrbuRgAAhcBXQ\r\neNo76fITAAPfAgc\r\n```\r\nWe should really change that imho (and also add the text to recommend compression level).",
          "createdAt": "2023-10-18T01:23:59Z",
          "updatedAt": "2023-10-18T01:23:59Z"
        },
        {
          "author": "TimoGlastra",
          "authorAssociation": "NONE",
          "body": "I'm a proponent of using zlib instead of gzip. As suggested in the other issue, we don't really need the other metadata. And the result is smaller as well :)\r\n\r\n",
          "createdAt": "2023-10-18T08:10:16Z",
          "updatedAt": "2023-10-18T08:10:16Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "I_kwDOJZ2aqs50XAGW",
      "title": "Should the JWT StatusList encoded 1-bit bytearray map to W3C StatusList 2021 bitstring?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/68",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "This came up twice now, so I think it makes sense to open this issue.\r\n\r\nThe StatusList2021 \"counts\" entries from right to left.\r\n\r\nAs our goal is to support multi-bit support for status types and bits are usually \"counted\" from right to left, we envision this more of a byte array, therefore counting indices and bits from right to left.\r\n\r\nTherefore, the 1-bit strings do not match. Is this a problem? What are the consequences?",
      "createdAt": "2023-10-19T12:51:44Z",
      "updatedAt": "2024-10-09T06:38:20Z",
      "closedAt": "2024-10-09T06:38:20Z",
      "comments": [
        {
          "author": "brentzundel",
          "authorAssociation": "NONE",
          "body": "The status list under development in the W3C VCWG has evolved significantly since StatusList2021 was adopted. It now matches even more closely the work happening here.\r\n\r\nI believe it would be incredibly valuable for the underlying status bytestrings in each approach to be identical. \r\n\r\nI have also [opened an issue](https://github.com/w3c/vc-bitstring-status-list/issues/93) in the related W3C repository to track this concern. ",
          "createdAt": "2023-11-09T17:10:23Z",
          "updatedAt": "2023-11-09T17:10:23Z"
        },
        {
          "author": "bumblefudge",
          "authorAssociation": "NONE",
          "body": "as in, keep this issue open and remember to check for newest draft on the other side before shipping?",
          "createdAt": "2023-11-09T20:07:50Z",
          "updatedAt": "2023-11-09T20:07:50Z"
        },
        {
          "author": "dlongley",
          "authorAssociation": "NONE",
          "body": "> The StatusList2021 \"counts\" entries from right to left.\r\n> \r\n> As our goal is to support multi-bit support for status types and bits are usually \"counted\" from right to left, we envision this more of a byte array, therefore counting indices and bits from right to left.\r\n\r\nI might be misreading this. But I believe \"entries\" are counted from left to right, not right to left:\r\n\r\nhttps://www.w3.org/TR/vc-status-list/#bitstring-encoding\r\n\r\nThis approach was chosen after some discussion and data collection around implementations, some of this can be seen in this PR or issues linked to it: https://github.com/w3c/vc-bitstring-status-list/pull/45",
          "createdAt": "2023-11-09T21:20:13Z",
          "updatedAt": "2023-11-09T21:20:13Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for the reference.\n\nMy initial read on this issue seems to confirm our choice that a byte array seems like a good approach to describe the content, because it is less ambiguous?",
          "createdAt": "2023-11-09T22:16:01Z",
          "updatedAt": "2023-11-09T22:16:01Z"
        },
        {
          "author": "dlongley",
          "authorAssociation": "NONE",
          "body": "> My initial read on this issue seems to confirm our choice that a byte array seems like a good approach to describe the content, because it is less ambiguous?\r\n\r\nIn terms of ambiguity, we've found that there are lots of ways people can get confused here. So plenty of text, descriptions, and pictures -- all internally consistent with one another -- are helpful. I don't think simply saying \"byte array\" (or \"byte sequence\" for that matter) instead of \"bitstring\" (or whatever else) is sufficient to alleviate misunderstanding -- and I'd even say the name choice won't move the needle very much.",
          "createdAt": "2023-11-09T22:31:54Z",
          "updatedAt": "2023-11-09T22:31:54Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thats true, I was only stating my opinion and we should probably get more feedback on this.",
          "createdAt": "2023-11-09T22:33:44Z",
          "updatedAt": "2023-11-09T22:33:44Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- we still believe to achieve our design goal of implementation easiness and simplicity, an approach using byte array instead of bitarray is better\r\n- changes now would break many libraries for both standards\r\n- so there is probably no solution to this\r\n- pending close",
          "createdAt": "2024-09-11T06:29:06Z",
          "updatedAt": "2024-09-11T06:29:06Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOJZ2aqs50dWog",
      "title": "Base64 encoding of StatusList should be JSON-specific, CBOR should use binary Status List",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/69",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "              don't think base64url-encoding makes sense here now that this part 4.1 is only describing the list independent of JSON/CBOR\r\n\r\n_Originally posted by @bc-pi in https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/pull/57#discussion_r1306192838_\r\n            ",
      "createdAt": "2023-10-20T09:02:11Z",
      "updatedAt": "2024-01-15T08:15:52Z",
      "closedAt": "2024-01-15T08:15:51Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved in #89 ",
          "createdAt": "2024-01-15T08:15:51Z",
          "updatedAt": "2024-01-15T08:15:51Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "I_kwDOJZ2aqs50llpa",
      "title": "Call for Adoption Feedback: JSON/CBOR instead of JWT/CWT",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/72",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "https://mailarchive.ietf.org/arch/msg/oauth/hSOvzlKZTUJpI8ucB1CLNo5koqg/\r\n\r\n> The latest draft (i.e. draft-looker-oauth-jwt-cwt-status-list-latest) \r\n> which is available at :\r\n> https://vcstuff.github.io/draft-looker-oauth-jwt-cwt-status-list/draft-looker-oauth-jwt-cwt-status-list.html \r\n> \r\n> includes the following illustrative drawing:\r\n> \r\n> +------------------++-------------------+\r\n> ||References||\r\n> ||------------------->||\r\n> | Referenced Token || Status List Token |\r\n> |(JSON or CBOR)||(JWT or CWT)|\r\n> ||Describes Status||\r\n> ||<-------------------||\r\n> +------------------+ +-------------------+\r\n> \r\n> This drawing is not identical to the drawing of the referenced draft.\r\n> \r\n> On the left side, \"JSON or CBOR\" are mentioned instead of \"JWT or CWT\".\r\n> However, such change would indeed be appropriate (and in both rectangles \r\n> as explained below).\r\n\r\n> In section 4. of JWT [RFC7519] The text states:\r\n> \r\n>           The JWT Claims Set represents a JSON object whose members are \r\n> the claims conveyed by the JWT.\r\n> The Claim Names within a JWT Claims Set MUST be unique. JWT parsers MUST \r\n> either reject JWTs\r\n>           with duplicate Claim Names oruse a JSON parser that returns \r\n> only the lexically last duplicate member name (...).\r\n> \r\n> In [RFC8392] such sentence is not present which means that a Claim does \r\n> not need to be unique.\r\n> \r\n> However, in some applications, it might be useful to use JSON tokens \r\n> that contain several occurrences of the same claim within it.\r\n> In addition, the processing of such tokens would not necessarily need to \r\n> follow the description made in section 7 of [RFC7519], i.e. JWTs.\r\n> \r\n> As a first example, let us consider the case where the URI placed under \r\n> the \"status_list \" claim does not respond.\r\n> For resilience considerations, another URI should be defined. This can \r\n> be handled in two ways:\r\n> \r\n> - using a more complex claim structure for the \"status_list\" claim, or\r\n> \r\n> - allowing the inclusion of several \"status_list\" claims.\r\n> \r\n> As another example, currently the claim \"nationalities\" has been \r\n> registered by the IANA. See: https://www.iana.org/assignments/jwt/jwt.xhtml\r\n> \r\n> In order to support selective disclosure, the claim \"nationality\" should \r\n> be defined, so that two \"nationality\" claims can be present,\r\n> in order to allow bi-national users to choose which \"nationality\" \r\n> claim(s) to disclose, without disclosing that they have two nationality \r\n> claims.\r\n> \r\n>         Note: Using a different name for tokens supporting credentials, \r\n> e.g., JXT ot CXT (with the letter \"X\" different from the letter \"J\")\r\n>                  would address this problem.\r\n> \r\n> The abstract states:\r\n> \r\n> This specification defines status list data structures for representing \r\n> the status of JSON Web Tokens (JWTs) [RFC7519] and\r\n> CBOR Web Tokens (CWTs) [RFC8392]. The status list data structures \r\n> themselves are also represented as JWTs or CWTs.\r\n> \r\n> Both sentences imply restrictions since they limit the use of the \r\n> mechanism only to JWTs and CWTs.\r\n> \r\n> Limiting the use of the Status List mechanism to JWTs and CWTs would not \r\n> allow other forms of JSON or CBOR tokens\r\n> to take advantage of the mechanism described in this draft.\r\n> \r\n> The abstract should be modified to be able to support other forms of \r\n> JSON or CBOR tokens,\r\n> while JWTs and CWTs should be mentioned as examples.\r\n> \r\n> In order to allow future evolutions, the same kind of change should be \r\n> done for Status List Tokens.\r\n> \r\n> In order to allow for such a possibility, the title should include \"JSON \r\n> and CBOR\" rather than \"JWT and CWT\".\r\n> \r\n> *Proposed changes:*\r\n> \r\n> 1) Change proposal for the title of the document:\r\n> \r\n> JSON and CBOR encoded Status Lists\r\n> \r\n> 2) Change proposal for the Abstract:\r\n> \r\n> This specification defines status list data structures for representing \r\n> the status of JavaScript Object Notation (JSON) tokens [RFC8259] and\r\n>           of Concise Binary Object Representation (CBOR) tokens \r\n> [RFC7049] (see also [RFC8949]), */such as/* JSON Web Tokens (JWTs) \r\n> [RFC7519] and\r\n>           CBOR Web Tokens (CWTs) [RFC8392].\r\n> \r\n> The status list data structures themselves are represented as JSON \r\n> tokens or CBOR tokens.\r\n> \r\n> 3) The same kind of change should be done within the document, e.g. :\r\n> *\r\n> **+----------------------++----------------------+\r\n> ||References||\r\n> ||------------------->||\r\n> |Referenced Token||Status List Token|\r\n> | (JSON or CBOR token) || (JSON or CBOR token) |\r\n> ||Describes Status||\r\n> ||<-------------------||\r\n> +----------------------++----------------------+\r\n\r\n",
      "createdAt": "2023-10-22T18:43:19Z",
      "updatedAt": "2024-09-11T06:30:32Z",
      "closedAt": "2024-09-11T06:30:32Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Solved by #89 ",
          "createdAt": "2023-12-21T20:22:07Z",
          "updatedAt": "2023-12-21T20:22:07Z"
        }
      ]
    },
    {
      "number": 73,
      "id": "I_kwDOJZ2aqs50lmBz",
      "title": "Call for Adoption Feedback: Privacy concerns",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/73",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-for-pr"
      ],
      "body": "https://mailarchive.ietf.org/arch/msg/oauth/hSOvzlKZTUJpI8ucB1CLNo5koqg/\r\n\r\n> PS. A remainder:\r\n> \r\n> - the protocol leaks information that allows verifiers to link the \r\n> tokens they receive.\r\n> \r\n> -depending upon the architecture deployed by the token Issuer, the \r\n> Issuer may be in a position to act as Big Brother,\r\n>            i.e. allowing it to know where and when a token it has issued \r\n> has been used.\r\n\r\n",
      "createdAt": "2023-10-22T18:47:51Z",
      "updatedAt": "2024-09-20T19:23:34Z",
      "closedAt": "2024-09-20T19:23:34Z",
      "comments": []
    },
    {
      "number": 74,
      "id": "I_kwDOJZ2aqs50lmLA",
      "title": "Call for Adoption Feedback: Draft Title",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/74",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "https://mailarchive.ietf.org/arch/msg/oauth/hSOvzlKZTUJpI8ucB1CLNo5koqg/\r\n\r\n> The first draft of the OAuth WG should rather be called: \r\n> *draft-oauth-status-list-token-00\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/oauth/bO9FXfCvvIsxNz-0cnEnpDDh8mE/\r\n\r\n> I do think the document would be more appropriately scoped with more focus\r\n> on the status list itself and less so on the JWT/CWT signed representations\r\n> thereof. As such, I'd suggest maybe using a less specific docname without\r\n> the jwt-cwt bit if/when it moves to a WG draft. Something\r\n> like draft-ietf-oauth-token-status-list.\r\n+2 from Nat and Vladimir\r\n\r\n",
      "createdAt": "2023-10-22T18:49:33Z",
      "updatedAt": "2023-10-23T06:36:45Z",
      "closedAt": "2023-10-23T06:36:45Z",
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If think draft-oauth-status-list is sufficient.",
          "createdAt": "2023-10-22T19:23:33Z",
          "updatedAt": "2023-10-22T19:23:33Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "\r\n> think draft-oauth-status-list is sufficient.\r\n\r\nAggree but an adopted draft in the OAUTH WG needs to start w/ `draft-ietf-oauth-` so it'd be `draft-ietf-oauth-status-list`",
          "createdAt": "2023-10-22T20:26:22Z",
          "updatedAt": "2023-10-22T21:01:29Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would be fine with draft-ietf-oauth-status-list. I don't see much benefit of naming it draft-ietf-oauth-token-status-list as you originally proposed. ",
          "createdAt": "2023-10-22T20:30:32Z",
          "updatedAt": "2023-10-22T20:30:32Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "> I would be fine with draft-ietf-oauth-status-list. I don't see much benefit of naming it draft-ietf-oauth-token-status-list as you originally proposed.\r\n\r\nyeah, `draft-ietf-oauth-status-list` is probably better anyway ",
          "createdAt": "2023-10-22T20:55:12Z",
          "updatedAt": "2023-10-22T21:06:35Z"
        },
        {
          "author": "selfissued",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think that `draft-ietf-oauth-status-list` is a good identifier choice.  We'll never have to change it.",
          "createdAt": "2023-10-23T01:11:05Z",
          "updatedAt": "2023-10-23T01:11:05Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm happy with `draft-ietf-oauth-status-list` also.",
          "createdAt": "2023-10-23T01:45:02Z",
          "updatedAt": "2023-10-23T01:45:02Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Happy with `draft-ietf-oauth-status-list` as well.",
          "createdAt": "2023-10-23T03:41:40Z",
          "updatedAt": "2023-10-23T03:41:40Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Ok, then there is agreement on `draft-ietf-oauth-status-list`",
          "createdAt": "2023-10-23T06:15:22Z",
          "updatedAt": "2023-10-23T06:15:22Z"
        }
      ]
    },
    {
      "number": 77,
      "id": "I_kwDOJZ2aqs50qhub",
      "title": "Rename draft to \"OAuth Token Status List\"?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/77",
      "state": "CLOSED",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I noticed the draft was renamed from the name it previously had at the last IETF meeting where it was adopted. The previous name was \"JWT and CWT Status List\" and the new name is \"OAuth Status List\".\r\n\r\nI understand not wanting to have \"JWT\" and \"CWT\" in the name, but the new name is somewhat confusing, since it makes it sound like there is a status of OAuth itself somehow.\r\n\r\nI suggest renaming this to \"OAuth Token Status List\" to avoid confusion.",
      "createdAt": "2023-10-23T14:26:44Z",
      "updatedAt": "2024-01-09T12:06:01Z",
      "closedAt": "2024-01-09T12:06:01Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See #74 \r\nWe got feedback from multiple people and hence decided to go for `OAuth Status List` as this seemed a reasonable choice by many. I would not change the title now again before the cutoff, but I'm happy to discuss so in Prague.",
          "createdAt": "2023-10-23T19:03:15Z",
          "updatedAt": "2023-10-23T19:03:15Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "FWIW my comments/feedback on #74 and related conversations were only about the document identifier being `draft-ietf-oauth-status-list`\r\n\r\nFor the draft title, I'd go with \"Token Status List\" as suggested https://mailarchive.ietf.org/arch/msg/oauth/ZS3CzShqWUKOHLekweB6mtqbcTI/ \r\n\r\nNote that the document identifier (guess it's called docname in the markdown) needs to start with draft-ietf-oauth- because of IETF convention and the draft being an OAuth WG item. But the document title doesn't have to have \"OAuth\" in it. \r\n\r\n",
          "createdAt": "2023-10-23T21:49:04Z",
          "updatedAt": "2023-10-23T21:59:55Z"
        },
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "After reviewing the discussion I also would support \"Token Status List\". And yes, it looks like the discussion in #74 was about the draft URL, not the title.",
          "createdAt": "2023-10-23T21:51:54Z",
          "updatedAt": "2023-10-23T21:53:26Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The name of the issue is \"Feedback from call of adoption: **Draft title**\". How should it not be about the title then?",
          "createdAt": "2023-10-23T23:08:19Z",
          "updatedAt": "2023-10-23T23:08:19Z"
        },
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "I was commenting on the fact that literally all of the comments only mentioned the draft URL.",
          "createdAt": "2023-10-23T23:09:22Z",
          "updatedAt": "2023-10-23T23:09:22Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I already stated in the ML, but I support `Token Status List\"",
          "createdAt": "2023-10-25T06:24:50Z",
          "updatedAt": "2023-10-25T06:24:50Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\"Token Status List\" seems the most supported option, if there is no objection, we would rename next week.",
          "createdAt": "2023-11-16T14:34:43Z",
          "updatedAt": "2023-11-16T14:34:43Z"
        }
      ]
    },
    {
      "number": 78,
      "id": "I_kwDOJZ2aqs51W_XI",
      "title": "typo/mixup in Status List JWT Format and Processing Requirements",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/78",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The [second bullet](https://www.ietf.org/archive/id/draft-ietf-oauth-status-list-00.html#section-4.1-2.2.1) in the \"Status List JWT Format and Processing Requirements\" section has 'The JWT MUST contain a \"sub\" (subject) claim that contains an unique string identifier for that **Referenced Token.**' but I believe it should be \"... unique string identifier for that **Status List Token**.\"",
      "createdAt": "2023-10-30T18:17:01Z",
      "updatedAt": "2023-11-16T07:50:04Z",
      "closedAt": "2023-11-16T07:50:04Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "that's correct, thanks for pointing this out Brian",
          "createdAt": "2023-11-01T08:50:52Z",
          "updatedAt": "2023-11-01T08:50:52Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "I_kwDOJZ2aqs52f5sZ",
      "title": "IETF 118: mention usecase for accesstokens",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/82",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "Aaron says that there are zero mentions of the term access token and proposes to mention JWT accesstokens as a possible usecase",
      "createdAt": "2023-11-10T17:42:45Z",
      "updatedAt": "2024-01-09T12:17:41Z",
      "closedAt": "2024-01-09T12:17:41Z",
      "comments": []
    },
    {
      "number": 83,
      "id": "I_kwDOJZ2aqs52f7K4",
      "title": "IETF 118: Mention prior art",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/83",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "",
      "createdAt": "2023-11-10T17:47:55Z",
      "updatedAt": "2025-01-23T07:07:16Z",
      "closedAt": "2025-01-23T07:07:16Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Editors call: Re-open the issue and add a prior work section. Hannes provided this paper https://www.ndss-symposium.org/ndss-paper/lets-revoke-scalable-global-certificate-revocation/ as one of the references he would like to see.",
          "createdAt": "2025-01-14T07:22:42Z",
          "updatedAt": "2025-01-14T07:22:42Z"
        }
      ]
    },
    {
      "number": 84,
      "id": "I_kwDOJZ2aqs52f8NB",
      "title": "IETF 118: Guidance for which contexts/usecases StatusList is a valuable revocation mechanism",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/84",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "George asks to describe under which circumstances / contexts the StatusList works best/is helpful compared to other mechanisms. David asks under which conditions this should not be used, expected revocation rates might be very high",
      "createdAt": "2023-11-10T17:51:23Z",
      "updatedAt": "2024-11-13T07:37:25Z",
      "closedAt": "2024-11-13T07:37:25Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "consider this for implementation considerations or annex",
          "createdAt": "2023-11-16T07:40:27Z",
          "updatedAt": "2023-11-16T07:40:27Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- we see the usefulness of such guidance but it should be in a separate document, e.g. informational RFC",
          "createdAt": "2024-09-11T06:39:35Z",
          "updatedAt": "2024-09-11T06:39:35Z"
        }
      ]
    },
    {
      "number": 85,
      "id": "I_kwDOJZ2aqs52f_c5",
      "title": "IETF 118: Establish a mechanism that allows for other revocation means in the Referenced Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/85",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Leif asked to leave some space for future revocation mechanisms as StatusList might be only one approach.\r\nThe Structure in the Referenced Token should convey some kind of type, that enables other mechanisms reusing the \"status\" claim.\r\n\r\nRelated to #21 \r\nRelated to #40 ",
      "createdAt": "2023-11-10T17:59:14Z",
      "updatedAt": "2024-02-06T07:04:45Z",
      "closedAt": "2024-02-06T07:04:45Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Option 1:\r\n```\r\n\"status_bitstring\": {\r\n    \"idx\": 0,\r\n    \"uri\": \"https://example.com/statuslists/1\"\r\n  }\r\n```\r\n\r\nOption 2:\r\n```\r\n\"status\": {\r\n    \"typ\":\"bitstring\"\r\n    \"idx\": 0,\r\n    \"uri\": \"https://example.com/statuslists/1\"\r\n  }\r\n```\r\n\r\nOption 3:\r\n```\r\n\"status\": {\r\n    \"idx\": 0,\r\n    \"bitstring\": \"https://example.com/statuslists/1\"\r\n  }\r\n```",
          "createdAt": "2023-11-16T07:46:37Z",
          "updatedAt": "2023-11-16T07:46:37Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We favor Option#2 currently",
          "createdAt": "2023-11-16T07:46:50Z",
          "updatedAt": "2023-11-16T07:46:50Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We need text for extension points",
          "createdAt": "2023-11-16T07:48:01Z",
          "updatedAt": "2023-11-16T07:48:01Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm still not convinced since I think new status methods could register a new claim. \r\n\r\nBut if people want this, then there is another option which is similar to `cnf`:\r\n\r\n```\r\n\"status\": {\r\n  \"status_bitstring\": { \"idx\": ..., \"uri\": ... }, \r\n  \"ocsp\": { ... },\r\n  ...\r\n}\r\n```",
          "createdAt": "2023-12-06T20:10:45Z",
          "updatedAt": "2023-12-07T04:07:37Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "new ways for doing status management can introduce new claims, so I prefer option 1 or 3.",
          "createdAt": "2023-12-06T20:54:00Z",
          "updatedAt": "2023-12-06T20:54:00Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "> I'm still not convinced since I think new status methods could register a new claim.\r\n\r\nI tend to agree with this (effectively option 1). There is already the extension point of defining a new claim for other revocation mechanisms. This draft doesn't need to accommodate extensibility. ",
          "createdAt": "2023-12-06T20:54:49Z",
          "updatedAt": "2023-12-06T20:54:49Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@paulbastian and @c2bo favoring Oliver's option and will make an PR",
          "createdAt": "2023-12-08T07:17:03Z",
          "updatedAt": "2023-12-08T07:17:03Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I support Oliver's option as well",
          "createdAt": "2023-12-11T13:35:32Z",
          "updatedAt": "2023-12-11T13:35:32Z"
        }
      ]
    },
    {
      "number": 86,
      "id": "I_kwDOJZ2aqs549Z0j",
      "title": "Consider making `status` a JWT header instead of a JWT claim",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/86",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "`status` is not really a claim about a subject and is never selectively disclosed, so it would makes sense to make it a JWT header. It would also work well with the existing `crit` JOSE header that can then mark `status` as critical.\r\n\r\nSee https://github.com/oauth-wg/oauth-sd-jwt-vc/issues/192",
      "createdAt": "2023-12-06T20:51:53Z",
      "updatedAt": "2024-09-17T18:39:08Z",
      "closedAt": "2024-09-17T18:39:08Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I like the idea, but I think we need more input from others",
          "createdAt": "2023-12-08T07:20:50Z",
          "updatedAt": "2023-12-08T07:20:50Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Using JSON serialization or COSE Sign Document (as mdoc cbor MSO) would give the benefit to allow the update of the status object without breaking the signature of the JWS.\r\n\r\nWhile having a compact-serialization does not.\r\n\r\nI'd see benefits in having it in the unprotected header, while in the protected header not.\r\n\r\nI believe that there may be use cases or situations where the status key may be disclosable, then it makes sense to me to keep it in the payload and allow the issuers to make it disclosable or not.\r\n\r\na least, even if I really don't like this argument, there are some implementations that have issues with custom/unsupported header parameters. This may have huge impact on the implementation -> not a good argument, but something.\r\n\r\ndefinitively, I would like to have the status in the payload, as the credential type.",
          "createdAt": "2023-12-08T15:07:15Z",
          "updatedAt": "2023-12-11T13:33:57Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- current approach is in line with current best practice and we wouldn't start the discussion here, see iat, exp..\r\n- would break current implementations without much benefit",
          "createdAt": "2024-09-05T06:57:16Z",
          "updatedAt": "2024-09-05T06:57:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed with @awoie , we are closing this issue.",
          "createdAt": "2024-09-17T18:39:08Z",
          "updatedAt": "2024-09-17T18:39:08Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "I_kwDOJZ2aqs57vvYX",
      "title": "relax definition of Referenced Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/92",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "Referenced Token may not need to be CWT, to allow fitting this to mdoc. Referenced Token should as well be COSE-signed CBOR",
      "createdAt": "2024-01-11T09:13:02Z",
      "updatedAt": "2024-02-20T07:31:54Z",
      "closedAt": "2024-02-20T07:31:54Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "discussed in editors call:\r\nadd: other cryptographically signed containers, like JWS or COSE_Sign_1, implementations must take additional care of verification rules\r\nproceed registration of CWT claims\r\nregister CBOR tags for usage other than CWT",
          "createdAt": "2024-01-15T07:54:20Z",
          "updatedAt": "2024-01-15T07:54:20Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "discussed in editors call:\r\njson/cbor Referenced Token rules should align\r\nadd cbor CDDL to apply for mdoc and revisit JSON Referenced Token\r\nrevisit issuer requirements and make sure they could be x509 based",
          "createdAt": "2024-01-25T08:51:16Z",
          "updatedAt": "2024-01-25T08:51:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "editors call:\r\n\r\n- limit to \"cryptographically secured containers\"\r\n- RECOMMENDED JOSE/COSE, but not limited to\r\n- relax MUST on `iss` in Referenced Token to MAY, when present it needs to be checked, they should match\r\n- relax MUST on `iss` in Status List Token to MAY, when present it needs to be checked, they should match\r\n- do we mandate the issuer of Referenced Token is the same entity issuing the Status List?",
          "createdAt": "2024-02-13T07:50:07Z",
          "updatedAt": "2024-02-13T07:50:07Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "I_kwDOJZ2aqs58EMwo",
      "title": "Consider adding an implementation consideration around using private relay style protocols for status list access",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/93",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready-for-pr"
      ],
      "body": "In order to mitigate issuers being able to track verifiers when retrieving a status list, consider adding an implementation consideration to recommend usage of a private relay protocol like [Oblivious HTTP](https://datatracker.ietf.org/doc/html/draft-ietf-ohai-ohttp).",
      "createdAt": "2024-01-15T08:14:41Z",
      "updatedAt": "2024-09-20T19:23:33Z",
      "closedAt": "2024-09-20T19:23:33Z",
      "comments": []
    },
    {
      "number": 94,
      "id": "I_kwDOJZ2aqs58HqFW",
      "title": "DEFLATE in ZLIB",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/94",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "maybe adjust the language around DEFLATE and ZLIB per [this thread](https://github.com/vcstuff/draft-ietf-oauth-status-list/pull/80/files#diff-2347c539b523e10cc060407bc8a517b0764d5a8da0b237be9899e1348dcd63c8R134) \r\n\r\n\r\n\r\n\r\n_Originally posted by @bc-pi in https://github.com/vcstuff/draft-ietf-oauth-status-list/pull/80#discussion_r1452588980_\r\n            ",
      "createdAt": "2024-01-15T16:45:46Z",
      "updatedAt": "2024-02-13T07:25:44Z",
      "closedAt": "2024-02-13T07:25:44Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Copied over, to have everything in the issue here:\r\nThis is the current text:\r\n> The complete byte array is compressed using the \"DEFLATE\" {{RFC1951}} compression method and stored using the \"ZLIB\" {{RFC1950}} data format. Implementations are RECOMMENDED to use the highest compression level available.\r\n\r\nThis is the proposal:\r\n>The complete byte array is compressed using DEFLATE {{RFC1951}} inside the ZLIB {{RFC1950}} data format. Implementations are RECOMMENDED to use the highest compression level available.\r\n\r\nI agree that the current text is a bit weird and I wasn't really sure how to formulate it better when writing it.\r\n\r\n",
          "createdAt": "2024-01-16T13:11:52Z",
          "updatedAt": "2024-01-16T13:11:52Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "More context copied over via Screenshot:\r\n\r\n![Screenshot 2024-01-16 at 7 08 02 AM](https://github.com/vcstuff/draft-ietf-oauth-status-list/assets/71398439/f559cb78-2cb9-49f8-9a0b-c8c210de8644)\r\n",
          "createdAt": "2024-01-16T14:09:43Z",
          "updatedAt": "2024-01-16T14:10:17Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "I_kwDOJZ2aqs589PFS",
      "title": "Consider including next update time claim for Status List",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/96",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tplooker"
      ],
      "labels": [],
      "body": "To provide guidance for caching it might make sense to include a next update time in the status list. Or does `exp` provide this guidance?",
      "createdAt": "2024-01-23T16:05:20Z",
      "updatedAt": "2024-02-27T19:40:10Z",
      "closedAt": "2024-02-27T19:40:09Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "That information should be conveyed using http caching information:\r\n> If caching is required (e.g., to enable the use of alternative mechanisms for hosting, like Content Delivery Networks), the control of the caching mechanism SHOULD be implemented using the standard HTTP Cache-Control as defined in {{RFC9111}}.\r\n\r\nMy understanding would be that `exp` provides the validity of the information (can this information be trusted/used for a verification/validation) and http caching information signals when the system should attempt to retrieve the information again. For this case the `expires` header from RFC9111 (https://datatracker.ietf.org/doc/html/rfc9111#section-5.3) would signal when the system fetching the status list tries to update again.\r\n\r\nWe have a TODO in the text right now to properly explain this mechanism:\r\n> [10.2. ](https://vcstuff.github.io/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#section-10.2)[Cached and Stale status lists](https://vcstuff.github.io/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-cached-and-stale-status-lis)\r\nTODO consumers/Relying Party of the status list should be aware if they fetch the up-to-date data",
          "createdAt": "2024-01-24T04:42:32Z",
          "updatedAt": "2024-01-24T17:47:18Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Perhaps we can keep this issue until we have the language in the caching section.",
          "createdAt": "2024-01-24T14:35:14Z",
          "updatedAt": "2024-01-24T14:35:14Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Would it make sense to add this if we assume the verifier is not fetching the status list themselves but only gets the status list from some other component? in that case, the reader would not have the caching info.",
          "createdAt": "2024-02-08T14:08:55Z",
          "updatedAt": "2024-02-08T14:08:55Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, this issue keep coming up again and the given situation is a good reason to revisit this discussion.\r\nHowever, we still need HTTP Cache for the unsigned Status List option",
          "createdAt": "2024-02-08T20:54:49Z",
          "updatedAt": "2024-02-08T20:54:49Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "editors call:\r\n\r\n- after exp token must be refreshed\r\n- after ttl token may be refreshed\r\n- duration vs point of time\r\n- it should be a caching signal (like DNS), i.e. duration -> distribute caching/avoid spikes\r\n- take fetching time as start interval instead of iat?\r\n- information of ttl is informational, Verifiers may still recheck whenever say want",
          "createdAt": "2024-02-13T07:27:46Z",
          "updatedAt": "2024-02-13T07:27:46Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved by #101 ",
          "createdAt": "2024-02-20T07:27:16Z",
          "updatedAt": "2024-02-20T07:27:16Z"
        }
      ]
    },
    {
      "number": 107,
      "id": "I_kwDOJZ2aqs5_xnZj",
      "title": "Add further implementation guidance around when and how to use ttl vs exp claim",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/107",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tplooker"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "Also consider the application and usage of a mechanism like etag to allow a consuming party to determine whether their copy of a given status list is the latest.",
      "createdAt": "2024-02-20T07:31:30Z",
      "updatedAt": "2024-12-03T20:15:30Z",
      "closedAt": "2024-12-03T20:15:30Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Include rationale for why we need both. \r\n- For example having a ttl claim and exp means the issuer of the status list doesn't need to resign it if there is no updates within the expiry window.\r\n- This approach also helps to spread out cache invalidation by downstream parties rather then synchronising them with an expected update time stamp. ",
          "createdAt": "2024-02-20T07:46:32Z",
          "updatedAt": "2024-02-20T07:46:32Z"
        },
        {
          "author": "joelposti",
          "authorAssociation": "NONE",
          "body": "Since Status List Tokens are distributed via HTTP endpoints it might be beneficial to elaborate on how ttl and exp claims interplay with HTTP headers such as Cache-Control and Expires.\r\n\r\nFor example, if the value of ttl claim is `60` and the value of Cache-Control HTTP header is `max-age=30` which of these takes the precedence? My assumption is that ttl takes precedence since its signed data.\r\n\r\nAnother example: ttl is `60` but Cache-Control HTTP header is `no-store`. Should the consumer cache the Status List Token or not? Issuer says yes, but whatever CDN operator says no.",
          "createdAt": "2024-03-07T10:24:40Z",
          "updatedAt": "2024-03-07T10:24:40Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- put it under implementation considerations\r\n- highlight difference exp being point of time, ttl is a duration\r\n- include the ascii art explainer we once created",
          "createdAt": "2024-09-18T06:16:15Z",
          "updatedAt": "2024-09-18T06:16:15Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "![image](https://github.com/user-attachments/assets/5fc1aa45-c202-46bb-a6e8-dcc0d1b511b4)\r\n",
          "createdAt": "2024-09-18T06:17:27Z",
          "updatedAt": "2024-09-18T06:17:27Z"
        }
      ]
    },
    {
      "number": 108,
      "id": "I_kwDOJZ2aqs5_xq69",
      "title": "do we mandate the issuer of Referenced Token is the same entity issuing the Status List?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/108",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-for-pr"
      ],
      "body": "",
      "createdAt": "2024-02-20T07:41:25Z",
      "updatedAt": "2024-09-18T06:38:44Z",
      "closedAt": "2024-09-18T06:38:44Z",
      "comments": [
        {
          "author": "MattiasLass",
          "authorAssociation": "NONE",
          "body": "I was about to create a separate related issue, but perhaps this is more suitable as a comment here...\r\n\r\nAs-is I do not understand what is being achieved by requiring the `iss` to be equal in both the Referenced Token and the Status List Token. Yes, the requirement has the disclaimer that it only applies _in the absence of an application profile specifying otherwise_, but still, it creates confusion.\r\n\r\nPerhaps the original intent was to use this claim as a sort of rudimentary integrity check - to validate that the Status List Token has been issued by a trusted party (namely the same party that issued the Referenced Token). If so, it feels out of scope of this specification given that the Design Consideration section states: 'the specification shall not specify key resolution or trust frameworks'. \r\n\r\nIt seems to me that `iss` claim cannot be meaningfully used without specifying more regarding the trust framework and perhaps it should not be included in this specification at all.",
          "createdAt": "2024-03-20T16:06:26Z",
          "updatedAt": "2024-03-20T16:06:26Z"
        }
      ]
    },
    {
      "number": 109,
      "id": "I_kwDOJZ2aqs5_1J-7",
      "title": "Use reference to RFC9052 instead of RFC8152",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/109",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Use reference to RFC9052 instead of RFC8152",
      "createdAt": "2024-02-20T15:26:39Z",
      "updatedAt": "2024-03-03T21:35:52Z",
      "closedAt": "2024-03-03T21:35:52Z",
      "comments": []
    },
    {
      "number": 110,
      "id": "I_kwDOJZ2aqs5_1Lgz",
      "title": "Rewrite abstract, intro and diagram to use JOSE/COSE centric",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/110",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The abstract, intro, diagrams wrt referenced tokens description should refer to COSE and JOSE instead of CWT/JWT. Otherwise, non-CWT COSE objects such as ISO 18013-5 MSO cannot use this spec. Same applies to SD-JWT VC encoded secured using JWS.",
      "createdAt": "2024-02-20T15:29:21Z",
      "updatedAt": "2024-03-03T21:35:53Z",
      "closedAt": "2024-03-03T21:35:53Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We adjusted the terminology already, but the text in the introduction is not matching yet. In fact COSE is already mentioned at all places, so the question is whether we should align things and say Referenced Token = JOSE/COSE-based",
          "createdAt": "2024-02-20T15:47:25Z",
          "updatedAt": "2024-02-20T16:18:43Z"
        }
      ]
    },
    {
      "number": 111,
      "id": "I_kwDOJZ2aqs6AEhe9",
      "title": "Relax constraint on not allowing MAC for Status List Token?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/111",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "As the similar requirement was relaxed on SD-JWT, I think we should consider the same.",
      "createdAt": "2024-02-22T09:58:08Z",
      "updatedAt": "2024-10-21T18:10:09Z",
      "closedAt": "2024-10-21T18:10:09Z",
      "comments": []
    },
    {
      "number": 112,
      "id": "I_kwDOJZ2aqs6Af8r0",
      "title": "Add section for Referenced Token in JOSE/non-JWT",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/112",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "",
      "createdAt": "2024-02-27T07:25:19Z",
      "updatedAt": "2024-10-02T08:12:13Z",
      "closedAt": "2024-10-02T08:12:13Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- rename 6.2 [Referenced Token in JWT Format](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-referenced-token-in-jwt-for) -> Referenced Token in JOSE\r\n- add SD-JWT example\r\n- is it possible to merge 6.3 and 6.4 and make some specifics for CWT? include both cwt and mdoc example",
          "createdAt": "2024-09-05T06:50:14Z",
          "updatedAt": "2024-09-05T06:50:14Z"
        }
      ]
    },
    {
      "number": 113,
      "id": "I_kwDOJZ2aqs6Af8z5",
      "title": "Add example for CWT as Referenced Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/113",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-27T07:25:42Z",
      "updatedAt": "2024-07-04T06:07:33Z",
      "closedAt": "2024-07-04T06:07:32Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "We have a CWT in 6.3 in diagnostic notation and decided to add a raw (hex) example to the annex",
          "createdAt": "2024-05-08T06:18:48Z",
          "updatedAt": "2024-05-08T06:18:48Z"
        }
      ]
    },
    {
      "number": 114,
      "id": "I_kwDOJZ2aqs6Af84g",
      "title": "Add example for mdoc as Referenced Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/114",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tplooker"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "",
      "createdAt": "2024-02-27T07:25:54Z",
      "updatedAt": "2024-10-02T08:12:14Z",
      "closedAt": "2024-10-02T08:12:14Z",
      "comments": []
    },
    {
      "number": 115,
      "id": "I_kwDOJZ2aqs6Af9R2",
      "title": "Check for IANA CWT claims",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/115",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "which numbers shall be get/pre-assigned?",
      "createdAt": "2024-02-27T07:27:03Z",
      "updatedAt": "2024-08-29T07:37:53Z",
      "closedAt": "2024-08-29T07:37:53Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I think this can be closed - we now have request assignments in the draft?",
          "createdAt": "2024-08-29T06:37:15Z",
          "updatedAt": "2024-08-29T06:37:15Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "done",
          "createdAt": "2024-08-29T07:37:53Z",
          "updatedAt": "2024-08-29T07:37:53Z"
        }
      ]
    },
    {
      "number": 116,
      "id": "I_kwDOJZ2aqs6AgBUm",
      "title": "CBOR status/statusList object map of string or map of integers",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/116",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "For CBOR, two possible choices exist:\r\n\r\n1. make status a map of string `uri` and `idx`\r\n2. make status a map of integers 0 and 1",
      "createdAt": "2024-02-27T07:37:03Z",
      "updatedAt": "2024-05-15T06:07:10Z",
      "closedAt": "2024-05-15T06:07:10Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussion Editors Call:\r\n- Tobias: mix of string/integer in same spec is not uncommon\r\n- Strings creates similarity to JSON structure\r\n- space benefit may not be big enough, CWT benefit originates from statuslist array\r\n- leaning towards Option 1",
          "createdAt": "2024-04-02T06:31:16Z",
          "updatedAt": "2024-04-02T06:31:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call: nobody has strong opinions, but everybody leans towards option 1",
          "createdAt": "2024-05-15T06:06:52Z",
          "updatedAt": "2024-05-15T06:06:52Z"
        }
      ]
    },
    {
      "number": 117,
      "id": "I_kwDOJZ2aqs6AhT9u",
      "title": "Register CWT ttl claim after CBOR/CWT PR is done",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/117",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "Register ttl claim for CWT\r\n\r\n_Originally posted by @c2bo in https://github.com/vcstuff/draft-ietf-oauth-status-list/issues/101#issuecomment-1966222774_\r\n            ",
      "createdAt": "2024-02-27T10:21:29Z",
      "updatedAt": "2024-05-15T07:49:45Z",
      "closedAt": "2024-05-15T07:49:45Z",
      "comments": []
    },
    {
      "number": 120,
      "id": "I_kwDOJZ2aqs6BjaE7",
      "title": "Status List Endpoint is undefined",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/120",
      "state": "CLOSED",
      "author": "joelposti",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "Section [8.1. ](https://www.ietf.org/archive/id/draft-ietf-oauth-status-list-02.html#section-8.1)[Status List Request](https://www.ietf.org/archive/id/draft-ietf-oauth-status-list-02.html#name-status-list-request) mentions Status List Endpoint. The term is not mentioned elsewhere in the specification nor is it defined.",
      "createdAt": "2024-03-07T10:37:56Z",
      "updatedAt": "2024-06-06T06:15:06Z",
      "closedAt": "2024-06-06T06:15:06Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for the feedback.\r\n\r\nDiscussion Editors Call:\r\n- connected to the discussion whether Status List Provider is an entity that shall be described in the spec\r\n- intend to clarify the term for next iteration",
          "createdAt": "2024-04-02T06:26:51Z",
          "updatedAt": "2024-04-02T06:26:51Z"
        }
      ]
    },
    {
      "number": 121,
      "id": "I_kwDOJZ2aqs6COJje",
      "title": "TTL is missing for CWT/COSE examples",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/121",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "The JWT spec has a ttl. The CWT/COSE examples should include that as well.",
      "createdAt": "2024-03-13T19:32:06Z",
      "updatedAt": "2024-05-15T07:50:03Z",
      "closedAt": "2024-05-15T07:50:03Z",
      "comments": []
    },
    {
      "number": 122,
      "id": "I_kwDOJZ2aqs6COMlP",
      "title": "Consider using integer claim keys and CBOR labels over string claim keys and CBOR labels",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/122",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "To be more compact, it might be worth thinking about the option to allow integer labels for lst and bits instead of string labels. ",
      "createdAt": "2024-03-13T19:39:49Z",
      "updatedAt": "2024-04-02T06:19:14Z",
      "closedAt": "2024-04-02T06:19:13Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Possible duplicate of #116 ",
          "createdAt": "2024-03-20T23:26:25Z",
          "updatedAt": "2024-03-20T23:26:25Z"
        }
      ]
    },
    {
      "number": 123,
      "id": "I_kwDOJZ2aqs6CoGfM",
      "title": "Editor's copy link is broken",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/123",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The editor's copy link is broken.",
      "createdAt": "2024-03-18T08:39:24Z",
      "updatedAt": "2024-03-18T10:32:28Z",
      "closedAt": "2024-03-18T10:32:28Z",
      "comments": []
    },
    {
      "number": 125,
      "id": "I_kwDOJZ2aqs6DACR2",
      "title": "Ambiguous/contradictory language in the `sub` (subject) claim description",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/125",
      "state": "CLOSED",
      "author": "MattiasLass",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "> `sub`: REQUIRED. The `sub` (subject) claim MUST specify a unique string identifier for the Status List Token. The value MUST be equal to that of the `uri` claim contained in the `status_list` claim of the Referenced Token.\r\n\r\nThe first and second sentence of this description seem contradictory to me. The first sentence seems to state that (all?) Status List Tokens should have a unique identifier included as their `sub` claim. The second sentence directly contradicts this uniqueness requirement. Perhaps I'm misunderstanding what is meant by 'uniqueness' in the first sentence, but in that case the language is quite ambiguous.\r\n\r\nAs the `sub` claim seems to have been added solely for including the `uri` from the Referenced Token in the Status List Token (as described in #28), perhaps the sentences should simply be reworded to not mention uniqueness. So something like:\r\n\r\n-  `sub`: REQUIRED. The `sub` (subject) claim MUST be equal to the `uri` claim contained in the `status_list` claim of the Referenced Token.\r\n",
      "createdAt": "2024-03-20T15:24:56Z",
      "updatedAt": "2024-05-15T07:12:13Z",
      "closedAt": "2024-05-15T07:12:12Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The `sub` is basically the URI by which the Status List Token is retrieved. As Status List Tokens may be downloaded for offline use, further re-transmission or archiving, its important to also store the URI in the Token, such that it can be compared by others to the `uri` of the `status_list` claim of the Referenced Token.\r\n\r\nI see that the text may be confusing, it should be clearer as \"URI\" may be better than \"unique string identifier\" and URI is unique anyway.\r\n\r\nHow about:\r\n\r\n`sub`: REQUIRED. The `sub` (subject) claim MUST specify the URI of the Status List Token. The value MUST be equal to that of the `uri` claim contained in the `status_list` claim of the Referenced Token.",
          "createdAt": "2024-03-20T23:21:09Z",
          "updatedAt": "2024-03-20T23:21:09Z"
        },
        {
          "author": "MattiasLass",
          "authorAssociation": "NONE",
          "body": "Yes thank you, this wording clears it up.\r\n\r\nIf you wanted to be very precise instead of `URI of the Status List Token` you could write `URI of the Status List Endpoint used to obtain the Status List Token`. But perhaps my suggestion is too verbose, what you've written gets the idea across. ",
          "createdAt": "2024-03-21T12:50:43Z",
          "updatedAt": "2024-03-21T12:50:43Z"
        }
      ]
    },
    {
      "number": 126,
      "id": "I_kwDOJZ2aqs6DBEzP",
      "title": "Remove the requirement to use TLS to retrieve Status List Tokens from the Status List Endpoint",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/126",
      "state": "CLOSED",
      "author": "MattiasLass",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "Section '8.1. Status List Request' currently states:\r\n\r\n> Communication with the Status List Endpoint MUST utilize TLS.\r\n\r\nThis seems redundant when the endpoint is used to retrieve a Status List Token, as the Token's integrity is already guaranteed by requiring it to be signed using an asymmetric cryptographic algorithm.\r\n\r\nIf requiring TLS was intended for providing confidentiality of the Token, this seems unnecessary. The endpoint is publicly accessible - there does not seem to be any client authentication mechanisms described for it - thus the Tokens could be retrieved by anybody.",
      "createdAt": "2024-03-20T17:17:27Z",
      "updatedAt": "2024-06-06T06:15:06Z",
      "closedAt": "2024-06-06T06:15:06Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi @MattiasLass , thanks for the feedback!\r\n\r\nI think you are correct that we could relax using TLS when a Status List Token is queried. However, if an unsigned Status List is returned, we need TLS as an integrity mechanism.",
          "createdAt": "2024-03-20T23:09:14Z",
          "updatedAt": "2024-03-20T23:09:14Z"
        },
        {
          "author": "MattiasLass",
          "authorAssociation": "NONE",
          "body": "> if an unsigned Status List is returned, we need TLS as an integrity mechanism\r\n\r\nYes I vehemently agree :)\r\n\r\nBtw, perhaps the issue is a bit broader that just permitting plain HTTP when obtaining Status List Tokens. I don't think it's currently explicitly stated in the specification whether a Status List Provider should/must simultaneously provide both plain Status Lists and Status List Tokens. Ie the standard states that an RP should use the Accept-Header to indicate the requested response type, but it does not specify what the Status List Provider should do if it is unable to provide the requested response type.\r\n\r\nI think this is somewhat relevant under this issue as:\r\n- if you were to simply add a sentence to the spec permitting plain HTTP for Status List Tokens\r\n- then an Issuer would have to decide whether to put an HTTP or HTTPS URI in the `status` claim of the Referenced Token\r\n- but this somewhat contradicts with the Accept-Header mechanism which would seem to indicate (to the reader of the spec) that it's up to the RP to choose the response type.\r\n\r\nPerhaps the Issuer should explicitly specify supported response type(s) in the `status` claim of the Referenced Token? Ie there could be an additional attribute in the `status_list` object under the `status` claim specifying the supported formats. Such an attribute could prove beneficial in other regards as well. For example, I don't immediately see an use case where an Issuer/Status List Provider would be providing cbor/cwt Status Lists for JOSE Referenced Tokens. ",
          "createdAt": "2024-03-21T14:01:50Z",
          "updatedAt": "2024-03-21T14:01:50Z"
        }
      ]
    },
    {
      "number": 127,
      "id": "I_kwDOJZ2aqs6DD17v",
      "title": "Fix idx CBOR data type in examples",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/127",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "It appears the example uses a text string instead of a byte string for the idx value.\r\n```\r\n\"idx\": \"0\",\r\n```",
      "createdAt": "2024-03-21T00:08:53Z",
      "updatedAt": "2024-05-15T07:09:19Z",
      "closedAt": "2024-05-15T07:09:18Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Good catch, the referenced token example is wrong!",
          "createdAt": "2024-03-21T14:01:03Z",
          "updatedAt": "2024-03-21T14:01:03Z"
        }
      ]
    },
    {
      "number": 128,
      "id": "I_kwDOJZ2aqs6DD21L",
      "title": "Add Security Consideration on signing status list",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/128",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "NONE",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "It may be a good idea to add guidance on the implications of not signing the status list to make the security trade-offs explicit.",
      "createdAt": "2024-03-21T00:13:11Z",
      "updatedAt": "2024-11-20T16:46:50Z",
      "closedAt": "2024-11-20T16:46:50Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Thanks for opening the issue and I agree, we should probably be a lot more explicit for this part.\r\nBiggest question would be where this fits? Perhaps a general introduction at the start of section 5? ",
          "createdAt": "2024-03-21T12:42:22Z",
          "updatedAt": "2024-03-21T12:42:22Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call Discussion:\r\n- Add security consideration for now\r\n- Discuss if the unsigned option should stay in or not for the long term (usefulness/security/less options)",
          "createdAt": "2024-04-02T06:13:43Z",
          "updatedAt": "2024-04-02T06:13:43Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Linked to #147 ",
          "createdAt": "2024-08-07T08:24:13Z",
          "updatedAt": "2024-08-07T08:24:13Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- IETF decision to drop unsigned option\r\n- therefore, this issue will be resolved, as Status List Token will always be signed",
          "createdAt": "2024-11-13T07:39:02Z",
          "updatedAt": "2024-11-13T07:39:02Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Closed with #195",
          "createdAt": "2024-11-20T16:46:50Z",
          "updatedAt": "2024-11-20T16:46:50Z"
        }
      ]
    },
    {
      "number": 130,
      "id": "I_kwDOJZ2aqs6EzkxD",
      "title": "Clarify optionality of iss (1) in CWT status list token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/130",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "The spec says:\r\n> 1 (issuer): REQUIRED. Same definition as iss claim in [Section 5.1](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#status-list-token-jwt).\r\n\r\nHowever, JWT defines `iss` as \"REQUIRED if present in the reference token which means, the REQUIRED word is a bit misleading without the if-statement that follows.\r\n\r\nEither use OPTIONAL for `iss`, or also say `REQUIRED if present ...` in the CWT section.",
      "createdAt": "2024-04-05T13:59:52Z",
      "updatedAt": "2024-05-15T07:10:55Z",
      "closedAt": "2024-05-15T07:10:55Z",
      "comments": []
    },
    {
      "number": 132,
      "id": "I_kwDOJZ2aqs6G8kdW",
      "title": "Privacy Consideration",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/132",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-for-pr"
      ],
      "body": "Observability of Issuer's issuance behaviour, i.e. outsiders could observe how many tokens an issuer is issuing, therefore get information on his business.\r\nCountermeasures: Maintain multiple lists in parallel, use decoy entries",
      "createdAt": "2024-04-25T16:32:52Z",
      "updatedAt": "2024-09-20T19:23:33Z",
      "closedAt": "2024-09-20T19:23:33Z",
      "comments": []
    },
    {
      "number": 133,
      "id": "I_kwDOJZ2aqs6G8kwH",
      "title": "Implementation Consideration",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/133",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "initialize new status list with reasonable default value to avoid update on issuance",
      "createdAt": "2024-04-25T16:33:39Z",
      "updatedAt": "2024-08-28T07:00:15Z",
      "closedAt": "2024-08-28T07:00:14Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Duplicate #24 ",
          "createdAt": "2024-08-28T07:00:14Z",
          "updatedAt": "2024-08-28T07:00:14Z"
        }
      ]
    },
    {
      "number": 134,
      "id": "I_kwDOJZ2aqs6IL0M4",
      "title": "Finish Validation Rules",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/134",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-validation-rules",
      "createdAt": "2024-05-08T06:37:17Z",
      "updatedAt": "2024-07-08T20:03:33Z",
      "closedAt": "2024-07-08T20:03:33Z",
      "comments": []
    },
    {
      "number": 135,
      "id": "I_kwDOJZ2aqs6IL0hg",
      "title": "Remove HTTP Caching as ttl is defined",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/135",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-08T06:38:11Z",
      "updatedAt": "2024-06-06T06:12:09Z",
      "closedAt": "2024-06-06T06:12:08Z",
      "comments": []
    },
    {
      "number": 136,
      "id": "I_kwDOJZ2aqs6IM8_5",
      "title": "Fix links to Github repo in About this document",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/136",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-08T09:10:39Z",
      "updatedAt": "2024-05-14T16:42:22Z",
      "closedAt": "2024-05-14T16:42:22Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I am probably blind, but what needs fixing?",
          "createdAt": "2024-05-13T11:53:42Z",
          "updatedAt": "2024-05-13T11:53:42Z"
        },
        {
          "author": "cre8",
          "authorAssociation": "NONE",
          "body": "@c2bo right now `https://github.com/vcstuff/draft-ietf-oauth-status-list` is referenced, but `https://github.com/oauth-wg/draft-ietf-oauth-status-list/` is the correct one.\r\n\r\nSince github is redirecting by itself, this is not a critical bug",
          "createdAt": "2024-05-14T09:39:07Z",
          "updatedAt": "2024-05-14T09:39:07Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Are you looking at the datatracker or at the latest draft (https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html)? ",
          "createdAt": "2024-05-14T09:49:58Z",
          "updatedAt": "2024-05-14T09:49:58Z"
        },
        {
          "author": "cre8",
          "authorAssociation": "NONE",
          "body": "Nope, I was looking at this one that got referenced in the `sd-jwt-vc`spec: https://datatracker.ietf.org/doc/draft-ietf-oauth-status-list/",
          "createdAt": "2024-05-14T09:54:40Z",
          "updatedAt": "2024-05-14T09:54:40Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "This was fixed in the current editors draft (after moving to the new gh org) -> imho this can be closed?",
          "createdAt": "2024-05-14T16:32:08Z",
          "updatedAt": "2024-05-14T16:32:08Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "you are correct",
          "createdAt": "2024-05-14T16:42:22Z",
          "updatedAt": "2024-05-14T16:42:22Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "I_kwDOJZ2aqs6INCwr",
      "title": "Set content type to optional than must",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/137",
      "state": "CLOSED",
      "author": "cre8",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "Some CDNs like github repos/pages only provide static hosting and therefore no way to set the content-type to another value.\r\n\r\nFor the JOSE case I could publish a txt or json file.\r\nSo when it's a json file, it should be equal to `application/statuslist+json`, in case of a JWT it is `application/statuslist+jwt`.",
      "createdAt": "2024-05-08T09:22:15Z",
      "updatedAt": "2024-11-13T07:40:15Z",
      "closedAt": "2024-11-13T07:40:15Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- there was an IETF decision to enforce Content-Type\r\n- will be solved by #183 ",
          "createdAt": "2024-11-13T07:40:15Z",
          "updatedAt": "2024-11-13T07:40:15Z"
        }
      ]
    },
    {
      "number": 138,
      "id": "I_kwDOJZ2aqs6IaERt",
      "title": "Support an optional feature for historical resolution",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/138",
      "state": "CLOSED",
      "author": "decentralgabe",
      "authorAssociation": "NONE",
      "assignees": [
        "c2bo"
      ],
      "labels": [
        "feature",
        "ready-for-pr"
      ],
      "body": "We have a use case, in the financial field, to determine the time when the status of a given credential has changed. This requirement comes from US financial compliance regulation and is non negotiable.\r\n\r\nThe spec already supports an optional TTL which helps, but does not directly solve this issue. With a validity window (TTL), and consistent fetching (at the windows expiry) of status lists one could determine that a bit had flipped within a given window, and be able to approximate a timestamp of a given status change. Of course, this approach is noisy and inefficient.\r\n\r\nTo build off this section -- https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-history -- we can make this type of query simpler. I would like to see language added to the spec that speaks to the (optional) capability of a status list server to support historical queries, or revisions of the document from a given time period. I believe this would maintain the privacy preserving characteristics of the specification while adding the ability for verifiers to approximate status change time, which is useful in a number of circumstances, especially as an optional-to-implement feature.\r\n\r\nI am also open to other solutions that are similarly privacy preserving that support either directly or indirectly discerning 'time of status change', to date I have only seen solutions that would be far less privacy preserving, such as requesting specific instances (losing herd privacy).",
      "createdAt": "2024-05-09T22:05:17Z",
      "updatedAt": "2024-10-21T18:32:22Z",
      "closedAt": "2024-10-21T18:32:21Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm supportive of the idea in general. I imagine an optional feature that would add a specific point of time to the HTTP GET query asking the Status List Provider to return a historic Status List Token. \n\nI see two scenarios for a RP/Verifier: \n- RP wants to know status at a given point of time, then this would fit very easy\n- RP wants to know the point of time of a status change but has no good indicators, then this is quite inefficient\n\nI imagine most usecase would be the first scenario, so that would be fine?",
          "createdAt": "2024-05-10T09:09:35Z",
          "updatedAt": "2024-05-10T09:09:35Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I do believe it makes sense to support scenario 1 as an optional feature for use-cases that require it.\r\nFor scenario 2, I do believe status list in its current form is not a good fit (and we are working on an alternative mechanism that would fit better for this requirement imho).",
          "createdAt": "2024-05-10T09:14:55Z",
          "updatedAt": "2024-05-10T09:14:55Z"
        },
        {
          "author": "decentralgabe",
          "authorAssociation": "NONE",
          "body": "1 is a good fit - yes\r\n2 is inefficient, but at least the capability will exist\r\n\r\n> we are working on an alternative mechanism that would fit better for this requirement imho\r\n\r\ncould you provide additional detail?",
          "createdAt": "2024-05-10T18:45:53Z",
          "updatedAt": "2024-05-10T18:45:53Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- we gave this another thought whether to integrate this\r\n- extension to HTTP request protocol seems rather simple:\r\n  - HTTP GET https://example.com/statuslist/1?time=1686920170\r\n  - add OPTIONAL query parameter `time` with Unix timestamp in seconds\r\n  - if Status List Provider doesn't support this ignore or throw error?\r\n  - add privacy consideration  that this makes profiling easier",
          "createdAt": "2024-08-28T06:58:22Z",
          "updatedAt": "2024-08-28T06:58:22Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@decentralgabe we have a PR for this issue, do you want to review #178 ?",
          "createdAt": "2024-10-09T06:15:22Z",
          "updatedAt": "2024-10-09T06:15:22Z"
        }
      ]
    },
    {
      "number": 142,
      "id": "I_kwDOJZ2aqs6I6VqZ",
      "title": "Add extensibility to Referenced Token status_list object",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/142",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "Remove the restriction that object cointains \"exactly two claims\"",
      "createdAt": "2024-05-15T06:39:57Z",
      "updatedAt": "2024-07-04T06:13:21Z",
      "closedAt": "2024-07-04T06:13:21Z",
      "comments": []
    },
    {
      "number": 143,
      "id": "I_kwDOJZ2aqs6JoBlc",
      "title": "OP Metadata Claim for Status List JWT endpoint",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/143",
      "state": "CLOSED",
      "author": "nynymike",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "If an OP wanted to publish the Token Status List JWT on an endpoint, perhaps something like `token_status_list_jwt` with `Content-Type: application/jwt` ... it would be nice to specify that in the spec.",
      "createdAt": "2024-05-21T19:33:46Z",
      "updatedAt": "2024-11-29T07:07:19Z",
      "closedAt": "2024-11-29T07:07:19Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not sure what you are suggesting. Are you suggesting that AS or RS has a link to a status list token in his metadata or are you suggesting media types? The latter is already defined in the draft.",
          "createdAt": "2024-05-23T17:58:16Z",
          "updatedAt": "2024-05-23T17:58:41Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is this covered by #141 ?",
          "createdAt": "2024-06-06T06:41:40Z",
          "updatedAt": "2024-06-06T06:41:40Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- add [OAuth (AS) metadata](https://www.iana.org/assignments/oauth-parameters/oauth-parameters.xhtml#authorization-server-metadata) that may link then to the Aggreation",
          "createdAt": "2024-11-13T07:45:52Z",
          "updatedAt": "2024-11-13T07:45:52Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@nynymike does the PR reflect your idea?",
          "createdAt": "2024-11-21T16:23:55Z",
          "updatedAt": "2024-11-21T16:23:55Z"
        }
      ]
    },
    {
      "number": 144,
      "id": "I_kwDOJZ2aqs6KLpiD",
      "title": "COSE typ is now registered in IANA",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/144",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "COSE typ is now registered in IANA. Because of that, the TBD could be removed.",
      "createdAt": "2024-05-27T06:05:33Z",
      "updatedAt": "2024-07-04T06:07:51Z",
      "closedAt": "2024-07-04T06:07:51Z",
      "comments": []
    },
    {
      "number": 145,
      "id": "I_kwDOJZ2aqs6KbaHv",
      "title": "Be more elaborate on CBOR/CWT types and definitions",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/145",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tplooker"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "This includes standalone seperate references for each of the claims rather then referencing the JWT based definition.",
      "createdAt": "2024-05-29T06:09:54Z",
      "updatedAt": "2024-10-21T18:31:32Z",
      "closedAt": "2024-10-21T18:31:32Z",
      "comments": []
    },
    {
      "number": 146,
      "id": "I_kwDOJZ2aqs6KbizX",
      "title": "Implementation consideration to endianess",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/146",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-for-pr"
      ],
      "body": "we currently assume there is no issue, but it may be worth to write it down",
      "createdAt": "2024-05-29T06:28:15Z",
      "updatedAt": "2024-09-20T19:23:33Z",
      "closedAt": "2024-09-20T19:23:32Z",
      "comments": []
    },
    {
      "number": 147,
      "id": "I_kwDOJZ2aqs6KboUm",
      "title": "Decide whether to drop the unsigned option",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/147",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "The unsigned option hasn't shown any interest at all and complicates matters within the draft. Therefore, we consider to drop this feature again. Is anybody planning to use this?",
      "createdAt": "2024-05-29T06:43:18Z",
      "updatedAt": "2024-11-20T16:46:13Z",
      "closedAt": "2024-11-20T16:46:13Z",
      "comments": [
        {
          "author": "cre8",
          "authorAssociation": "NONE",
          "body": "I support the removal of the unsigned option. If the verifier does not want to validate the signature, it can skip this \"feature\" without any further step. This signature operation on the issuer site is also quite small compared to the other functions like interacting with the database and building up the bit string.\r\n\r\nThe argument \"signed data is more valuable in a data breach\" was only brought up when a it was personal data, which is not the case in this scenario. In this case, the status list is all the time public available, so there is no need to hack into any system to get it ^^",
          "createdAt": "2024-08-07T06:39:11Z",
          "updatedAt": "2024-08-07T06:40:24Z"
        },
        {
          "author": "manecke",
          "authorAssociation": "NONE",
          "body": "Our aim should be to create specifications that are as consistent and compact as possible. Each additional endpoint or option also offers new attack vectors. \r\n\r\nWe also try to create a system that is as secure as possible. We have Trusted Verifier, Trusted Issuer etc. With this in mind, I see no benefit in using unsigned data. In this case, I cannot check the integrity and authenticity of the data on a terminal device at a later point in time. In addition, the data would then be transferred as raw data in the cluster. \r\n\r\nIn this sense, I would take up IDunion's suggestion and only offer the signed option and only offer this option. Clients who do not want to check the integrity of the data can simply do without validating the list/signature. This corresponds to the unsigned option (the amount of data is only one signature larger). \r\n\r\nFurthermore, in the offline use case, if I cache the data on a terminal device, I need the option of being able to check the data. In my view, this option should be prioritized. You should also generally consider whether I really want to omit the check in a status list. This is at least questionable in the majority of cases.",
          "createdAt": "2024-08-07T06:54:34Z",
          "updatedAt": "2024-08-07T06:54:34Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- decision at IETF 121 to drop the unsigned option",
          "createdAt": "2024-11-13T07:46:40Z",
          "updatedAt": "2024-11-13T07:46:40Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Closed with #195",
          "createdAt": "2024-11-20T16:46:13Z",
          "updatedAt": "2024-11-20T16:46:13Z"
        }
      ]
    },
    {
      "number": 151,
      "id": "I_kwDOJZ2aqs6NsXjt",
      "title": "Allow multiple status lists in SD-JWT VC",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/151",
      "state": "CLOSED",
      "author": "bj-ms",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In our current use case, we have implemented the bitstring status list (https://www.w3.org/TR/vc-bitstring-status-list/) and want to keep it as compatible as possible.\r\n\r\nOne of the incompatibilities we discovered in chapters 6.2, 6.3, and 6.4 is that the status list property is limited to a status list.\r\nWe would suggest allowing a list of status lists in those chapters instead.",
      "createdAt": "2024-06-27T05:55:44Z",
      "updatedAt": "2024-09-02T06:30:33Z",
      "closedAt": "2024-09-02T06:30:33Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IETF Status List has a different approach here: Instead of having two status lists, one for revocation and one for suspension, we have the option to include more than one bit per Referenced Token into the statuslist, thus representing multiple possible status values.\r\n\r\nThis seems like an easier approach and avoids possible problems with concurrency.\r\n\r\nDo you have any use cases in mind, where this approach is insufficient?",
          "createdAt": "2024-07-03T12:11:19Z",
          "updatedAt": "2024-07-03T12:11:19Z"
        },
        {
          "author": "bj-ms",
          "authorAssociation": "NONE",
          "body": "No, it was more about compatibility but as you say you take another approach.\r\n\r\nAre there some differences in privacy concerns between IETF Status List and Bitstring that you know of?",
          "createdAt": "2024-07-03T14:11:19Z",
          "updatedAt": "2024-07-03T14:11:19Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think there are any differences regarding privacy.",
          "createdAt": "2024-07-04T12:58:01Z",
          "updatedAt": "2024-07-04T12:58:01Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@bj-ms Are there any open questions on this one or do you have further feedback?",
          "createdAt": "2024-08-28T10:27:55Z",
          "updatedAt": "2024-08-28T10:27:55Z"
        },
        {
          "author": "bj-ms",
          "authorAssociation": "NONE",
          "body": "nothing more to say, I will close the issue",
          "createdAt": "2024-09-02T06:30:31Z",
          "updatedAt": "2024-09-02T06:30:31Z"
        }
      ]
    },
    {
      "number": 156,
      "id": "I_kwDOJZ2aqs6Ow62g",
      "title": "Simplifying compression requirements",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/156",
      "state": "CLOSED",
      "author": "cobward",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I have some concerns about the complexity of the compression requirements:\r\n\r\n> \r\n>    3.  The byte array is compressed using DEFLATE [RFC1951] with the\r\n>        ZLIB [RFC1950] data format.  Implementations are RECOMMENDED to\r\n>        use the highest compression level available.\r\n\r\nand\r\n\r\n> \r\n>    The HTTP response SHOULD use gzip Content-Encoding as defined in\r\n>    [RFC9110].\r\n\r\nThe first quoted requirement adds needless complexity and computation on the part of the issuer, as compression can happen at the HTTP level (as indicated by the second requirement), so an implementation following the recommendations of this specification would end up compressing twice at the highest available compression level. With the second requirement there is ambiguity with how it interacts with the requirements in RFC9110 with respect to handling the Accept-Encoding request header.\r\n\r\nMy proposal is to remove the requirement for DEFLATE compression on internal structure, and instead rely solely on compression of the entire response using the request/response mechanism defined in RFC9110, section 8.4.",
      "createdAt": "2024-07-08T09:57:47Z",
      "updatedAt": "2024-11-20T16:55:27Z",
      "closedAt": "2024-11-20T16:55:27Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- we would like have low size for other transport protocols\r\n- we may not 100% rely on HTTP compression in cases where HTTP headers get lost, e.g. some reverse proxy configurations\r\n- we could imagine compression_alg as an optional parameter that defaults to zlib, but could be none",
          "createdAt": "2024-08-29T07:36:59Z",
          "updatedAt": "2024-08-29T07:37:17Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- create an compression_alg\r\n- create an IANA registry with zlib required\r\n- we are considering adding none, but it seems unclear if the added complexity/negotiation is worth it\r\n- serves as an extension point to enable better ZKP proofs lateron",
          "createdAt": "2024-10-16T06:24:02Z",
          "updatedAt": "2024-10-16T06:24:02Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- decision at IETF 121 OAuth working group call to not pursue this an simply the specification\r\n- pending close",
          "createdAt": "2024-11-13T07:47:45Z",
          "updatedAt": "2024-11-13T07:47:45Z"
        }
      ]
    },
    {
      "number": 157,
      "id": "I_kwDOJZ2aqs6Rsz2u",
      "title": "Easy way to debug a Status List",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/157",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "With this online tool you are quickly able to decode a JWT Status List for debugging:\r\n\r\nhttps://gchq.github.io/CyberChef/#recipe=JWT_Decode()JPath_expression('status_list.lst','%5C%5Cn')From_Base64('A-Za-z0-9-_',true,false)Zlib_Inflate(0,0,'Adaptive',false,false)To_Binary('Line%20feed',8)Add_line_numbers()\r\n\r\nShall we add it to the readme?",
      "createdAt": "2024-08-02T08:55:06Z",
      "updatedAt": "2024-08-29T07:05:31Z",
      "closedAt": "2024-08-29T07:05:31Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I think that is a good idea for the Readme",
          "createdAt": "2024-08-06T10:41:52Z",
          "updatedAt": "2024-08-06T10:41:52Z"
        }
      ]
    },
    {
      "number": 158,
      "id": "I_kwDOJZ2aqs6SMNsI",
      "title": "Explain Status List Provider and other roles in the introduction",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/158",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "Something like this picutre used in the last IETF presentation:\r\n\r\n![image](https://github.com/user-attachments/assets/86e48867-0f3a-4715-8bce-a13e1514c814)\r\n",
      "createdAt": "2024-08-07T06:41:30Z",
      "updatedAt": "2024-10-21T18:12:54Z",
      "closedAt": "2024-10-21T18:12:54Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- Status List Provider -> Status List Issuer, which also may sign the Status List himself. In most cases though Issuer = Status List Issuer",
          "createdAt": "2024-08-14T06:37:29Z",
          "updatedAt": "2024-08-14T06:37:29Z"
        }
      ]
    },
    {
      "number": 159,
      "id": "I_kwDOJZ2aqs6S7T2G",
      "title": "Remove requirement on matching iss values",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/159",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "To allow Status List Issuer being different from Issuer and using iss values, we should remove this constraint\r\n            ",
      "createdAt": "2024-08-14T06:38:37Z",
      "updatedAt": "2024-09-18T06:38:45Z",
      "closedAt": "2024-09-18T06:38:45Z",
      "comments": []
    },
    {
      "number": 165,
      "id": "I_kwDOJZ2aqs6UmWkC",
      "title": "Reference the JWT BCP",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/165",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "",
      "createdAt": "2024-08-28T22:20:45Z",
      "updatedAt": "2024-09-20T19:23:33Z",
      "closedAt": "2024-09-20T19:23:33Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+ security section of JWT/CWT",
          "createdAt": "2024-08-29T07:32:50Z",
          "updatedAt": "2024-08-29T07:32:50Z"
        }
      ]
    },
    {
      "number": 167,
      "id": "I_kwDOJZ2aqs6UunQj",
      "title": "Support for content negotiation as denoted in the standard is limited for some CDNs and http servers",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/167",
      "state": "CLOSED",
      "author": "markuskreusch",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "As described in https://www.ietf.org/archive/id/draft-ietf-oauth-status-list-03.html#section-8.1 content negotiation using the accept header is used when requesting a status list / status list token. This is used to request different formats depending on the needs of the caller using a single URI for the status list.\r\n\r\nThis mechanism in general is valid and follows the http standards. Implementing this works well when an application server is used to serve the status lists.\r\n\r\nNevertheless in practice this causes problems in some scenarios. Several CDNs that provide caches of other HTTP resources do not implement the required functionality correctly.\r\n\r\nFor example [cloudflare, does explicitly ignore the accept header even if the vary http response header is used](https://developers.cloudflare.com/cache/concepts/cache-control/#other). I assume, without further checking this in detail (quick google search) that this is industry standard right now and thus not available otherwhere.\r\n\r\nIn addition nginx can not easily handle content negotiation using the accept header correctly. Using the a map section together with the Accept header allows to choose different resources based on the requested content type. This is only working for single value Accept headers though. More complex header values as `Accept: application/statuslist+*;q=0.5,application/statuslist+cwt` can not easily be handled. The current state of the standard does not mention such option but does not forbid them either. Apache2 has https://httpd.apache.org/docs/current/content-negotiation.html, that could solve this. I did not evaluate that further.\r\n\r\nSo even though the mechanism is good and simple as is and follows http standards, it might be difficult to implement when using a CDN to scale serving the status list.\r\n\r\nA possible solution would be to use distinct URIs to request the status list depending on the type (for example by appending extensions like jwt, cwt, json and cbor) instead of the request header. This seems to me as a workaround and a suboptimal solution though. As the specification as it is is totally valid IMHO it could as well been left as it is, which means the need for implementation of this functionality in the used components will arise and the usage of certain CDNs is not possible.\r\n\r\nRelated to #137 but addresses the request handling instead of response generation.",
      "createdAt": "2024-08-29T18:20:24Z",
      "updatedAt": "2024-08-29T18:35:35Z",
      "closedAt": "2024-08-29T18:32:14Z",
      "comments": [
        {
          "author": "markuskreusch",
          "authorAssociation": "NONE",
          "body": "Sorry, bad internet connection in the train caused a duplicate issue. See #168",
          "createdAt": "2024-08-29T18:32:51Z",
          "updatedAt": "2024-08-29T18:35:35Z"
        }
      ]
    },
    {
      "number": 168,
      "id": "I_kwDOJZ2aqs6Uunig",
      "title": "Support for content negotiation as denoted in the standard is limited for some CDNs and http servers",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/168",
      "state": "CLOSED",
      "author": "markuskreusch",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "ready-for-pr"
      ],
      "body": "As described in https://www.ietf.org/archive/id/draft-ietf-oauth-status-list-03.html#section-8.1 content negotiation using the accept header is used when requesting a status list / status list token. This is used to request different formats depending on the needs of the caller using a single URI for the status list.\r\n\r\nThis mechanism in general is valid and follows the http standards. Implementing this works well when an application server is used to serve the status lists.\r\n\r\nNevertheless in practice this causes problems in some scenarios. Several CDNs and services that provide caches of other HTTP resources do not implement the required functionality correctly.\r\n\r\nFor example [cloudflare, does explicitly ignore the accept header even if the vary http response header is used](https://developers.cloudflare.com/cache/concepts/cache-control/#other). Some other services offer this functionality tough, for example Amazon CloudFront.\r\n\r\nIn addition nginx can not easily handle content negotiation using the accept header correctly. Using the a map section together with the Accept header allows to choose different resources based on the requested content type. This is only working for single value Accept headers though. More complex header values as `Accept: application/statuslist+*;q=0.5,application/statuslist+cwt` can not easily be handled. The current state of the standard does not mention such option but does not forbid them either. Apache2 has https://httpd.apache.org/docs/current/content-negotiation.html, that could solve this. I did not evaluate that further.\r\n\r\nSo even though the mechanism is good and simple as is and follows http standards, it might be difficult to implement when using a CDN to scale serving the status list.\r\n\r\nA possible solution would be to use distinct URIs to request the status list depending on the type (for example by appending extensions like jwt, cwt, json and cbor) instead of the request header. This seems to me as a workaround and a suboptimal solution though. As the specification as it is is totally valid IMHO it could as well been left as it is, which means the need for implementation of this functionality in the used components will arise and the usage of certain CDNs is not possible.\r\n\r\nRelated to #137 but addresses the request handling instead of response generation.",
      "createdAt": "2024-08-29T18:21:00Z",
      "updatedAt": "2024-11-17T14:27:34Z",
      "closedAt": "2024-11-17T14:27:34Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think there are two reasons, why a failed negotiation my not be that significant:\r\n- the unsigned option may probably be deleted, leaving us with 2 possible media types instead of 4\r\n- from the ecosystem / context it may be clear whether JWT or CWT is expected\r\n\r\nWe could say that more complex header values as `Accept: application/statuslist+*;q=0.5,application/statuslist+cwt` are restricted?",
          "createdAt": "2024-08-30T14:24:53Z",
          "updatedAt": "2024-08-30T14:24:53Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> A possible solution would be to use distinct URIs to request the status list depending on the type (for example by appending extensions like jwt, cwt, json and cbor) instead of the request header. This seems to me as a workaround and a suboptimal solution though. As the specification as it is is totally valid IMHO it could as well been left as it is, which means the need for implementation of this functionality in the used components will arise and the usage of certain CDNs is not possible.\r\n\r\nThis is kind of what I would expect for most cases in reality: A CBOR based Credential will likely reference to a status list that is only available in CWT form. The only solution to make this more explicit (and if we don't trust the header based approach) would be to make this explicit in the URI I guess?\r\n",
          "createdAt": "2024-09-09T08:03:07Z",
          "updatedAt": "2024-09-09T08:03:07Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussed on editors call tonight, one possible recommendation we could make to implementations is that if you are representing the same underlying status list in both CWT and JWT forms, use distinct URIs for these two different status list representations e.g JWT -> https:example.com/statuslists/jwt/1 CWT -> https:example.com/statuslists/cwt/1. The only draw back I see to this approach is that in effect the reference to the status list that is put in the reference token effectively sets the content type of the returned status list, rather then making it subject to negotiation via the Accept header. I don't believe in practise is an issue because generally the same securing approach that is being used for the reference token should be used for the status list e.g SD-JWT reference token -> JWT status list.",
          "createdAt": "2024-09-18T06:41:27Z",
          "updatedAt": "2024-09-18T06:41:27Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- decision at IETF 121 OAuth working group call to enforce HTTP Content-Type\r\n- pending close",
          "createdAt": "2024-11-13T07:50:20Z",
          "updatedAt": "2024-11-13T07:50:20Z"
        }
      ]
    },
    {
      "number": 169,
      "id": "I_kwDOJZ2aqs6VMjnb",
      "title": "Make it more clear that CWT `lst` claim is not base64url encoded",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/169",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The reference in 4.2 Status List in CBOR Format should be probably fixed to refer to 4 Status List instead of 4.2 Status List in JSON since it suggests that the `lst` claim is encoded in base64url which it is not because this would not make much sense and the examples reinforce this interpretation.\r\n\r\n> lst: REQUIRED. Byte string (Major Type 2) that contains the Status List as specified in [Section 4.1](https://www.ietf.org/archive/id/draft-ietf-oauth-status-list-03.html#status-list-json).",
      "createdAt": "2024-09-03T14:53:08Z",
      "updatedAt": "2024-09-03T15:00:53Z",
      "closedAt": "2024-09-03T15:00:52Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing since this has been addressed already.",
          "createdAt": "2024-09-03T15:00:52Z",
          "updatedAt": "2024-09-03T15:00:52Z"
        }
      ]
    },
    {
      "number": 174,
      "id": "I_kwDOJZ2aqs6WctZi",
      "title": "Clean up IANA section",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/174",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "ready-for-pr",
        "editorial"
      ],
      "body": "We should clean up the IANA section a bit, especially https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-media-type-registration needs some work imho. Can we remove the n/a parameters from that part or are they required?\r\n",
      "createdAt": "2024-09-13T07:40:41Z",
      "updatedAt": "2024-09-18T06:10:27Z",
      "closedAt": "2024-09-18T06:10:18Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think it is the recommended way: https://datatracker.ietf.org/doc/html/rfc6838#section-5.6\r\n",
          "createdAt": "2024-09-13T16:32:00Z",
          "updatedAt": "2024-09-13T16:32:00Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed by #175 ",
          "createdAt": "2024-09-18T06:10:18Z",
          "updatedAt": "2024-09-18T06:10:27Z"
        }
      ]
    },
    {
      "number": 177,
      "id": "I_kwDOJZ2aqs6X0SqD",
      "title": "Missing IANA section for status types",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/177",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "The section 7 explains how to setup the registry (https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-status-types) but we are missing a corresponding section in the IANA appendix ",
      "createdAt": "2024-09-25T06:34:55Z",
      "updatedAt": "2024-10-21T18:18:05Z",
      "closedAt": "2024-10-21T18:18:04Z",
      "comments": []
    },
    {
      "number": 181,
      "id": "I_kwDOJZ2aqs6Zjlec",
      "title": "Add Reserved For Private Use Range",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/181",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The first few entries are valid, revoked, suspended.\r\n\r\nThere may be future well defined values that issuers and verifiers want global interoperability around.\r\n\r\nThere may also be a need for private use of this space.\r\n\r\nThis document should describe the \"reserved for private use range\", and leave room for enough globally interoperable and registered status values",
      "createdAt": "2024-10-09T15:19:25Z",
      "updatedAt": "2024-10-21T18:18:05Z",
      "closedAt": "2024-10-21T18:18:05Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We had similar ideas and totally agree",
          "createdAt": "2024-10-09T17:25:19Z",
          "updatedAt": "2024-10-09T17:25:19Z"
        }
      ]
    },
    {
      "number": 182,
      "id": "I_kwDOJZ2aqs6abH1h",
      "title": "Clarify that implementations SHOULD NOT fail when one of the status lists referenced in the aggregation endpoint fails the processing rules",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/182",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tplooker"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "",
      "createdAt": "2024-10-16T06:36:31Z",
      "updatedAt": "2024-11-29T07:11:46Z",
      "closedAt": "2024-11-29T07:11:46Z",
      "comments": []
    },
    {
      "number": 188,
      "id": "I_kwDOJZ2aqs6bLAiR",
      "title": "Define Status List Response status code & redirection behavior",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/188",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "c2bo"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "We do not define how to respond to a status list request but have status codes on examples\r\nWe might also need to add language for redirects?",
      "createdAt": "2024-10-21T18:32:35Z",
      "updatedAt": "2024-11-29T07:09:16Z",
      "closedAt": "2024-11-29T07:09:16Z",
      "comments": []
    },
    {
      "number": 189,
      "id": "I_kwDOJZ2aqs6bLAjj",
      "title": "Rewrite introduction",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/189",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "The spec creates a registry and claim for status mechanisms and 1 specific mechanism, the status list. We should adjust the introduction to reflect those changes.",
      "createdAt": "2024-10-21T18:32:37Z",
      "updatedAt": "2024-11-29T07:25:52Z",
      "closedAt": "2024-11-29T07:25:52Z",
      "comments": []
    },
    {
      "number": 192,
      "id": "I_kwDOJZ2aqs6d_PFO",
      "title": "Q. Can I add a link of openwallet foundation implementation for token status list in README?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/192",
      "state": "CLOSED",
      "author": "lukasjhan",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Hi members of WG.\r\n\r\nI'm developing SD-JWT VC library for Typescript in OWF. I'm also developing token status list standard in my library as well.\r\nHere is the link: https://github.com/openwallet-foundation/sd-jwt-js\r\nand You can check the token status list library here: https://github.com/openwallet-foundation/sd-jwt-js/tree/main/packages/jwt-status-list\r\n\r\nSo I'd like to add a link of my implementation here. Is it okay?\r\n\r\n",
      "createdAt": "2024-11-11T23:03:30Z",
      "updatedAt": "2024-11-13T15:41:34Z",
      "closedAt": "2024-11-13T15:41:33Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- we are fine to add this",
          "createdAt": "2024-11-13T07:55:45Z",
          "updatedAt": "2024-11-13T07:55:45Z"
        },
        {
          "author": "lukasjhan",
          "authorAssociation": "NONE",
          "body": "@paulbastian Thank you :)",
          "createdAt": "2024-11-13T08:18:34Z",
          "updatedAt": "2024-11-13T08:18:34Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Maybe for clarifications, is this the client/wallet side or the server side or both?",
          "createdAt": "2024-11-13T10:17:43Z",
          "updatedAt": "2024-11-13T10:17:43Z"
        },
        {
          "author": "lukasjhan",
          "authorAssociation": "NONE",
          "body": "> Maybe for clarifications, is this the client/wallet side or the server side or both?\r\n\r\nIt's for both.",
          "createdAt": "2024-11-13T10:28:23Z",
          "updatedAt": "2024-11-13T10:28:23Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > Maybe for clarifications, is this the client/wallet side or the server side or both?\n> \n> It's for both.\n\nAnd on the server side supporting issuer and verifier functionality?",
          "createdAt": "2024-11-13T12:00:06Z",
          "updatedAt": "2024-11-13T12:00:06Z"
        },
        {
          "author": "lukasjhan",
          "authorAssociation": "NONE",
          "body": "> > > Maybe for clarifications, is this the client/wallet side or the server side or both?\r\n> > \r\n> > \r\n> > It's for both.\r\n> \r\n> And on the server side supporting issuer and verifier functionality?\r\n\r\nYes, we provide features to \r\n- create, encode & compress the list for issuers.\r\n- decode, decompress the list for verifiers and holders.\r\n\r\nAlso it's platform agnostic :)",
          "createdAt": "2024-11-13T12:23:07Z",
          "updatedAt": "2024-11-13T12:23:07Z"
        }
      ]
    },
    {
      "number": 194,
      "id": "I_kwDOJZ2aqs6ekQAA",
      "title": "IANA Registry",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/194",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "- Section 4 of RFC 8126 -> supply registration procedures for the registries\r\n- Define where these registries should be placed",
      "createdAt": "2024-11-14T23:08:58Z",
      "updatedAt": "2024-12-03T21:06:55Z",
      "closedAt": "2024-12-03T21:06:55Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- we propose to put into OAuth Parameters: https://www.iana.org/assignments/oauth-parameters/oauth-parameters.xhtml",
          "createdAt": "2024-11-29T07:31:39Z",
          "updatedAt": "2024-11-29T07:31:39Z"
        }
      ]
    },
    {
      "number": 196,
      "id": "I_kwDOJZ2aqs6fhgok",
      "title": "Move examples out of first introduction section",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/196",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-20T15:54:41Z",
      "updatedAt": "2024-11-29T07:25:52Z",
      "closedAt": "2024-11-29T07:25:52Z",
      "comments": []
    },
    {
      "number": 197,
      "id": "I_kwDOJZ2aqs6fhhzS",
      "title": "Add SD-JWT as example for Referenced Token to abstract and introduction",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/197",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-20T15:56:25Z",
      "updatedAt": "2024-11-29T07:25:51Z",
      "closedAt": "2024-11-29T07:25:51Z",
      "comments": []
    },
    {
      "number": 199,
      "id": "I_kwDOJZ2aqs6fiCvr",
      "title": "Re-work Security considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/199",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "- Only cryptographically protected variants are considered --> adjust security considerations accordingly if necessary",
      "createdAt": "2024-11-20T16:48:17Z",
      "updatedAt": "2024-12-03T21:03:08Z",
      "closedAt": "2024-12-03T21:03:08Z",
      "comments": []
    },
    {
      "number": 205,
      "id": "I_kwDOJZ2aqs6hL8Ik",
      "title": "Validation Rules",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/205",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "c2bo"
      ],
      "labels": [
        "pending-close"
      ],
      "body": "Re-check validation rules now that the unsigned option is gone and figure out if we can further simplify",
      "createdAt": "2024-11-29T07:50:26Z",
      "updatedAt": "2025-02-02T13:51:05Z",
      "closedAt": "2025-02-02T13:51:05Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "maybe mention key resolution now that we have a small section",
          "createdAt": "2025-01-31T13:28:50Z",
          "updatedAt": "2025-01-31T13:28:50Z"
        }
      ]
    },
    {
      "number": 207,
      "id": "I_kwDOJZ2aqs6iCPUI",
      "title": "Proposed rewording of section 12.5.  Unlinkability",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/207",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "\r\nIt is proposed to include another section called : \r\n\r\n> 12.5.2  Alternative mechanism to the use of Token Status Lists\r\n\r\n\r\nBefore it, a section that will re-use the existing text will be called :\r\n\r\n> 12.5.1  Further recommendations to the use of Token Status Lists\r\n\r\nThe whole text would look as follows:\r\n\r\n**12.5.1  Further recommendations to the use of Token Status Lists**\r\n\r\n   To avoid privacy risks for colluding Relying Parties, it is RECOMMENDED \r\n   that Issuers use batch issuance to issue multiple tokens, see Section 13.1.\r\n\r\n   To avoid further correlatable information by the values of uri and\r\n   index, Issuers are RECOMMENDED to:\r\n\r\n   *  choose non-sequential, pseudo-random or random indices\r\n\r\n   *  use decoy entries to obfuscate the real number of Referenced\r\n      Tokens within a Status List\r\n\r\n   *  choose to deploy and utilize multiple Status Lists simultaneously\r\n\r\n**12.5.2  Alternative mechanism to the use of Token Status Lists**\r\n\r\n   To avoid privacy risks for colluding Relying Parties, Issuers SHOULD \r\n   use batch issuance of multiple Tokens, but it is possible to use a \r\n   mechanism different from the use of Token Status Lists.   In such a \r\n   case, the cryptographically secured data structure derived from the \r\n   Token by the Holder does not contain a reference to a Token Status \r\n   List. \r\n      \r\n   This mechanism is only usable if the Issuer has been able to verify, \r\n   at the time of the issuance of a Token, that an appropriate application\r\n   running under a secure environment is supported by the Holder.\r\n\r\n   Instead of using a protocol for fetching token status lists from a \r\n   Status Issuer, it is possible to take advantage of another protocol \r\n   between an Holder and an Issuer, when that protocol is supported.\r\n\r\n   The fact that this other protocol is supported by an appropriate \r\n   application running under a secure environment can be indicated by \r\n   the Issuer to the Verifier by including into the Token, for example, \r\n   a security policy similar to the certificate policy from X.509 certificates \r\n   (RFC 5280). \r\n   See: https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.4\r\n\r\n   When the Relying Party is able to know that this protocol between \r\n   an Holder and an Issuer is supported, it knows that the Issuer will \r\n   be able, when necessary, to either suspend or invalidate any Token \r\n   that is has issued. \r\n    \r\n   The protocol works as follows: \r\n\r\n   from time to time, the Holder queries each Issuer that has issued \r\n   a Token, and if a Token that it has issued needs to be suspended \r\n   or invalidated, the Issuer informs the Holder.   In that case, the \r\n   Holder will  immediately stop creating new cryptographically \r\n   secured data structures derived from suspended or invalidated \r\n   Tokens.\r\n\r\n   When a Token has been invalidated, the process cannot be reversed. \r\n   However, when a Token has been suspended, the process can be reversed.\r\n\r\n   If the Holder has been unable to contact an Issuer during a defined \r\n   period of time, e.g., 24 hours, the Holder will stop creating new \r\n   cryptographically secured data structures derived from Tokens issued\r\n   by that Issuer.\r\n\r\n   In this way, as long as the Holder is able to connect to each of the \r\n   Issuers from time to time, this mechanism can be used in an off-line \r\n   environment. \r\n\r\n   In order to check the suspension or the revocation status of a \r\n   cryptographically secured data structure, neither the Holder nor the \r\n   Verifier needs to fetch additional information.  When digital \r\n   credentials are used, the Holder and the Verifier can interact in a \r\n   proximity mode without using any on-line protocol.\r\n\r\n",
      "createdAt": "2024-12-04T18:24:48Z",
      "updatedAt": "2024-12-22T23:56:15Z",
      "closedAt": "2024-12-22T23:56:15Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This draft not only introduces the Status List mechanism but also an extension point, that may be used to introduce other status mechanisms and establishes a registry. If you want to pursue your idea, I would recommend to make a new draft for this, as it seems too different from the Status List mechanism, then add an IANA consideration section that registers it as a new status mechanism. See Status Assertion draft doing the same.",
          "createdAt": "2024-12-09T14:20:29Z",
          "updatedAt": "2024-12-09T14:21:09Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "At the moment, the reader might believe that there exits is no alternative method supporting the verifier-verifier unlinkability property and if this property is desirable this makes the design particularly difficult.\r\n\r\nI read section 12.5 and I have not been convinced that the RECOMMENDATIONS placed in this section to avoid further correlatable information by the values of uri and index, can fully address the unlinkability issue.\r\n\r\nThe key point is that I would like to advertise to the readers that there exists an alternative method to the \"status_list\" method that is able to support very easily the verifier-verifier unlinkability property.\r\n\r\nI read your comment and you are right: this new method could be added to JWT Status Mechanism Methods Registry.\r\n\r\nThe use of the status_list method requires the use of a protocol to fetch the status list. However, there is no magic: if this protocol is not used, another protocol shall be used. This protocol shall take place between the Holder and the Provider of the Holder (application). \r\n\r\nSuch protocols between Holders and the Providers of the Holder already exist, but are proprietary (e.g. to steal the contacts of the individuals or to propose app. updates). As it would be unrealistic to define an interoperable protocol, this cannot end-up with a standard track RFC, but this method could be described in an Informational RFC. \r\n\r\nA problem is that this method is only one piece of a puzzle of a larger picture that would describe the architecture of the three roles Model and such a document is not currently on the agenda of this WG. In particular, the description of this architecture would start with an inital request of a \"Token\" to an Issuer that must be done by a Holder running under a secure environment. \r\n\r\nI would be happy to contribute to it, but I cannot take the lead on working draft document as my knowledge of the use of github is far from being sufficient.\r\n\r\nInstead of my initial text proposal, I propose the following text which has been slightly revised :\r\n\r\n> To avoid privacy risks for colluding Relying Parties, Issuers SHOULD use batch issuance of multiple Tokens, but it is possible to use a method different from the use of Token Status Lists. In such a case, the cryptographically secured data structure derived from the Token by the Holder would contain a Status Method Value different  from \"status_list\".\r\n> \r\n> This method is only usable if the Issuer has been able to verify, at the time of the issuance of a Token, that an appropriate application running under a secure environment is supported by the Holder.\r\n> \r\n> Instead of using a protocol for fetching token status lists from a Status Issuer, it is possible to take advantage of another protocol between an Holder and an Issuer.\r\n> \r\n> When the Relying Party knows that this other method is supported, it knows that the Issuer will be able, when necessary, to either suspend or invalidate any Token that is has issued.\r\n> \r\n> The protocol works as follows:\r\n> \r\n> From time to time, the Holder queries each Issuer that has issued a Token, and if a Token that it has issued needs to be suspended or invalidated, the Issuer informs the Holder. In that case, the Holder will immediately stop creating new cryptographically secured data structures derived from suspended or invalidated Tokens.\r\n> \r\n> When a Token has been invalidated, the process cannot be reversed.\r\n> However, when a Token has been suspended, the process can be reversed.\r\n> \r\n> If the Holder has been unable to contact an Issuer during a defined period of time, e.g., 24 hours, the Holder will stop creating new cryptographically secured data structures derived from Tokens issued by that Issuer.\r\n> \r\n> In this way, as long as the Holder is able to connect to each of the Issuers from time to time, this mechanism can be used in an off-line environment.\r\n> \r\n> In order to check the suspension or the revocation status of a cryptographically secured data structure, neither the Holder nor the Verifier needs to fetch additional information. The Holder and the Verifier can interact in a proximity mode without using any on-line protocol.\r\n> \r\n> ",
          "createdAt": "2024-12-09T16:52:54Z",
          "updatedAt": "2024-12-09T16:52:54Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If it is not clear enough that the privacy and security considerations only apply to the status list, then we can improve this. Butt we should not confuse the reader therefore I think that one draft should only describe one status mechanism.",
          "createdAt": "2024-12-09T17:10:17Z",
          "updatedAt": "2024-12-09T17:10:17Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "I will reuse my previous arguments but shuffling them a bit:\r\n\r\nI read section 12.5 and I have not been convinced at all that the RECOMMENDATIONS placed in this section allow to avoid further correlatable information by the values of uri and index.\r\n\r\nIMO, the ability to support the verifier-verifier unlinkability property is VERY important. \r\nIt should not be ruined by the use of Token status lists.\r\n\r\nAt the moment, the reader might believe that there exits no method really supporting the verifier-verifier unlinkability property. \r\nI would like to inform the readers of this document that there exists an alternative method to the \"status_list\" method that is able to support (very easily) the verifier-verifier unlinkability property.\r\n\r\nThis method would greatly simplify the code that the Relying Party /  Verifier will need to support.\r\n\r\nThe core of the document will continue to describe only one status mechanism.\r\nThe description of this alternative method would be placed into the Privacy Considerations section.",
          "createdAt": "2024-12-09T18:22:00Z",
          "updatedAt": "2024-12-09T18:22:00Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> I will reuse my previous arguments but shuffling them a bit:\n> \n> I read section 12.5 and I have not been convinced at all that the RECOMMENDATIONS placed in this section allow to avoid further correlatable information by the values of uri and index.\n> \n> IMO, the ability to support the verifier-verifier unlinkability property is VERY important. \n> It should not be ruined by the use of Token status lists.\n\nI agree that verifier-verifier unlinkability is very important. Could you elaborate why you think the recommendations are insufficient to guarantee this for status list? \n\n> \n> At the moment, the reader might believe that there exits no method really supporting the verifier-verifier unlinkability property. \n> I would like to inform the readers of this document that there exists an alternative method to the \"status_list\" method that is able to support (very easily) the verifier-verifier unlinkability property.\n\nAs I said, we can add text that explains that other status mechanisms may have other tradeoffs regarding privacy, scalability or complexity.\n\n> \n> This method would greatly simplify the code that the Relying Party /  Verifier will need to support.\n\nYour method simplifies things for the Relying Party but puts other burdens on holders and issuers. Revocation is complicated and there are no easy tradeoffs, we shouldn't let the reader believe this.\n\n> \n> The core of the document will continue to describe only one status mechanism.\n> The description of this alternative method would be placed into the Privacy Considerations section.\n\nThe alternative status mechanism should have a dedicated draft and within this draft the privacy consideration section may explain this.\n",
          "createdAt": "2024-12-09T22:43:15Z",
          "updatedAt": "2024-12-09T22:43:15Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "Clause 12.5 (Unlinkability) states:\r\n\r\n>    Colluding Issuers and Relying Parties have the possibility to link\r\n>    two transactions, as the tuple of uri and index inside the Referenced\r\n>    Token are unique and therefore traceable data.  \r\n\r\nThis is sufficient to link two transactions without the need to fetch the Token Status List. \r\nWhatever will be done for the management of the Token Status list, this linkage will remain. \r\nI probably missed something: what did I missed?\r\n",
          "createdAt": "2024-12-10T11:50:35Z",
          "updatedAt": "2024-12-10T11:50:35Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Clause 12.5 (Unlinkability) states:\n> \n> >    Colluding Issuers and Relying Parties have the possibility to link\n> >    two transactions, as the tuple of uri and index inside the Referenced\n> >    Token are unique and therefore traceable data.  \n> \n> This is sufficient to link two transactions without the need to fetch the Token Status List. \n> Whatever will be done for the management of the Token Status list, this linkage will remain. \n> I probably missed something: what did I missed?\n> \n\nThis is correct. Token Status List can achieve verifier-verifier unlinkability but not issuer-verifier unlinkability. I think this is sufficiently described in the text, you do not agree?",
          "createdAt": "2024-12-10T12:51:18Z",
          "updatedAt": "2024-12-10T12:51:18Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "No. I meant: Token Status List CANNOT achieve verifier-verifier unlinkability ... unless you demonstrate the contrary.",
          "createdAt": "2024-12-10T13:00:18Z",
          "updatedAt": "2024-12-10T13:00:18Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If you follow the recommendations in privacy consideration, you will achieve this. Every reference token gets it's separate status index using batch issuance and with randomized indices, how do you want to correlate?",
          "createdAt": "2024-12-10T15:07:53Z",
          "updatedAt": "2024-12-10T15:07:53Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "You are right for the verifier-verifier unlinkability, I forgot the main point: \r\nif a Token is used only once (which means that batch issuance is used), there cannot be any correlation between verifiers by using the status claim.\r\n\r\nI re-read the text and I believe that it is not crystal clear. \r\n\r\nThe current text is as follows:\r\n\r\n> Colluding Issuers and Relying Parties have the possibility to link two transactions, as the tuple of uri and index inside the Referenced Token are unique and therefore traceable data.  By comparing the status claims of received Referenced Tokens, two colluding Relying Parties could determine that they have interacted with the same user or an Issuer could trace the usage of its issued Referenced Token by colluding with various Relying Parties. \r\n\r\n> It is therefore recommended to use Status Lists for Referenced Token formats that have similar unlinkability properties.\r\n\r\nThe last sentence only applies to the Colluding Issuers and Relying Parties case.\r\n\r\nI would recommend to separate the two cases:\r\n\r\n> 12.5.1  Colluding Relying Parties and\r\n> 12.5.2  Colluding Issuers and Relying Parties.\r\n\r\nIn order to clarify the first case, I would propose:\r\n\r\n> 12.5.  Unlinkability\r\n> \r\n> The tuple of uri and index inside the Referenced Token are unique and therefore is traceable data.\r\n> \r\n> 12.5.1  Colluding Relying Parties\r\n> \r\n> By comparing the status claims of received Referenced Tokens, two colluding Relying Parties could determine that they have interacted with the same user.  To avoid privacy risks for colluding Relying Parties, it is RECOMMENDED that Issuers use batch issuance to issue multiple tokens, see Section 13.1. In this case, a Referenced Token SHALL be presented only once to a Relying Party.\r\n\r\nThen, I attempted to understand the second case:\r\n\r\n> (...) or an Issuer could trace the usage of its issued Referenced Token by colluding with various Relying Parties.\r\n\r\nThis linkage can simply happen by comparing Referenced Tokens originating from an Issuer and Referenced Tokens received by a Relying Party, i.e., without using the content of the Status List.  However, the remaining of this section is addressing considerations that apply to the content of the Status Lists.\r\n\r\nI believe that the text would need to be clarified.\r\n\r\nDoes it apply to \"Status Issuers\" rather than to \"Issuers\" ?\r\n\r\nI would also like to make an observation. If a Status Issuer is willing to be able to trace the usage of its issued Referenced Token by colluding with various Relying Parties, it will NOT implement these RECOMMENDATIONS and nobody will know whether it has implemented them or not (at least, the first two recommendations).\r\n\r\nIn a previous response, you wrote:\r\n\r\n> Token Status List can achieve verifier-verifier unlinkability but not issuer-verifier unlinkability.\r\n\r\nHowever, while reading the current text, it looks that the three RECOMMENDATIONS allow to remove the risk. \r\nThis is confusing.\r\n\r\n\r\n\r\n",
          "createdAt": "2024-12-10T18:24:33Z",
          "updatedAt": "2024-12-10T18:24:33Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors proposal:\r\n- clarify that other status mechanisms have other privacy and security properties (and this spec defines an extension point for new status mechanisms)\r\n- differentiate issuer-verifier and verifier-verifier unlinkability and clarify that the privacy recommendations only apply to verifier-verifier unlinkability\r\n- change Issuer to Status Issuer for the linked text",
          "createdAt": "2024-12-13T10:32:01Z",
          "updatedAt": "2024-12-13T10:32:01Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "Well,\r\n\r\nWould you be able to propose a revised wording ?\r\n\r\nI cought the following sentence that you used:\r\n\r\n> Revocation is complicated and there are no easy tradeoffs, we shouldn't let the reader believe this\r\n\r\nI responded to it by opening a new issue #209 :\r\n\r\n> Revocation and suspension are not that complicated and there are easy tradeoffs\r\n\r\n:-)\r\n\r\n ",
          "createdAt": "2024-12-13T12:53:35Z",
          "updatedAt": "2024-12-13T12:53:35Z"
        }
      ]
    },
    {
      "number": 208,
      "id": "I_kwDOJZ2aqs6jM65p",
      "title": "new Feedback from IANA Operations Manager",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/208",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "From email communication:\r\n\r\n\r\n> 1) It's not clear what the upper numeric boundary for the \"Value\" field is for the Status Type values in Section 14.5. Could you add a sentence like \"Assignable [valid?] Status Type values range from 0x00-0xFF\" [if that's accurate]?\r\n> \r\n> 2) Almost every registry at https://www.iana.org/assignments/oauth-parameters has a name that begins with the string  \"OAuth.\" Would it be appropriate to change the name of the \"Status Types\" registry to \"OAuth Status Types\"?\r\n> \r\n> 3) In the first paragraph of each subsection that describes a new registry, the registry name is presented in quotation marks, but it doesn't match the registry name that appears as the title of the subsection. It's missing the \"JWT\" or \"CWT\" (or \"OAuth\") prefix. \r\n> \r\n> 4) Locations: I see that you've listed a URL for each new registry below. Can you add both this and the registry group name to each subsection? \r\n> \r\n> To address #3 and #4, I can suggest this text:\r\n> \r\n> OLD: This specification establishes the IANA \"Status Mechanism Methods\" registry for JWT \"status\" member values. The registry records the status mechanism method member and a reference to the specification that defines it.\r\n> \r\n> NEW: This specification establishes the IANA \"JWT Status Mechanism Methods\" registry for JWT \"status\" member values and adds it to the \"JSON Web Token (JWT)\" registry group at https://www.iana.org/assignments/jwt. The registry records the status mechanism method member and a reference to the specification that defines it.\r\n> \r\n> OLD: This specification establishes the IANA \"Status Mechanism Methods\" registry for CWT \"status\" member values. The registry records the status mechanism method member and a reference to the specification that defines it.\r\n> \r\n> NEW: This specification establishes the IANA \"CWT Status Mechanism Methods\" registry for CWT \"status\" member values and adds it to the \"CBOR Web Token (CWT) Claims\" registry group at https://www.iana.org/assignments/cwt. The registry records the status mechanism method member and a reference to the specification that defines it.\r\n> \r\n> OLD: This specification establishes the IANA \"Status Types\" registry for Status List values. The registry records the a human readable label, the bit representation and a common description for it.\r\n> \r\n> NEW: This specification establishes the IANA \"OAuth Status Types\" registry for Status List values and adds it to the \"OAuth Parameters\" registry group at https://www.iana.org/assignments/oauth-parameters. The registry records the a human readable label, the bit representation and a common description for it. Assignable Status Type values range from 0x00-0xFF [again, assuming this is correct]. \r\n> \r\n> Finally, one question, and I don't know whether this is at all relevant to your use case: would it be appropriate to reserve any values in the new Status Types registry, whether for Private Use, Experimental Use, or future extensibility? You can find definitions of the terms \"Reserved,\" \"Private Use,\" and \"Experimental Use\" in Section 6 of RFC 8126:\r\n> \r\n> https://www.rfc-editor.org/rfc/rfc8126.html\r\n> ",
      "createdAt": "2024-12-13T10:37:08Z",
      "updatedAt": "2024-12-22T23:57:01Z",
      "closedAt": "2024-12-22T23:57:01Z",
      "comments": []
    },
    {
      "number": 209,
      "id": "I_kwDOJZ2aqs6jN6D9",
      "title": "Revocation and suspension are not that complicated and there are easy tradeoffs",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/209",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In #207, Paul wrote:\r\n\r\n> Revocation is complicated and there are no easy tradeoffs, we shouldn't let the reader believe this.\r\n\r\nWhat you write was true before smart phones existed, but the existence of smart phones offers new possibilities. \r\nIf / when trusted apps. can be used on a smart phone, then other status methods become possible.\r\n\r\n**Revocation and suspension of digital credentials**\r\n\r\nWhen a Holder is requesting a digital credential, it needs to know the url of the Issuer, while the Issuer needs to know the characteristics of the Holder, e.g., using attestations. This allows to establish a secure channel between them. That channel can then be used to support a \"status protocol\" between a Holder and an Issuer.\r\n\r\nIt is important to notice that this alternative method can support both SUSPENSION and revocation. \r\nAs soon as either a suspension or a revocation is decided by the Issuer, it can be taken into account either very quickly by the app. if the smartphone is connected to the Internet, e.g. within five minutes when the app. polls each Issuer every five minutes, or within 24 hours, if the smartphone is not connected to the Internet.\r\n\r\nIn addition, this alternative method natively supports the issuer-verifier unlinkability characteristic. \r\n\r\nIn terms of energy saving, it is \"green\", since no data centre needs to be used, e.g., to make available large numbers of Token Status Lists.\r\n\r\nUp to now, I didn't proposed a name to identify this alternative method. I propose: **status_protocol**\r\n\r\n   *  Status Method Value: status_protocol\r\n\r\n   *  Status Method Description: A protocol between a Holder and an Issuer where the Issuer instructs the Holder to revoke, \r\n      suspend or reactivate one or more tokens.\r\n\r\nTo close the loop, the **status_protocol** method can be considered to be an easy tradeoff. \r\n\r\n:-)\r\n\r\nMore seriously, it shifts the problem into two other areas: \r\n-\tthe downloading of wallet applications into smart phones by trusted wallets providers, and\r\n-\tthe development of a status protocol between an Holder and an Issuer. \r\n        In that case, the status protocol could be defined in a standard track RFC.\r\n\r\n\r\nR**evocation and suspension at once of all the digital credentials contained in a lost or stolen digital identity wallet**\r\n\r\nA similar approach can be used to address the case where the Holder is lost or stolen (in practice, when the smart phone is lost or stolen). Instead of placing the burden on the user to contact individually each Issuer that issued a digital credential, it is easier for the user to use a single point of contact: the Holder Provider (i.e., the app. provider).\r\n\r\nAn app. on a smart phone, already regularly connects to its provider, e.g., to check for software updates. \r\nAn additional protocol to revoke, suspend or reactivate all the digital credentials / tokens hosted by the Holder would be added. \r\n",
      "createdAt": "2024-12-13T12:52:35Z",
      "updatedAt": "2024-12-23T00:01:33Z",
      "closedAt": "2024-12-22T23:56:16Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Your proposal relies on the assumption that the application on the wallet can be considered trusted. That is a pretty strong assumption and also different from the assumptions that status list is built upon. If those are your assumptions, it also begs the question, why you would have anything like tokens / credentials anyway if you completely trust the integrity of the data on the smartphone - it could just be unsigned data in that case.\r\n\r\nThat being said, what you describe is a very different approach and imho does not align with the overall assumptions/concepts of status list. We opened the door for other status mechanism (and I am sure there will be more than 1 in the long run) by creating the extension point with the \"status\" claim in this specification.",
          "createdAt": "2024-12-13T20:01:35Z",
          "updatedAt": "2024-12-13T20:01:35Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Revocation has tradeoffs and I agree with Christian. Here are a few points that you did not seem to consider:\r\n- trusting the wallet/holder/smartphone is a difficult assumption and as Christian points out, your model doesn't seem to fit very well with Verifiable Credentials (or saying Referenced Tokens in the context of status mechanisms). Similar things have been done with EAC protocol in the German eID Card, which did not feature issuance and bringing this to the smartphone world revealed some significant challenges with the Secure Elements, which was part of the problem smart-eID project was discontinued. TEEs on today's smartphones are not open to deploying your own trusted applets either.\r\n- you put significant burdens in terms of scalability on issuers and holders, as all issuers need daily communication with all holders, which is much more traffic compared to status list. Also this puts significant availability requirements to all issuers.\r\n- your latter approach is actually more reasonable and similar things are being considered in eIDAS already under the term Wallet Instance Attestation.\r\n\r\nI appreciate your comment and we welcome new status mechanisms, that's why we introduced the extension point. However, I think this is the wrong place, as this draft will only introduce the status registry and the extension point and the status list as the very first mechanism. I think you should either start your own draft or discuss this on OAuth/Spice mailing list.\r\n\r\nPending close.",
          "createdAt": "2024-12-14T14:55:37Z",
          "updatedAt": "2024-12-14T14:55:37Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "@ Paul: I dislike to sustain conversations during a week-end, but since you indicated \"Pending close\", I will respond . \r\nIf you have a further reply, please wait until Monday to post it.\r\n\r\n@ Christian wrote:\r\n\r\n> Your proposal relies on the **assumption** that the application on the wallet **can be considered** trusted. \r\n\r\nNot exactly. My proposal relies on the **requirement** that the application on the wallet **shall be** trusted.\r\n\r\nLet us use two worse case examples to illustrate this: \r\n\r\n- if the private key is not well protected within the smart phone, it can be transferred to someone else (with or without the agreement of the legitimate possessor of the associated digital credential) and then after used by another individual.\r\n- if the private key can be used by any application that the individual can download into his smart phone, then this private key can be used remotely by someone else (as long as both smart phones communicate). \r\n \r\nIn practice, a TEE shall be used.\r\n\r\nLet us now make a parallel:\r\n\r\n1. When using qualified electronic signatures, before issuing a certificate, the certificate issuer needs to verify that the certificate request originates from a SSCD (Secure Signature Creation Device).\r\n\r\n2. In the same way, when using digital credentials, before issuing a digital credential, the issuer needs to verify that the digital credential request originates from a trusted application that supports specific characteristics.\r\n\r\nThe status_protocol method relies on the fact that the Holder (application) cannot be any kind of application, but that it shall be a trusted application supporting specific characteristics that are necessary for security reasons. However, it adds another functionality to the set of trusted characteristics / functionalities that are already needed.\r\n\r\nThis means that the status_protocol method can only be supported in the context of a secure implementation.\r\n\r\n> That is a pretty strong assumption and also different from the assumptions that status list is built upon.\r\n\r\nYes, it is a different approach, but this approach only takes into account the fact that a Holder supporting both selective disclosure and the verifier-verifier unlinkability property cannot be any kind of application.\r\n\r\n> If those are your assumptions, it also begs the question, why you would have anything like tokens / credentials anyway if you completely trust the integrity of the data on the smartphone - it could just be unsigned data in that case.\r\n\r\nNo. See my earlier responses above. This is wider than simply **trusting the integrity of the data on the smartphone**. \r\n\r\n> That being said, what you describe is a very different approach and imho does not align with the overall assumptions/concepts of status list. \r\n\r\nYes, it is a different approach which uses a different method.\r\n\r\n> We opened the door for other status mechanism (and I am sure there will be more than 1 in the long run) by creating the extension point with the \"status\" claim in this specification.\r\n\r\nThis is fine and really appreciated.\r\n\r\nWell, at the moment there exist CRLs, OCSP responses and Token Status Lists. These methods pull status information from trusted sources. The status_protocol method pulls status information directly from the Issuer, but contrary to the previously three methods, the pulled information is NEVER made available to the public.\r\n\r\nThe Holder connects to the Issuer using a key that has been negotiated at the time the digital credential has been requested.\r\nThat key allows to establish a secure channel between a Holder and an Issuer. The status query will only be accepted if it comes through the appropriate secure channel.\r\n\r\nThe status_protocol method relies on the assumption that the Holder is capable from time to time to contact one or more Issuers. So, there is indeed an assumption, but it is a different from the assumption you made at the beginning of your response.\r\n\r\n\r\n",
          "createdAt": "2024-12-14T17:00:12Z",
          "updatedAt": "2024-12-14T17:00:12Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "@ Paul:\r\n\r\nThis draft is only one part of a large puzzle that may be called a Framework or an Architecture and without a global view of this puzzle, it is difficult to identify the additional pieces of the puzzle that are needed.\r\n\r\nThere is no free lunch and they are two difficulties. Defining a status protocol between a Holder and an Issuer would not be that difficult. A major difficulty is the one you indicate below:\r\n\r\nYou wrote:\r\n\r\n> Here are a few points that you did not seem to consider:\r\n\r\n> \r\n\r\n> \u00b7\ttrusting the wallet/holder/smartphone is a difficult assumption and as Christian points out, your model doesn't seem to fit very well with Verifiable Credentials (or saying Referenced Tokens in the context of status mechanisms). Similar things have been done with EAC protocol in the German eID Card, which did not feature issuance and bringing this to the smartphone world revealed some significant challenges with the Secure Elements, which was part of the problem smart-eID project was discontinued. **_TEEs on today's smartphones are not open to deploying your own trusted applets either._**\r\n\r\nYour are last sentence is absolutely true.\r\n\r\nThere is a need to be able to download in the TEE (Trusted Execution Environment) of a smartphone one or more TAs that are **not** provided by the smartphone manufacturer or the device manager. The hardware is already there, the concepts and the architecture are already there as well, however the software to download from different trusted repositories (and then execute) multiple TAs in a TEE is not yet available.\r\n\r\nIn the Android environment, when using Trusty, currently multiple TAs cannot (yet) be downloaded into the TEE:\r\n\r\n> \"Currently all Trusty applications are developed by a single party and packaged with the Trusty kernel image. The entire image is signed and verified by the bootloader during boot. Third-party application development is not supported in Trusty at this time.\"\r\n\r\n**Source**: https://source.android.com/docs/security/features/trusty?hl=en#third-party_trusty_applications\r\n\r\nRFC 9397, which is an Informational RFC, describes a Trusted Execution Environment Provisioning (TEEP) Architecture. \r\nI don't know when / if Trusty will be extended to support some of the concepts described in this RFC.\r\n\r\nIf the specification and the development of the status_protocol method are done in parallel to the development of a TAM (Trusted Application Manager), the two developments might possibly end-up within the same time frame.\r\n\r\nYou wrote:\r\n\r\n> \u00b7\tyou put significant burdens in terms of scalability on issuers and holders, as all issuers need daily communication with all holders, which is much more traffic compared to status list. Also this puts significant availability requirements to all issuers.\r\n\r\nWell, the size of the messages that will need to be exchanged will be very small. There will be at least two orders of magnitude difference for the traffic between the two methods. Issuers only need to be online once a day. No response from an Issuer does not block the system: it only delays the moment when the suspension or the revocation will be enforced by the Holder. This is much better than the case when a Status Issuer is not available online: it blocks the system.\r\n\r\nYou wrote:\r\n\r\n> \u00b7\tyour latter approach is actually more reasonable and similar things are being considered in eIDAS already under the term Wallet Instance Attestation.\r\n\r\n\r\nI have not seen \"similar things are being considered in eIDAS already under the term Wallet Instance Attestation\". \r\nWould you have a pointer ?\r\n\r\n**MY OWN CONCLUSION**\r\n\r\nAt the moment, it might be quite hard for a reader to think that another status method can be used and that this method is capable to support functionality that is not supported by the status_list method: suspension can be supported while the Issuer-Verifier unlinkability is natively supported.\r\n\r\nI have provided a detailed description of this method by raising two issues. The goal was not to place this detailed description in the core of this document, but only to make it understandable.\r\n\r\nI propose that the draft should indicate in clause 12.5 (Unlinkability) that another method, based on a different principle, can be used, supporting additional functionality and to include a one page informative annex that gives a flavour of it.\r\n\r\nIf you agree in principle, I let you add in the core of the document a few sentences, to explain this and then I can provide the one page explanation.\r\n\r\n**One additional comment:**\r\n\r\nAlong this discussion, another topic has emerged: in case of the loss or the theft of the smartphone, the ability to revoke or suspend the Holder as a whole instead of revoking or suspending the digital credentials [Tokens] one by one by every Issuer.\r\nI believe that this should be mentioned \"somewhere\" in the draft.\r\n\r\nYou finally wrote:\r\n\r\n> I think you should either start your own draft or discuss this on OAuth/Spice mailing list.\r\n\r\nThe question is whether some WG members would be interested to participate to this effort, but the timing is not well chosen and I will wait until next year before initiating a discussion on this topic on the mailing lists.\r\n",
          "createdAt": "2024-12-14T17:40:06Z",
          "updatedAt": "2024-12-14T17:40:06Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As you point out that using TEEs in the way you envision is currently not possible, I think its fair to say that tradeoffs have to be made in revocation. At least I'm only considering methods that are actually doable with today's technology and how it is deployed.\r\n\r\nBeside that I merged the suggestions you had and clarified that jother status mechnaisms have different tradeoffs and security and privacy consideration. I would refrain from adding text on the potential mechanisms, as I haven't seen this in other RFCs and naming a single one would be descriminating to other status ideas.",
          "createdAt": "2024-12-23T00:01:32Z",
          "updatedAt": "2024-12-23T00:01:32Z"
        }
      ]
    },
    {
      "number": 212,
      "id": "I_kwDOJZ2aqs6kNJnw",
      "title": "Drop \"Methods\" from registry names",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/212",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "              I've seen that we currently say:\r\n\r\n> IANA \" JWT Status Mechanism Methods\" registry ...\r\n\r\nI was wondering if we should cut out \"Methods\"?\r\n\r\n_Originally posted by @paulbastian in https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/211#issuecomment-2544818677_\r\n            ",
      "createdAt": "2024-12-22T23:55:53Z",
      "updatedAt": "2025-01-09T07:11:10Z",
      "closedAt": "2025-01-09T07:11:10Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "As mentioned in the previous comment, I agree it feels somewhat redundant -> I am fine with removing it",
          "createdAt": "2025-01-02T16:08:04Z",
          "updatedAt": "2025-01-02T16:08:04Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Solved by #214 ",
          "createdAt": "2025-01-09T07:11:10Z",
          "updatedAt": "2025-01-09T07:11:10Z"
        }
      ]
    },
    {
      "number": 216,
      "id": "I_kwDOJZ2aqs6lherb",
      "title": "Test vectors",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/216",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "- Move [section 10 ](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#section-10)[Further Examples](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-further-examples) before IANA section and rename to Test vectors\r\n- add examples for 4 and 8 bit with longer lists in general",
      "createdAt": "2025-01-09T07:18:36Z",
      "updatedAt": "2025-02-02T09:37:10Z",
      "closedAt": "2025-02-02T09:37:10Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Update from the interim meeting: Add more test vectors for all bit sizes and longer status lists and probably move to an appendix.",
          "createdAt": "2025-01-14T07:09:07Z",
          "updatedAt": "2025-01-14T07:09:07Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "depends on #222",
          "createdAt": "2025-01-14T12:43:41Z",
          "updatedAt": "2025-01-14T12:43:41Z"
        }
      ]
    },
    {
      "number": 217,
      "id": "I_kwDOJZ2aqs6l9F4T",
      "title": "Comments on section 12.5.1 Unlinkability",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/217",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "tplooker"
      ],
      "labels": [],
      "body": "The text states:\r\n\r\n> \r\n> 12.5.1. Colluding Relying Parties \r\n> \r\n> Two or more colluding Relying Parties may link two transactions involving the same Referenced Token by comparing the status claims of received Referenced Tokens, and therefore determine that they have interacted with the same Holder.\r\n> \r\n> To avoid privacy risks for colluding Relying Parties, it is RECOMMENDED that Issuers use batch issuance to issue multiple Referenced Tokens, see Section 13.1. \r\n\r\n\"Batch issuance\" of Referenced Tokens, does not implies \"one-time-use \"Referenced Tokens. \r\nTherefore the wording \"one-time-use Referenced Tokens\" is preferred and used.\r\n\r\nChange into:\r\n\r\n> 12.5.1. Colluding Relying Parties \r\n> \r\n> Two or more colluding Relying Parties may link two transactions involving the same Referenced Token by comparing the status claims of received Referenced Tokens, and therefore determine that they have interacted with the same Holder. \r\n> \r\n> To avoid privacy risks for colluding Relying Parties, it is RECOMMENDED that Issuers issue one-time-use Referenced Tokens, see Section 13.1. The status of every one-time-use Referenced Token SHOULD be placed in a Token Status List chosen at random.\r\n> \r\n> After Verification, Relying Parties SHOULD NOT store the Referenced Token. It may be sufficient to store the result of the verification and any user data that is needed for the application.\r\n> \r\n\r\nThe text continues with:\r\n\r\n> To avoid further correlatable information by the values of uri and index, Status Issuers are RECOMMENDED to: \r\n> - choose non-sequential, pseudo-random or random indices\r\n> - use decoy entries to obfuscate the real number of Referenced Tokens within a Status List\r\n> - choose to deploy and utilize multiple Status Lists simultaneously\r\n\r\nBecause this text is about implementation considerations, it should be removed from section 12.5.1 and placed into section 13 (Implementation Considerations) and more precisely section 13.1 (13.1.  Token Lifecycle). \r\n\r\nHowever, while this text has been considered, it has not been reused verbatim. See the text proposals done when considering section 13.1.\r\n",
      "createdAt": "2025-01-13T15:04:47Z",
      "updatedAt": "2025-01-23T07:20:58Z",
      "closedAt": "2025-01-23T07:20:58Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- add \"one-time usage to batch-issued\r\n- in general, we don't want to talk much about Referenced Token\r\n- if Referenced Token is not needed by the RP, e.g. for audit trail, then RP may remove it, or its status list part, or be aware of the linkable nature of the Referneced Token",
          "createdAt": "2025-01-16T07:30:10Z",
          "updatedAt": "2025-01-16T07:30:10Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "I have raised #240. With regard to the request to shift this section, its fine for privacy considerations to also include implementation guidance so long as the guidance pertains to privacy, therefore I dont think we should move it.",
          "createdAt": "2025-01-23T06:58:44Z",
          "updatedAt": "2025-01-23T06:58:44Z"
        }
      ]
    },
    {
      "number": 218,
      "id": "I_kwDOJZ2aqs6l9SkJ",
      "title": "Comments on section 12.5.2 Unlinkability",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/218",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "tplooker"
      ],
      "labels": [
        "pending-close"
      ],
      "body": "The text states:\r\n\r\n> 12.5.2. Colluding Status Issuer and Relying Party\r\n> \r\n> A Status Issuer and a Relying Party [Issuer ??] may link two transaction involving the same Referenced Tokens by comparing the status claims of the Referenced Token, and therefore determine that they have interacted with the same Holder. It is therefore recommended to use Status Lists for\r\n\r\n>  Referenced Token formats that have similar unlinkability properties.\r\n\r\nThe last sentence is not implementable and should be removed. \r\n\r\nAs a Status Issuer is believed to be trusted, hence speaking of a \"colluding issuer\" would not be fair.  However, a Status Issuer may be coerced to perform some actions with the goal to reveal the identity of the user (the linkage of accesses is not the concern).\r\n\r\nChange into:\r\n\r\n> 12.5.2. Coerced Referenced Token Issuers and Relying Parties\r\n> \r\n> To reduce privacy risks for coerced Referenced Token Issuers and Relying Parties, it is RECOMMENDED that Referenced Tokens Issuers issue one-time-use Referenced Tokens, see Section 13.1. \r\n\r\n> For each issued Referenced Token, the Referenced Token Issuer needs to remember the tuple of uri and index inside the Referenced Token. \r\n> \r\n> If the Relying Party memorizes the Referenced Tokens that it receives, then some authority might coerce a Relying Party to reveal  the tuple of uri and index inside the Referenced Token and, then after, might also coerce the Issuer of these Referenced Tokens to reveal the identity of the End-Users. If the Relying Party does not memorize the content of a Referenced Token that it receives, then the risk can be avoided.\r\n> \r\n> After Verification, Relying Parties SHOULD NOT store the Referenced Token. It may be sufficient to store the result of the verification and any user data that is needed for the application.\r\n> \r\n> If a Relying Party does not store Reference Tokens, then the tuple of uri and index which is present inside the Referenced Token cannot be used anymore to reveal the identity of the user.\r\n> ",
      "createdAt": "2025-01-13T15:19:29Z",
      "updatedAt": "2025-01-31T14:01:20Z",
      "closedAt": "2025-01-31T14:01:18Z",
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @Denisthemalice I'm unable to understand which sentence you are referring to is un-implementable, I don't see any normative guidance hence unable to understand what you are referring to.\n\nI dont follow your rationale for why \"collusion\" isn't an accurate description of what is occuring here. This privacy consideration is describing when the RP and status issuer elect to collude and the possible privacy harms of that.\n\nMarking the issue pending close without further clarification. ",
          "createdAt": "2025-01-29T06:59:54Z",
          "updatedAt": "2025-01-29T06:59:54Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Linkability (RP + RP) and Traceability (RP + IdP) are common criteria for the privacy properties of credential systems.\nThere is imho value in that section/scenario.\n\nTrying to match the privacy properties of status mechanism and the credential format makes sense and I am not sure how that is not implementable - it is a privacy consideration.\n\nAlso: This document is about the Status List / Status mechanism, not about the referenced token, we cannot give guidance on those within the scope of this document.",
          "createdAt": "2025-01-31T14:01:18Z",
          "updatedAt": "2025-01-31T14:01:18Z"
        }
      ]
    },
    {
      "number": 219,
      "id": "I_kwDOJZ2aqs6l9ZZ1",
      "title": "Proposed replacement for 13.1, 13.2 and 13.3 placed under section 13 (Implementation Considerations)",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/219",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "tplooker"
      ],
      "labels": [],
      "body": "Proposed replacement for 13.1, 13.2 and 13.3\r\n\r\n> 13.1.  Status List Token Lifecycle\r\n> \r\n> Status List Tokens should be issued in advance, even if the Issuer of the Referenced Tokens has not yet issued a single Referenced Token.\r\n> \r\n> The number of Status List Tokens that will be needed between two updates should be estimated by the Referenced Token Issuer and for every newly issued Referenced Token, the tuple of uri and index should be chosen at random to correspond to a location within one of these Status List Tokens.\r\n> \r\n> The size and the number of the Status List Tokens will be highly dependent whether one-time use Referenced Tokens will be used or not.  \r\n> \r\n> For one-time use Referenced Tokens, in order to reduce the number of Status List Tokens that will need to be maintained by the Status List Issuer, it is RECOMMENDED to use short-lived Referenced Tokens, e.g., valid during a week or a month at most. The renewal of the Referenced Tokens SHOULD be done automatically by the Holder as soon as the Holder will be able to connect to the Issuer of the Referenced Tokens it manages.\r\n> \r\n> The Referenced Token Issuer should group Referenced Tokens that expire in the same time frame in Status List Tokens that do not need to be maintained when all the Referenced Tokens have expired. As long as all the Referenced Tokens that are referenced in a Status List Token have not expired, the Status List Token Issuer shall continue issuing the Status List Token. Once all Referenced Tokens have expired, the Referenced Token Issuer SHOULD inform the Status List Issuer, that the uri does not need to be maintained anymore. It is then up to the Status List Token Issuer to stop issuing Status List Tokens.\r\n> ",
      "createdAt": "2025-01-13T15:26:43Z",
      "updatedAt": "2025-01-31T14:04:05Z",
      "closedAt": "2025-01-31T14:04:04Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\r\n- your suggestions strips off a lot of existing information in these sections, so it's not acceptable\r\n- @tplooker will make a PR on the suggestions in the other unlinkability issues",
          "createdAt": "2025-01-16T07:45:06Z",
          "updatedAt": "2025-01-16T07:45:06Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Proposed replacement for 13.1, 13.2 and 13.3\n> \n> > 13.1.  Status List Token Lifecycle\n> > Status List Tokens should be issued in advance, even if the Issuer of the Referenced Tokens has not yet issued a single Referenced Token.\n> > The number of Status List Tokens that will be needed between two updates should be estimated by the Referenced Token Issuer and for every newly issued Referenced Token, the tuple of uri and index should be chosen at random to correspond to a location within one of these Status List Tokens.\n\nThis recommendation is already present.\n\n> > The size and the number of the Status List Tokens will be highly dependent whether one-time use Referenced Tokens will be used or not.\n> > For one-time use Referenced Tokens, in order to reduce the number of Status List Tokens that will need to be maintained by the Status List Issuer, it is RECOMMENDED to use short-lived Referenced Tokens, e.g., valid during a week or a month at most. The renewal of the Referenced Tokens SHOULD be done automatically by the Holder as soon as the Holder will be able to connect to the Issuer of the Referenced Tokens it manages.\n\nWe will not make any guidance for the Referenced Tokens, as this is not the focus of this draft.\n\n> > The Referenced Token Issuer should group Referenced Tokens that expire in the same time frame in Status List Tokens that do not need to be maintained when all the Referenced Tokens have expired. As long as all the Referenced Tokens that are referenced in a Status List Token have not expired, the Status List Token Issuer shall continue issuing the Status List Token. Once all Referenced Tokens have expired, the Referenced Token Issuer SHOULD inform the Status List Issuer, that the uri does not need to be maintained anymore. It is then up to the Status List Token Issuer to stop issuing Status List Tokens.\n\nThis recommendation is already present.",
          "createdAt": "2025-01-31T14:04:04Z",
          "updatedAt": "2025-01-31T14:04:04Z"
        }
      ]
    },
    {
      "number": 220,
      "id": "I_kwDOJZ2aqs6l_k5q",
      "title": "The term Issuer SHOULD NOT be used to refer to an entity acting \"for all three roles\"",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/220",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "pending-close"
      ],
      "body": "On page 3, the text states:\r\n\r\n> If not further specified, the term Issuer may refer to an entity acting for all three roles.  \r\n\r\nThis sentence should be removed.\r\n\r\nThe role of the Issuer and of the Status Issuer should be kept separate in the whole document.\r\nA Status Issuer does not have access to the data that has been provided when the user was enrolled by the Issuer. \r\n\r\nAs a consequence, the following sentence should be reconsidered:\r\n\r\n>    If the roles of the Issuer and the Status Provider are performed by\r\n>    two different entities, this may give additional privacy assurances\r\n>    as the Issuer has no means to identify the Relying Party or its\r\n>    request.\r\n\r\nThese \"additional privacy assurances\" exist as soon as the role of the Issuer and of the Status Issuer are kept separate. \r\n",
      "createdAt": "2025-01-13T18:24:16Z",
      "updatedAt": "2025-02-03T09:39:36Z",
      "closedAt": "2025-01-31T13:43:35Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Could you elaborate at which parts of the draft it does not fit in your opinion?",
          "createdAt": "2025-01-17T09:32:59Z",
          "updatedAt": "2025-01-17T09:32:59Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "See the issue #227 \"Which keys should be used to sign and verify Status List Tokens ?\" which contains more details. \n\nIf the same key is used to sign the Referenced Token and the Token Status List, then the term Issuer may refer to an entity acting for all three roles. \n\nIf the Issuer and the Status Issuer use different keys, then the role of the entity signing Referenced Tokens should not be confused with the role of the entity signing Token Status Lists. \n\n\n\n\n",
          "createdAt": "2025-01-17T17:20:09Z",
          "updatedAt": "2025-01-17T17:20:09Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "And are there particular sections in the draft where you think the usage of the term \"Issuer\" is not correct?",
          "createdAt": "2025-01-17T17:25:09Z",
          "updatedAt": "2025-01-17T17:25:09Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\n- pending close unless specific line references to the draft are given on this issue",
          "createdAt": "2025-01-27T07:21:46Z",
          "updatedAt": "2025-01-27T07:21:46Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The issues from #227 are being resolved in #248 ",
          "createdAt": "2025-01-30T15:35:07Z",
          "updatedAt": "2025-01-30T15:35:07Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "The sentence which is incorrect is:\n\n> If not further specified, the term Issuer may refer to an entity acting for all three roles.\n\nThis sentence should be removed\n\nSection 3 (Terminology) states: \n\n> Issuer: An entity that issues the Referenced Token.\n> \n> Status Issuer: An entity that issues the Status List Token about the status information of the Referenced Token. This role may be fulfilled by the Issuer.\n> \n> Status Provider: An entity that provides the Status List Token on a public endpoint. This role may be fulfilled by the \"Status Issuer\".\n> \n\nI am still not convinced that the role of a \"Status Provider\" needs to be considered as separate from the role of the Status Issuer.\n\nIn RFC 5280, the role of the \"CRL issuer\" is recognized, but the role for a \"CRL Provider\" does not exist. \nAs CRLs and Status List Tokens are similar, I don't see for which reason we should introduce the role of a \"Status Provider\". \n\nA Status Provider should also use a single \"distribution point\". I noticed that only one \"distribution point\" is being used, \nbut it would not hurt to use the plural: a CRL issuer can use several  \"distribution points\". Why should it be otherwise for a Status Issuer ? \n\nIMO, the definition of a \"Status Provider\" should be removed.\n\nThe definition of a Status Issuer should be replaced by:\n\n> Status Issuer: An entity that issues Status List Tokens about status information of Referenced Tokens using distribution points. \nThis role may be fulfilled by the Issuer.\n\nThe first definition would be better when using the plural:\n\n> Issuer: An entity that issues Referenced Tokens. \n\nIn section 6.2, the text states:\n\n> 6.2.  Referenced Token in JOSE\n> \n> (...)\n> \n>    The following content applies to the JWT Claims Set:\n> \n>          (...)\n> \n>          o  uri: REQUIRED.  The uri (URI) claim MUST specify a String\n>             value that identifies the Status List Token containing the\n>             status information for the Referenced Token.  The value of\n>             uri MUST be a URI conforming to [RFC3986].\n\nChange into:\n\n>          o  uris: REQUIRED.  JSON array of strings that contains URIs \n>             that identify one or more Status List Tokens containing the status \n>             information for the Referenced Token.  The value of each uri \n>             MUST be a URI conforming to [RFC3986].\n\nPerform the same type of change for section 6.3(Referenced Token in COSE)\n",
          "createdAt": "2025-02-03T09:39:34Z",
          "updatedAt": "2025-02-03T09:39:34Z"
        }
      ]
    },
    {
      "number": 221,
      "id": "I_kwDOJZ2aqs6l_nnJ",
      "title": "Reduce the statuses to 2 and 1 bit",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/221",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "In section 4 (Status List) the text states:\r\n\r\n>    2.  The overall Status List is encoded as a byte array.  Depending on\r\n>        the bit-size, each byte corresponds to 8/(#bit-size) statuses\r\n>        (8,4,2, or 1). \r\n\r\nI really wonder whether 8 bits will ever be needed.\r\n\r\nI believe that, 2 and 1 bits will be enough. \r\nThe ability to support suspension is critically important.\r\n\r\nTest vectors should only be provided for 2 bits.\r\n",
      "createdAt": "2025-01-13T18:27:23Z",
      "updatedAt": "2025-01-23T07:29:22Z",
      "closedAt": "2025-01-23T07:29:20Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I guess same discussion as in the other issue: https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/225#issuecomment-2589806687",
          "createdAt": "2025-01-14T20:08:08Z",
          "updatedAt": "2025-01-14T20:08:08Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think there is very little effort for implementers to do 4+8bits if they do 2+1. There is potential limitation is we have a total of 4 possible status type values. I'm not okay with removing support for 4+8 bits.",
          "createdAt": "2025-01-16T17:58:13Z",
          "updatedAt": "2025-01-16T17:58:13Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\n- we don't think this suggestion has a good impact on the draft for the given reasons",
          "createdAt": "2025-01-23T07:29:20Z",
          "updatedAt": "2025-01-23T07:29:20Z"
        }
      ]
    },
    {
      "number": 222,
      "id": "I_kwDOJZ2aqs6mFZIz",
      "title": "Interims Feedback: Discussion around Suspended Status Type",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/222",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "In the  OAuth Interims Call on 13. Jan 2025, feedback occured towards the pre-defined Status Types.\r\n\r\nCurrently we define only 3 Status Types:\r\n- 0x00 VALID\r\n- 0x01 INVALID\r\n- 0x02 SUSPENDED\r\n- the rest is undefined or application-specific\r\n\r\nThere was no objection towards 0x00 and 0x01 and people agreed that for security reasons its best to have those important ones fixed in the specification. Towards 0x02 (suspended) there were different opinions and suggestions. The summarized options are:\r\n\r\n## Option A\r\nKeep 0x02 (suspended) as pre-defined but add additional text in the draft that explains potential privacy issues of it (leaking more information than necessary when used with natural persons) but also explains potential use cases (suspended may signal different actions for the Relying Party and avoid deletion of an account or similar)\r\n\r\n## Option B\r\nRemove 0x02 (suspended) and have this as an application-specific, ecosystem-depended value, if needed. \r\n\r\n## Option C\r\nLeave 0x00 and 0x01 as pre-defined in the draft and add context-specific values and descriptions for the other ones in the Status List Token, see initial thoughts on this in #1 ",
      "createdAt": "2025-01-14T07:18:33Z",
      "updatedAt": "2025-02-02T19:26:04Z",
      "closedAt": "2025-02-02T19:26:04Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Editor's call: Preference to keep suspended in the pre-defined values (with additional section explaining its risk).\r\nWe also might want to reserve certain ranges of status type values for further usage.",
          "createdAt": "2025-01-16T07:21:27Z",
          "updatedAt": "2025-01-16T07:21:27Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\n-  possible other status type for OUT_OF_DATE\n- make clear that all other values that are not APPLICATION_SPECIFIC are reserved for future use/registration",
          "createdAt": "2025-01-23T07:36:42Z",
          "updatedAt": "2025-01-23T07:36:42Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "todo: Propose Privacy Considerations for Suspended status",
          "createdAt": "2025-01-29T07:51:41Z",
          "updatedAt": "2025-01-29T07:51:41Z"
        }
      ]
    },
    {
      "number": 223,
      "id": "I_kwDOJZ2aqs6mFcGu",
      "title": "Interims Feedback: Short-lived credentials",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/223",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "Encourage more explicitly the usage of short-lived credentials and also its benefits of being able to stop serving an old status list once all referenced tokens have expired.\r\n- In rationale: short-lived credentials as an alternative to revocation\r\n- In implementation considerations: Size and lifetime of status lists that have to be served is dependant on life-time of referenced tokens",
      "createdAt": "2025-01-14T07:26:37Z",
      "updatedAt": "2025-01-23T07:06:50Z",
      "closedAt": "2025-01-23T07:06:50Z",
      "comments": []
    },
    {
      "number": 224,
      "id": "I_kwDOJZ2aqs6mFc8i",
      "title": "Interims Feedback: Explain motivation to split issuer / status list issuer / status list provider",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/224",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-01-14T07:29:10Z",
      "updatedAt": "2025-02-02T13:47:54Z",
      "closedAt": "2025-02-02T13:47:54Z",
      "comments": [
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "Issuer and status Issuer Terminology\n\nIn section 3 (Terminology) the text defines the following term:\n\n> Status Issuer:  An entity that issues the Status List Token about the status information of the Referenced Token.  This role may be fulfilled by the Issuer.\n\n\nChange into:\n\n> Status Issuer:  A Status issuer issues Status List Tokens that contain status information of Referenced Tokens using one or more distribution points. The Status issuer is either the Issuer or an entity that has been authorized by the Issuer to issue Status List Tokens.\n\n\nExplanation note:  The second sentence is a direct word-to-word transposition of the following sentence that is present in RFC 5280 and which applies to CRLs: \n\n> \"The CRL issuer is either the CA or an entity that has been authorized by the CA to issue CRLs.\"\n\nIn section 3 (Terminology) the text defines the following term:\n\n> Status Provider:  An entity that provides the Status List Token on a public endpoint.  This role may be fulfilled by the Status Issuer.\n\n\nAs the role of the Status Issuer is to make Status List Tokens available using one or more distribution points, this role should be removed. \n\nIn RFC 5280, the concept of a \"CRL Provider\" does not exist, but the concept of \"CRL Distribution Points\" exists. See section 4.2.1.13. This explains why the concept of a 'Status Provider' should be removed.\n\nAdd the following definition:\n\n> Status List Token Distribution Point: a URI that can be used to fetch a Status List Token\n\nAs the role of the Status Provider is no more necessary, the following sentence (which anyway was not understandable) should be removed:\n\n> Placing large amounts of Referenced Tokens into the same list also enables herd privacy relative to the Status Provider.\n\n\nThe current text from section 1 (Introduction) is:\n\n> An Issuer issues Referenced Tokens to a Holder, the Holder uses and presents those Referenced Tokens to a Relying Party.  The Issuer gives updated status information to the Status Issuer, who creates a Status List Token.  The Status Issuer provides the Status List Token to the Status Provider, who serves the Status List Token on a public, resolvable endpoint.  The roles of the Issuer (of the Referenced Token), the Status Issuer and the Status Provider may be fulfilled by the same entity.  If not further specified, the term Issuer may refer to an entity acting for all three roles.  \n\n> This document describes how an Issuer references a Status List Token and how a Relying Party fetches and validates Status Lists.\n\n> The following diagram depicts the relationship between the involved roles (Relying Party is equivalent to Verifier of [SD-JWT.VC]):\n\n ```\n             issue                 present\n              Referenced            Referenced\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Token      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Token      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Issuer \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Holder \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Relying Party \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u25bc update status                              \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                              \u2502\n   \u2502 Status Issuer \u2502                              \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                              \u2502\n     \u25bc provide Status List                        \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         fetch Status List  \u2502\n   \u2502 Status Provider \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n> Status Lists may be composed for expressing a range of Status Types. This document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types.\n\nText change proposal:\n\n> An Issuer of Referenced Tokens which is called an Issuer, issues Referenced Tokens to Holders. An Holder then uses and presents those Referenced Tokens to a Relying Party. \n> \n> Status issuers issue Status List Tokens.  The Status issuer is either the Issuer or an entity that has been authorized by the Issuer to issue Status List Tokens.\n> \n> The Status issuer issues Status List Tokens using one or more distribution points that must be available on a public network but can also be available on a private network.\n> \n> The Status issuer creates Status List Tokens initially indicating that all the Referenced Tokens then can be referenced in it are valid. In case a status change is required, the Issuer provides status information to the Status Issuer so that it can modify the content of one of the Status Lists that has been created. The modification will be taken into account at the next issuance of the Status List Token where the Referenced Token is referenced.\n> \n> This document describes how a Status List Token is created, how an Issuer references a Status List Token and how a Relying Party fetches and validates Status List Tokens.\n> \n> The following diagram depicts the relationship between the involved roles (Relying Party is equivalent to Verifier of [SD-JWT.VC]) when the Status List Tokens are fetched by the Relying Party:\n> \n> \n\n```\n\n\n              issues                  presents\n              Referenced              Referenced\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Token      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   Token           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Issuer \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Holder \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Relying Party \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2518\n     \u25bc updates status                                          \u2502  \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                           \u2502  \u2502\n   \u2502 Status Issuer \u2502                                           \u2502  \u2502\n   \u2514\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                           \u2502  \u2502\n     \u2502  \u2502 issues Status List Tokens using Distribution point   \u2502  \u2502\n     \u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                             \u2502  \u2502\n     \u2502  \u2514\u2500\u25ba\u2502  Status List Token  \u2502  fetches Status List Token  \u2502  \u2502\n     \u2502     \u2502  Distribution Point \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n     \u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                \u2502\n     \u2502       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                              \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u25ba \u2502  Status List Token  \u2502  fetches Status List Token   \u2502\n             \u2502  Distribution Point \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nDiagram 2: This diagram depicts the case where the Status List Token is fetched by the Relying Party. \n\n```\n> Before presenting the Referenced Token to the Relying Party, the Holder may choose to fetch the Status List Token and to present together to the Relying Party both the Referenced Token and the corresponding Status list Token. This can avoid the Relying Party to fetch the corresponding Status List Token.\n\n\n\n```\n                                             presents \n                                             Referenced Token and\n               issues                        Status List Token\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  Referenced Token   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Issuer \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Holder \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Relying Party \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518                     \u2514\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2518          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u25bc updates status                \u2502  \u2502  \n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                 \u2502  \u2502  \n   \u2502 Status Issuer \u2502                 \u2502  \u2502  \n   \u2514\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                 \u2502  \u2502  \n     \u2502  \u2502 issues Status List Tokens  \u2502  \u2502  \n     \u2502  \u2502 using Distribution points  \u2502  \u2502  \n     \u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502  \u2502  \n     \u2502  \u2514\u2500\u25ba\u2502  Status List Token  \u2502   \u2502  \u2502  \n     \u2502     \u2502  Distribution point \u2502\u25c4\u2500\u2500\u2518  \u2502  fetches Status List Token\n     \u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2502  \n     \u2502       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502  \n     \u2514\u2500\u2500\u2500\u2500\u2500\u25ba \u2502  Status List Token  \u2502    \u2502  \n             \u2502  Distribution point \u2502\u25c4\u2500\u2500\u2500\u2518  fetches Status List Token\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nDiagram 3: This diagram depicts the case where the Status List Token is fetched by the Holder. \n \n```\n> Status Lists may be composed for expressing a range of Status Types. This document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types.\n\n\nText in section 8.1 should be changed to support the use case of the Diagram 3 where the Status List Token is fetched by the Holder\n\nIn section 8.1, the text states:\n\n> 8.1.  Status List Request\n> \n> To obtain the Status List Token, the Relying Party MUST send an HTTP GET request to the URI provided in the Referenced Token.\n> \n\nSince Status List Tokens can also be fetched by the Holder, this sentence should be modified.\n\nChange into:\n\n> The URI provided in the Referenced Token can be used either by the Relying Party or by the Holder to fetch the Status List Token that contains the status of the Referenced Token. To obtain this Status List Token, either the Relying Party or the Holder MUST send an HTTP GET request to the URI provided in the Referenced Token.\n\nThe following sentences should be modified to accommodate the two cases:\n\n \n\n>   The Relying Party SHOULD send the following Accept-Header to indicate\n>    the requested response type:\n> \n>    *  \"application/statuslist+jwt\" for Status List Token in JWT format\n> \n>    *  \"application/statuslist+cwt\" for Status List Token in CWT format\n> \n>    If the Relying Party does not send an Accept Header, the response\n>    type is assumed to be known implicit or out-of-band.\n\nChange into:\n\n> Either the Relying Party or the Holder SHOULD send the following Accept-Header to indicate the requested response type:\n> \n>    *  \"application/statuslist+jwt\" for Status List Token in JWT format\n> \n>    *  \"application/statuslist+cwt\" for Status List Token in CWT format\n> \n> If the Relying Party or the Holder does not send an Accept Header, the response type is assumed to be known implicit or out-of-band.\n\n\n\n\n\n\n",
          "createdAt": "2025-01-20T10:07:41Z",
          "updatedAt": "2025-01-20T10:07:41Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\n- not answering to this comment as its a duplicate of #228 ",
          "createdAt": "2025-01-27T07:32:39Z",
          "updatedAt": "2025-01-27T07:32:39Z"
        }
      ]
    },
    {
      "number": 225,
      "id": "I_kwDOJZ2aqs6mHap_",
      "title": "The status list mechanism as currently described does not allow for interoperability",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/225",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "Let us make a parallel. When using CRLs if the serial number of a PKC is not in the list, the relying party knows that this PKC is neither revoked , nor suspended and hence that it is valid.\r\n\r\nWhen using this status list mechanism, the relying party can locate the appropriate bits (1, 2 or more) that describe the status of the Referenced Token, but the text does not say how to interpret them. Even when a single bit is used, the text does not say that 0 means valid and 1 means invalid.\r\n\r\nFirst, the draft should say that when all the appropriate bits are set to 0, it means that the Referenced Token is valid (no matter the number of bits that are used).\r\n\r\nAt the moment, section 10.1 (Status List with 2-Bit Status Values in JSON format) is only an example.\r\n\r\nIn order to be able to interoperate, the meaning of the bits in the cases of one bit and of 2 bits should be described in the document.\r\n\r\nThen, let us take a look at the other cases, i.e., 4 or 8 bits. When processing a Token Status List, currently the Relying Party has no way to interpret them.\r\n\r\nThere are various options to address this problem, e.g.,:\r\n\r\n1.  to say that the meaning for the 4 or 8 bits cases is out of the scope of this document.\r\n2.  to add another claim into the Token Status List that points to a URL managed by the Status Issuer that indicates the meaning of the 4 or 8 bits. This would not be fully automatic as a human being would be necessary to manually adapt the behavior of the implementation for each Status Issuer.\r\n3. to remove the 4 or 8 bits cases from the document.\r\n",
      "createdAt": "2025-01-14T12:02:18Z",
      "updatedAt": "2025-01-27T08:16:00Z",
      "closedAt": "2025-01-27T08:15:59Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "There is section 7.1, which clearly defines the values (https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#section-7.1) - not entirely sure how you think that part is not interoperable?\r\n\r\nThere is also a registry for status values that will be established by this document that additionally provides some reserved application specific values and would allow other work to also register values (https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-oauth-status-types-registry). ",
          "createdAt": "2025-01-14T12:14:55Z",
          "updatedAt": "2025-01-14T12:14:55Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Regarding higher bit sizes: \r\nWe chose sizes that would fit within one byte to make implementations easier / more robust because bit operations happen only within a single byte - that is why we chose 1,2,4,8.\r\n\r\nAn implementation that supports status lists of bit sizes 1 and 2 will also parse 4 and 8 bit sizes without any additional implementation effort - I don't see why we would should restrict sizes here that might be useful to some use-cases at basically no additional implementation effort?",
          "createdAt": "2025-01-14T12:37:54Z",
          "updatedAt": "2025-01-14T12:37:54Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "Thank you for pointing to sections 7.1 and 14.5.2 (Initial Registry Contents)\r\n\r\nLet us pick one example. The text states:\r\n\r\n> 0x03 - \"APPLICATION_SPECIFIC_3\" - The status of the Referenced Token is implicitly given by the particular use case and the meaning of this value is known out-of-band.\r\n\r\nThis text would need to be rewritten because.\r\n\r\n- The status cannot be \"implicitly given by the particular use case\", as the software interpreting the status is not aware of the \"particular use case\".\r\n- Furthermore, stating that the meaning of this value is known out-of-band does not provide sufficient guidance for that piece of software. It depends about the Issuer of the Token Status List (which, at the moment, implicitly seems to be the Issuer of the Referenced Token).\r\n\r\n\r\nSection 8.3 and section 14.5.2 (Initial Registry Contents) would need to be reworded.\r\n\r\nI propose the following change:\r\n\r\n> 0x03 - \"**ISSUER_SPECIFIC_3**\" - The status of the Referenced Token is dependant upon the Issuer of the Referenced Token. \r\nA different meaning can apply for each Issuer of Referenced Tokens. That meaning may be known using out-of-band means that are not described in this document.\r\n",
          "createdAt": "2025-01-15T10:39:13Z",
          "updatedAt": "2025-01-15T10:39:13Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A whole ecosystem may define what such a value may, so it's not necessarily the choice of an Issuer. We could rename it to \"CONTEXT_SPECIFIC\" if that's more clear?",
          "createdAt": "2025-01-22T12:50:53Z",
          "updatedAt": "2025-01-22T12:50:53Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "I don't believe that \"CONTEXT_SPECIFIC\" would be appropriate. \n\nEach Issuer can define its own meaning independently from other Issuers.\n\nOf course, different Issuers may choose to use the same meaning, \nbut this will not be directly visible to the Relying Parties.",
          "createdAt": "2025-01-22T12:59:27Z",
          "updatedAt": "2025-01-22T12:59:27Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "The phrase \"application specific\" is well understood in industry as to its implied meaning, which is how it is being used here. One such relevant reference that comes to mind is RFC 7519 - JSON Web Tokens which uses this phrase extensively.",
          "createdAt": "2025-01-23T07:42:10Z",
          "updatedAt": "2025-01-23T07:42:10Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors call:\n- pending close, we don't believe that \"APPLICATION_SPECIFIC\" can be miss-interpreted",
          "createdAt": "2025-01-23T07:46:00Z",
          "updatedAt": "2025-01-23T07:46:00Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "When an Issuer A is using bit 4 in a Status List that contains 8 bits per Referenced Token to mean something about the status of the Referenced Tokens, that meaning can have nothing to do with the meaning that an Issuer B (also using bit 4 in a Status that also contains 8 bits per Referenced Token) will give that bit.\n\nThe only way to know what bit 4 means the same thing is to take a look at the practice statements (or the policy) of the Issuer A and then to take another look at the practice statements (or the policy) of the Issuer B and it might happen that the meaning will be the same, but there is no guarantee that the meaning will be the same. A human brain will be needed to come that a conclusion. Each Issuer is free to choose its own interpretation for every ISSUER_SPECIFIC bit, when its meaning is not explicitly defined in this document.\n\nAn application-specific method is the point of view of the Relying Party that uses a local rule to process a field. \nThis meaning is used extensively in RFC 7519 - JSON Web Tokens.\n\nAn Issuer-specific method is the point of view of the Issuer. The treatment by the Relying Party will be dependant upon the semantics of each status bit, as defined by each Issuer. \n\nUsing \"APPLICATION_SPECIFIC\" would lead to miss-interpretations. Using \" ISSUER_SPECIFIC\" cannot be miss-interpreted.\n",
          "createdAt": "2025-01-23T08:44:50Z",
          "updatedAt": "2025-01-23T08:44:50Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "We've raised #244 which slightly modifies the language further clarifying what we mean. The editors do not agree that the usage of the phrase application specific is likely to be mis-interpreted and therefore won't change this to be \"issuer specific\".",
          "createdAt": "2025-01-27T07:52:22Z",
          "updatedAt": "2025-01-27T07:52:22Z"
        }
      ]
    },
    {
      "number": 227,
      "id": "I_kwDOJZ2aqs6mQ9NE",
      "title": "Which keys should be used to sign and verify Status List Tokens ?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/227",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "In section 5 (Status List Token) the text states:\r\n\r\n> A Status List Token embeds the Status List into a token that is cryptographically signed and protects the integrity of the Status List.\r\n\r\nThis sentence does not state which key should be used to sign or to verity the Status List Token.\r\n\r\nUsing JOSE, the \"iss\" (issuer) claim identifies the principal that issued the JWT. The iss\" claim is not present in the list of claims from section 5.1 (Status List Token in JWT Format).\r\n\r\nSection 8.3 which is about \"Validation Rules\" states:\r\n\r\n>    3.  Validate the Status List Token:\r\n> \r\n>        1.  Validate the Status List Token by following the rules defined\r\n>            in section 7.2 of [RFC7519] for JWTs\r\n\r\n\r\nHowever, in section 7.2 from RFC 7519, the single \"occurrence of \"iss\" is in the following sentence:\r\n\r\n> Some applications may include case-insensitive information in a case-sensitive value, such as including a DNS name as part of the \"iss\" (issuer) claim value.\r\n\r\nThe text does not say that the content of \"iss\" claim shall be used and does not specific against which value it shall match.\r\n\r\nLet us make a parallel with OCSP, section 4.2.2.2 from RFC 6960 which states:\r\n\r\n> 4.2.2.2.  Authorized Responders\r\n> The key that signs a certificate's status information need not be the same key that signed the certificate.  It is necessary, however, to ensure that the entity signing this information is authorized to do so.  Therefore, a certificate's issuer MUST do one of the following:\r\n>    - sign the OCSP responses itself, or\r\n>    - explicitly designate this authority to another entity\r\n\r\nThere is no similar text in the draft. It is thus assumed that the signer of the Status List Tokens are the Issuers and not the List Issuers. \r\n\r\nFrom a security point of view, using two different entities is better because the key used by the Issuer to issue Referenced Tokens does not need to be communicated or exposed to the Status Issuer. If the Status Issuer sends to the Issuer hash values to be signed by the Issuer, the risk would be that the hash value to be signed does not correspond to a Status List Token but to Referenced Token.\r\n\r\nRFC 2560 has been replaced by RFC 6960 precisely to solve the issue of using the same key for two different purposes.\r\n\r\nIf the keys are different, this indeed complexiflies the PKI, but this path has already be opened when drafting OCSP in particular by defining id-kp-OCSPSigning in an extended key usage certificate extension.\r\n\r\nIf the List Issuer would use its own key to sign, then it makes sense to consider it as an entity which is different from the Issuer, otherwise it doesn't.\r\n\r\nThere would be other consequences to consider like [4.2.2.2.1](https://datatracker.ietf.org/doc/html/rfc6960#section-4.2.2.2.1).  Revocation Checking of an Authorized Responder.\r\nWhat about an extended key usage certificate extension that would be called id-kp-TSLSigning ?",
      "createdAt": "2025-01-15T10:49:51Z",
      "updatedAt": "2025-02-02T13:47:54Z",
      "closedAt": "2025-02-02T13:47:54Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "The rationale currently states that \"the specification shall not specify key resolution or trust frameworks\".\r\n\r\nThere are many different mechanisms that the different ecosystems use to verify tokens. We expect this to be defined in the environment that uses the status list (and likely re-use existing mechanisms). Some options we have seen are:\r\n\r\n- `x5c` claim embedded in the token\r\n- `iss` claim is a url and keys are served via .well-known\r\n- trust lists\r\n- same key as referenced token\r\n\r\nWe could be more explicit in that regard in the implementation considerations?",
          "createdAt": "2025-01-16T08:04:08Z",
          "updatedAt": "2025-01-16T08:04:08Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "You wrote:\r\n\r\n> The rationale currently states that \"the specification shall not specify key resolution or trust frameworks\".\r\n\r\nIt is as if you were writing:\r\n\r\n> \"the specification does not specify how two implemenations can interoperate.\"\r\n\r\n:-)\r\n\r\n As currently described, the Status List Token cannot be verified.\r\n\r\nTo draw a parallel with OCSP, in RFC 6960, the roles of the CA and of the OCSP Responder are crystal clear. \r\nIn this draft, the respective roles of the Issuer and of the Status Issuer are unclear.\r\n\r\nWhen the List Issuer is different from the Issuer, what kind of information should be exchanged between these two entities ?\r\n\r\nYou wrote:\r\n\r\n> We could be more explicit in that regard in the implementation considerations?\r\n\r\n- Clarify the respective roles of the Issuer and of the Status Issuer when they are different entities.\r\n- Permit the use of different private keys to sign Referenced Tokens and Status List Tokens.\r\n- Explain how the Relying Party can find out which public key it shall use to verify a Status List Token.\r\n  The following cases should be considered:\r\n\r\n         1.  same key as Referenced Token\r\n         2.  iss claim in the Status List Token\r\n         3.  x5c claim embedded in the Status List Token\r\n\r\n\r\n\r\n",
          "createdAt": "2025-01-16T09:22:51Z",
          "updatedAt": "2025-01-16T09:22:51Z"
        }
      ]
    },
    {
      "number": 228,
      "id": "I_kwDOJZ2aqs6mRAA8",
      "title": "Resilience of the architecture when facing network problems ?",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/228",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "The text states:\r\n\r\n> The Status Issuer provides the Status List Token to the Status Provider, who serves the Status List Token on a public, resolvable endpoint.\r\n> \r\n> Status Provider:  An entity that provides the Status List Token on a public endpoint.  This role may be fulfilled by the Status Issuer.\r\n> What happens if this resolvable endpoint is temporarily not reachable (e.g., because it is overloaded) ? \r\n\r\nThe OPTIONAL aggregation_uri does not solve the concern as it is present in the Status List Token and not in the Referenced Token\r\n\r\nSection 3.1 (Certificate Content) from RFC 6960 states:\r\n\r\n>    In order to convey to OCSP clients a well-known point of information\r\n>    access, CAs SHALL provide the capability to include the authority\r\n>    information access extension (defined in [RFC5280], Section 4.2.2.1)\r\n>    in certificates that can be checked using OCSP.  Alternatively, the\r\n>    accessLocation for the OCSP provider may be configured locally at the\r\n>    OCSP client.\r\n> \r\n>    CAs that support an OCSP service, either hosted locally or provided\r\n>    by an Authorized Responder, MUST provide for the inclusion of a value\r\n>    for a Uniform Resource Identifier (URI) [RFC3986] accessLocation and\r\n>    the OID value id-ad-ocsp for the accessMethod in the\r\n>    AccessDescription SEQUENCE.\r\n\r\nSection 4.2.2.1 (Authority Information Access) from RFC 5280 states:\r\n\r\n>    The authority information access extension indicates how to access\r\n>    information and services for the issuer of the certificate in which\r\n>    the extension appears.  Information and services may include on-line\r\n>    validation services and CA policy data.  (The location of CRLs is not\r\n>    specified in this extension; that information is provided by the\r\n>    cRLDistributionPoints extension.)  This extension may be included in\r\n>    end entity or CA certificates.  Conforming CAs MUST mark this\r\n>    extension as non-critical.\r\n> \r\n>    id-pe-authorityInfoAccess OBJECT IDENTIFIER ::= { id-pe 1 }\r\n> \r\n>    AuthorityInfoAccessSyntax  ::=\r\n>            SEQUENCE SIZE (1..MAX) OF AccessDescription\r\n\r\nThis means that more than one accessLocation can be included into a Public Key  Certificate.\r\n\r\nConsidering the inclusion of multiple Status List Token distribution points (TSL_DP) into Referenced Tokens would improve the resilience of this architecture.\r\n",
      "createdAt": "2025-01-15T10:54:04Z",
      "updatedAt": "2025-01-27T08:10:18Z",
      "closedAt": "2025-01-27T08:10:16Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call: \r\n- we don't agree that this is a good idea, today there are many infrastructure mechanisms behind DNS and co in the internet that enable resilience, multiple URIs are not the best/only approach from 2024 view\r\n- this otherwise also creates the issue what the RP should do if it gets different data from multiple URIs\r\n- pending close",
          "createdAt": "2025-01-16T07:53:15Z",
          "updatedAt": "2025-01-16T07:53:15Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "You wrote:\r\n\r\n> today there are many infrastructure mechanisms behind DNS and co in the internet\r\n\r\nThe Internet should not be considered to be the single source of information. \r\n\r\nMultiple sources of information can be useful when the List Status Tokens is provided both on the Internet and on a private network (e.g. a network managed by an administration or for a closed group of organizations) that can provide better availability and throughputs performances. \r\n\r\nYou wrote:\r\n\r\n> multiple URIs are not the best/only approach from 2024\r\n\r\nIt is not claimed that \"multiple URIs are the best/only approach\". \r\nIt is one approach which would be more useful than the complicated OPTIONAL \"aggregation_uri\" approach.\r\n\r\nYou wrote:\r\n\r\n> this otherwise also creates the issue what the RP should do if it gets different data from multiple URIs\r\n\r\nA Status Provider cannot create or forge a  List Status Token. The case where the RP might \"get different data from multiple URIs\" can easily be solved as soon as the RP performs the usual checks on the List Status Tokens. \r\n\r\nHaving the ability to use several Status List Token Distribution Points (SLT_DP) would be useful. \r\nIf is not because this possibility would exist that it shall be used.  \r\n\r\n\r\n\r\n",
          "createdAt": "2025-01-16T09:24:33Z",
          "updatedAt": "2025-01-16T09:24:33Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "DNS allows to point to different infrastructure/deployments and we should leverage those existing capabilities without introducing complexity at other layers. It is not about a single source of information, but the question where you fan out - we believe that for the time being, relying on DNS for that and keeping things simple in the other parts is a valid choice. \n\nThe claim \"aggregation_uri\" is meant as a way to allow efficient caching for RPs, not for alternative URIs - it points to all relevant status lists for an issuer or specific referenced token type.",
          "createdAt": "2025-01-27T08:10:16Z",
          "updatedAt": "2025-01-27T08:10:16Z"
        }
      ]
    },
    {
      "number": 229,
      "id": "I_kwDOJZ2aqs6mRJor",
      "title": "Add a section to provide estimations about the size and the number of Token Status Lists",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/229",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "This point was raised during the last video conference call.\r\n\r\nIn the case of CRLs, it can be estimated that about less than 5 % of the serial numbers of the end-entity PKCs would be present in a CRL. \r\nHowever, when using Token Status Lists, for each Referenced Token, a few bits (1, 2, 4 or 8) will always be present in a Token Status List.\r\n\r\nIn the Implementation considerations section, a section should be added to provide estimations about the size and the number of Token Status Lists that will need to be managed.\r\n\r\nThe text states:\r\n\r\n   *  the Status List shall scale up to millions of *tokens* to support large scale government or enterprise use cases\r\n\r\nHowever, when using one-time-use Referenced Tokens, the number of tokens is likely to be at least one order of magnitude higher than the number of users. It would thus be more appropriate to write:\r\n\r\n   *  the Status List shall scale up to millions of *users* to support large scale government or enterprise use cases\r\n\r\nUsing an example with a one million of users (not tokens) would be interesting.\r\n\r\nLet us assume that a set of Token Status Lists is issued everyday. \r\n\r\nIf one-time-use Referenced Tokens are used, the number of Referenced Tokens valid at an instant of time can be much larger than when each Referenced Token can be used multiple times during, e.g., one year.\r\n\r\nLet us assume that one-time-use Referenced Tokens with a validity period of one week are used. \r\n\r\nLet us assume that during two days each user consumes 20 Referenced Tokens that cannot be immediately renewed (e.g., because he uses them in a proximity mode and he has no Internet connection). 20 millions of Referenced Tokens should be issued the first day. These 20 Referenced Tokens issued for one user should be placed in (at least) 20 different Token Status Lists. \r\n\r\nIf two bits are used for each status information, this makes 2 millions bits, i.e. 250 Mb for each Token Status List with 20 different distribution points.\r\n\r\nFor 10 millions of users, these numbers do not scale linearly. For each Token Status List, the size of 250 Mb for each Token Status List should not increase, which means that 200 Token Status Lists should be issued everyday.\r\n\r\nAs of 1 January 2024, the population of the EU was around 449 million people. Source: https://en.wikipedia.org/wiki/Demographics_of_the_European_Union\r\n\r\nLet us assume that 30 % of this population will get and use EUDIWs.\r\nThis will make roughly 130 millions of users. 2600 Token Status Lists would need to be issued everyday.\r\n\r\nIt is up to the Issuer to know how many Status List Tokens (that will contain initially all zeros) need to be managed and, for every issued Reference Token, to choose (and remember) which index it will use and in which Status List Token. The Issuer also needs to consider the validity periods of each Referenced Token and of the Status List Tokens.  \r\n\r\nThe management of  Status List Tokens is far more complex than simply locating an index in a Status List Token.\r\nThis complexity and the various trade-offs are not explained at the moment. \r\n\r\nThe goal of this contribution is not to copy and paste the above text into the document but only to make the ball rolling. \r\nIn any case, some information will be useful.\r\n",
      "createdAt": "2025-01-15T11:12:03Z",
      "updatedAt": "2025-01-23T07:06:50Z",
      "closedAt": "2025-01-23T07:06:50Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> This point was raised during the last video conference call.\n> \n> In the case of CRLs, it can be estimated that about less than 5 % of the serial numbers of the end-entity PKCs would be present in a CRL. However, when using Token Status Lists, for each Referenced Token, a few bits (1, 2, 4 or 8) will always be present in a Token Status List.\n> \n> In the Implementation considerations section, a section should be added to provide estimations about the size and the number of Token Status Lists that will need to be managed.\n\nWe have already made estimations, shared in our presentations, e.g. [here](https://docs.google.com/presentation/d/1m59OC8uKM4nZ14aH2TM9r2mxEhOiP-G5uqzAZ7oOAUk/edit#slide=id.g2318b641e56_0_23). I think it's not common to put this into the specification itself.\n\n> \n> The text states:\n> \n>     * the Status List shall scale up to millions of _tokens_ to support large scale government or enterprise use cases\n> \n> \n> However, when using one-time-use Referenced Tokens, the number of tokens is likely to be at least one order of magnitude higher than the number of users. It would thus be more appropriate to write:\n> \n>     * the Status List shall scale up to millions of _users_ to support large scale government or enterprise use cases\n> \n\nAgain, you are making assumptions about the usage of Status List, that do not globally apply, use cases that refer to organisations or things don't have these requirements. Status List is not only relevant to users, that's why we talk about tokens. IETF specs shall be generic, so I don't see good reasons to adapt your suggestion.\n\n> \n> Using an example with a one million of users (not tokens) would be interesting.\n> \n> Let us assume that a set of Token Status Lists is issued everyday.\n> \n> If one-time-use Referenced Tokens are used, the number of Referenced Tokens valid at an instant of time can be much larger than when each Referenced Token can be used multiple times during, e.g., one year.\n> \n> Let us assume that one-time-use Referenced Tokens with a validity period of one week are used.\n> \n> Let us assume that during two days each user consumes 20 Referenced Tokens that cannot be immediately renewed (e.g., because he uses them in a proximity mode and he has no Internet connection). 20 millions of Referenced Tokens should be issued the first day. These 20 Referenced Tokens issued for one user should be placed in (at least) 20 different Token Status Lists.\n> \n> If two bits are used for each status information, this makes 2 millions bits, i.e. 250 Mb for each Token Status List with 20 different distribution points.\n\nYou have forgotten about the compression. A status list for 1 million tokens, bits=1 (which 90% of use cases will use) and a typical revocation rate of 1%, results in 25KB, so your estimations are off by factor 10.000x\n\n> \n> For 10 millions of users, these numbers do not scale linearly. For each Token Status List, the size of 250 Mb for each Token Status List should not increase, which means that 200 Token Status Lists should be issued everyday.\n> \n> As of 1 January 2024, the population of the EU was around 449 million people. Source: https://en.wikipedia.org/wiki/Demographics_of_the_European_Union\n> \n> Let us assume that 30 % of this population will get and use EUDIWs. This will make roughly 130 millions of users. 2600 Token Status Lists would need to be issued everyday.\n> \n> It is up to the Issuer to know how many Status List Tokens (that will contain initially all zeros) need to be managed and, for every issued Reference Token, to choose (and remember) which index it will use and in which Status List Token. The Issuer also needs to consider the validity periods of each Referenced Token and of the Status List Tokens.\n> \n> The management of Status List Tokens is far more complex than simply locating an index in a Status List Token. This complexity and the various trade-offs are not explained at the moment.\n> \n> The goal of this contribution is not to copy and paste the above text into the document but only to make the ball rolling. In any case, some information will be useful.\n\nThe management of revocation isn't easy, even today. We hope to make it more scalable and easier to manage (with things like aggregation_uri). I don't see actionable things in this issue.\n\n",
          "createdAt": "2025-01-16T17:41:48Z",
          "updatedAt": "2025-01-16T17:41:48Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "Thank you for your reply which is bringing water to my mill.\r\n\r\nYou wrote:\r\n\r\n> A status list for 1 million tokens, bits=1 (which 90% of use cases will use) and a typical revocation rate of 1%, results in 25KB.\r\n\r\nSuch information would be useful if included into the draft.\r\n\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2025-01-20T09:36:31Z",
          "updatedAt": "2025-01-20T09:36:31Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Thank you for your reply which is bringing water to my mill.\n> \n> You wrote:\n> \n> > A status list for 1 million tokens, bits=1 (which 90% of use cases will use) and a typical revocation rate of 1%, results in 25KB.\n> \n> Such information would be useful if included into the draft.\n\nDo you have other RFCs as example, that do this?\nI don't think that RFC for CRL includes this data. ",
          "createdAt": "2025-01-22T13:00:07Z",
          "updatedAt": "2025-01-22T13:00:24Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "For CRLs, the computation depends upon the estimated pourcentage of revoked or suspended PKCs.\n\nThis is not the same for SLTs.\n\nI am unfamiliar with [RFC1951] and [RFC1950]. \n\nIt would be useful to provide some numbers so that implementers can know the size of the SLTs \nwhen downloaded and once expanded.\n\nIf a Relying Party caches \"n\" SLTs (e.g. 20), which amount of memory will be occupied ?\n\n\n\n\n",
          "createdAt": "2025-01-22T13:14:33Z",
          "updatedAt": "2025-01-22T13:14:33Z"
        }
      ]
    },
    {
      "number": 233,
      "id": "I_kwDOJZ2aqs6m0nOA",
      "title": "Cryptographic signature algorithms",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/233",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "c2bo"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "In section 1.3, the text sates:\n\n> 1.3.  Design Considerations\n> \n>    The decisions taken in this specification aim to achieve the following design goals:\n> \n>    *  the specification shall not specify key resolution or trust frameworks\n\nIf this sentence remains, interoperability cannot be supported. This bullet should be removed.\n\n\nIn section 5.1. the text states:\n\n> The following additional rules apply:\n> \n> 2.  The JWT MUST be secured using a cryptographic signature or MAC algorithm.  Relying Parties MUST reject JWTs with an invalid signature.\n \nAs MAC algorithms are using secret keys, it is not believed that MAC algorithms are suitable. Remove \"or MAC algorithm\".\n\nReplace with:\n\n> The following additional rules apply:\n> \n> 2.  The JWT MUST be secured using a cryptographic signature algorithm.  Relying Parties MUST determine which public key shall be used to verify the signature of the JWT.  Relying Parties MUST verify that this public key is valid (e.g., its PKC is not revoked, nor suspended). Relying Parties MUST reject JWTs with an invalid signature.\n\nIn section 5.2, the text states:\n\n> The following additional rules apply:\n> \n> 2.  The CWT MUST be secured using a cryptographic signature or MAC algorithm.  Relying Parties MUST reject CWTs with an invalid signature\n\nThe same kind of change already proposed for section 5.1 is proposed for section 5.2 :\n\n> The following additional rules apply:\n> \n> 2.  The CWT MUST be secured using a cryptographic signature algorithm. Relying Parties MUST determine which public key shall be used to verify the signature of the CWT.  Relying Parties MUST verify that this public key is valid (e.g., its PKC is not revoked, nor suspended). Relying Parties MUST reject CWTs with an invalid signature.\n> ",
      "createdAt": "2025-01-20T10:11:32Z",
      "updatedAt": "2025-01-29T07:11:19Z",
      "closedAt": "2025-01-29T07:11:19Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> As MAC algorithms are using secret keys, it is not believed that MAC algorithms are suitable. Remove \"or MAC algorithm\".\n\nThat heavily depends on the system/deployment. There are a lot of deployments that use for example access tokens based on MAC. For those kind of systems, using a status list can be a valid alternative to token introspection and might be beneficial depending on system architecture.",
          "createdAt": "2025-01-20T12:03:20Z",
          "updatedAt": "2025-01-20T12:03:20Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "If a MAC is used, any Relying Party able to verify a Status List Token would be able to forge Status List Tokens. \n\nA Status List Token is designed to contain statuses for many Referenced Tokens so that it can be read and verified by several Relying Parties.  The use of a MAC is not possible.\n\n\n   ",
          "createdAt": "2025-01-20T14:11:53Z",
          "updatedAt": "2025-01-20T14:11:53Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "That depends on the use-case/deployment. If you have a deployment within one entity, but different systems (e.g., one AS and several restricted resources that might be deployed in different places), then leveraging something like a Status List might make sense to convey status of the Access Tokens.\nYou would currently do that via Token Introspection, but that means every system calling your one big AS for token introspection every time an Access Token is sued, creating a rather big bottleneck. For those kind of deployments, something like MAC would be absolutely fine imho (as all systems are part of the same entity and trusted).",
          "createdAt": "2025-01-20T15:41:09Z",
          "updatedAt": "2025-01-20T15:41:09Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "\nYou wrote:\n\n> (as all systems are part of the same entity and trusted)\n\n\nI cannot make the assumption that  all entities that are part of  a system will never be corrupted, nor successfully attacked.\n\nIf the secret key that is used by a single entity to verify Status List Tokens is compromised or extracted, \nthen the whole system would collapse.\n\nTrust is not sufficient. Security is necessary. \n\nA Status List Token is not a substitute for Token Introspection.\n\n",
          "createdAt": "2025-01-20T16:39:47Z",
          "updatedAt": "2025-01-20T16:39:47Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "The same argument would be true for any system using HMAC based Access Tokens, but those systems exist.\n\nThere was a rather long discussion during the last IETF meetings (I believe 120/121) about the different options that a status list could be provided as and we initially also included an unsigned option that after those WG discussions was removed. The consensus was to keep MAC, but remove unsigned.",
          "createdAt": "2025-01-21T08:49:18Z",
          "updatedAt": "2025-01-21T08:49:18Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "I am not familiar with HMAC based Access Tokens but I presume that the Access Token is targeted to a given Relying Party. In that case, if the secret key used to verify the Access Token is compromised,  it does not affect other Relying Parties. \n\nIf you really want to keep MAC algorithms, then warnings should be included into the Security Considerations section with a pointer to that text in sections 5.1 and 5.2.\n\n ",
          "createdAt": "2025-01-22T08:52:01Z",
          "updatedAt": "2025-01-22T08:52:01Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\n- there are use cases like access tokens explicitly requested by the working group as example use cases for status list, where it is very common to use HMAC\n- add a small security consideration",
          "createdAt": "2025-01-23T07:52:39Z",
          "updatedAt": "2025-01-23T07:52:39Z"
        }
      ]
    },
    {
      "number": 234,
      "id": "I_kwDOJZ2aqs6m0r6r",
      "title": "Validation Rules (section 8.3)",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/234",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In section 8.3 (Validation Rules), the text states:\n\n> 8.3.  Validation Rules\n> \n> The text states:\n> \n>    If the validation was successful, the Relying Party MUST\n>    perform the following validation steps to evaluate the status of the\n>    reference token:\n> \n>    (...)\n> \n>    3.  Validate the Status List Token:\n> \n>        1.  Validate the Status List Token by following the rules defined\n>            in section 7.2 of [RFC7519] for JWTs and section 7.2 of\n>            [RFC8392] for CWTs\n> \n\nSection 7.2 from RFC 7519 does not say which key SHALL be used to verify the signature of the Status List Token. Section 8.3 from this document is also silent. In order to be able to interoperate, additional information needs to be added into the document. \n\nThe simplest (and the less secure approach) is to use the same private key to sign Referenced Tokens and Status List Tokens. This corresponds to the case where the Status issuer is the Issuer.\n\nA more secure approach is to use of different private keys to sign Referenced Tokens and Status List Tokens. This corresponds to the case where the Status issuer is an entity that has been authorized by the Issuer to issue Status List Tokens. This approach should be RECOMMENDED.\n\nIn RFC 5280, a CRL issuer can be nominated by a CA by the issuance of a PKC that contains the cRLSign bit set in the key usage extension (Section 4.2.1.3 from RFC 5280). Since the role of a CRL issuer and of a Status issuer are different, the same bit cannot be used.\n\nIn the key usage extension of a PKC, it becomes necessary to define an additional bit that can apply to a Status issuer nominated by an Issuer and to register that additional bit at IANA.\n\nAt the moment, in RFC 5280, the following Object Identifier is defined:\n{joint-iso-itu-t(2) ds(5) certificateExtension(29) keyUsage(15)}\nOID dot notation: 2.5.29.15\n\n```\n      id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n      KeyUsage ::= BIT STRING {\n           digitalSignature        (0),\n           nonRepudiation          (1), -- recent editions of X.509 have\n                                -- renamed this bit to contentCommitment\n           keyEncipherment         (2),\n           dataEncipherment        (3),\n           keyAgreement            (4),\n           keyCertSign             (5),\n           cRLSign                 (6),\n           encipherOnly            (7),\n           decipherOnly            (8) }\n\n```\nThe next usable bit is (9).\n\nThe following line should be happened to this list:\n\n`           sLTSign                 (9)`\n\n\n{joint-iso-itu-t(2) ds(5) certificateExtension(29) keyUsage(15) sLTSign(9)}\n\nOID dot notation: 2.5.29.15.9\n\nWith the following explanation:\n\n> The sLTSign bit is asserted when the subject public key can be used for verifying signatures on Status List Tokens.\n\nA specific section dedicated to this extension should be added so that it can be referenced in the IANA registration template.\n\nAfter these explanations, we can now come back to a text change proposal for section 8.3 (Validation Rules).\n\nText change proposal for section 8.3.\n\n> 8.3.  Validation Rules\n> \n> The text states:\n> \n>    If the validation was successful, the Relying Party MUST\n>    perform the following validation steps to evaluate the status of the\n>    reference token:\n> \n>    (...)\n> \n>    3.  Identify the public key to be used to verify the signature \n>        of Status List Token\n> \n> If no iss claim, nor an x5c claim, is present in the Status List Token and unless a specific local rule applies, the Relying Party MUST verify the Status List Token using the same key that has been used to verify the Referenced Token. This approach is NOT RECOMMENDED.\n> \n> If the iss claim is present in the JOSE Header, the JWT Claims, or the COSE Header, a Relying Party can use this parameter to obtain a JSON Web Key to use in the verification process. It should be noticed that, according to RFC 7519, the processing of this claim is generally application specific. Unless the processing of this claim is made in a specific environment or context, this approach is not interoperable.\n> \n> If the \"x5c\" claim is present in the JWT Claims, a Relying Party SHOULD use this parameter to obtain a JSON Web Key to use in the verification process. The \"x5c\" claim is an array of strings that contains an x.509 certificate chain, in order from the root certificate authority to the signing certificate.\n> \n> The last certificate of the chain can be either the certificate of the Issuer or of the Status Issuer. In the later case, the key usage extension (defined in section 4.2.1.3 from RFC 5280) MUST be present and MUST contain an additional bit defined in section 9 of this document. \n> \n> Once it has been verified that the whole chain is valid and that no certificate of the chain has been revoked, the public key from the last certificate of the chain MUST be used to validate the Status List Token. This approach is RECOMMENDED.\n> \n> \n> 2.  Validate the Status List Token by following the rules defined in section 7.2 of [RFC7519] for JWTs and section 7.2 of [RFC8392] for CWTs\n> \n> 3.  Check for the existence of the required claims as defined in Section 5.1 and Section 5.2 depending on token type\n\nA text proposal for defining the sLTSign bit is provided in a subsequent issue.\n",
      "createdAt": "2025-01-20T10:19:16Z",
      "updatedAt": "2025-02-02T13:47:54Z",
      "closedAt": "2025-02-02T13:47:54Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Section 7.2 of RFC7519 refers to RFC7515 (JWS), which gives some possbilities to encode the public key, e.g. \"x5c\" or \"jwk\"",
          "createdAt": "2025-01-22T12:58:50Z",
          "updatedAt": "2025-01-22T12:58:50Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "This is not the point.\n\nRFC 5280 provides all the information that is necessary to allow interoperability \nwhen CRLs are being used and when the Issuer is different from the CRL issuer.\n\nI would like this document to include all the information that is necessary to allow interoperability \nwhen TSLs are being used and when the Issuer is different from the Status issuer. \n",
          "createdAt": "2025-01-22T13:20:25Z",
          "updatedAt": "2025-01-22T13:20:25Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is there any difference in this issue to #235 ?",
          "createdAt": "2025-01-29T07:47:40Z",
          "updatedAt": "2025-01-29T07:47:40Z"
        }
      ]
    },
    {
      "number": 235,
      "id": "I_kwDOJZ2aqs6m0yj-",
      "title": "New section to define the sLTSign bit of a key usage extension in a PKC",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/235",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "tplooker"
      ],
      "labels": [],
      "body": "It is proposed to add a new section 9.\n\n**Status List Token signature bit of a key usage extension in a PKC (sLTSign)**\n\nThe key usage extension of a PKC (Public Key Certificate) defines the purpose of the public key contained in the PKC  In RFC 5280, section 4.2.1.3, the text states that \"conforming CAs MUST include this extension in certificates that contain public keys that are used to validate digital signatures or other public key certificates or CRLs.  When present, conforming CAs SHOULD mark this extension as critical\". At the time RFC 5280 was written and published (2008), the concept of a Status Issuer did not existed.\n\nThis document states that conforming CAs MUST include this extension in certificates that contain public keys that are used to validate digital signatures or other public key certificates, CRLs or Status List Tokens.  When present, conforming CAs SHOULD mark this extension as critical.\n\nIn RFC 5280, the following Object Identifier has been defined:\n{joint-iso-itu-t(2) ds(5) certificateExtension(29) keyUsage(15)}. OID dot notation: 2.5.29.15\n\n ```\n     id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n      KeyUsage ::= BIT STRING {\n           digitalSignature        (0),\n           nonRepudiation          (1), -- recent editions of X.509 have\n                                -- renamed this bit to contentCommitment\n           keyEncipherment         (2),\n           dataEncipherment        (3),\n           keyAgreement            (4),\n           keyCertSign             (5),\n           cRLSign                 (6),\n           encipherOnly            (7),\n           decipherOnly            (8) }\n\n```\nIn order to allow an Issuer to designate a Status Issuer, an additional bit in the key usage extension is needed. The next usable bit is (9).\n\nThe following line is happened to this list:\n\n           sLTSign                 (9)\n\nwith the following meaning:\n\nThe sLTSign bit is asserted when the subject public key can be used for verifying signatures on Status List Tokens.\n\nThe id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 } then becomes:\n\n ```\n     id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n      KeyUsage ::= BIT STRING {\n           digitalSignature        (0),\n           nonRepudiation          (1), -- recent editions of X.509 have\n                                -- renamed this bit to contentCommitment\n           keyEncipherment         (2),\n           dataEncipherment        (3),\n           keyAgreement            (4),\n           keyCertSign             (5),\n           cRLSign                 (6),\n           encipherOnly            (7),\n           decipherOnly            (8),\n           sLTSign                 (9) }\n\n```\n\nUsing the text previously proposed, a section 14.8 (Key Usage extension for Status issuer certificates) should be added into section 14 (IANA Considerations).\n",
      "createdAt": "2025-01-20T10:29:16Z",
      "updatedAt": "2025-02-02T13:47:54Z",
      "closedAt": "2025-02-02T13:47:53Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\n- if we were to define something, we would define extended key usage identifiers and define an OID for that\n- continue to discuss",
          "createdAt": "2025-01-23T08:03:08Z",
          "updatedAt": "2025-01-23T08:03:08Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "I have opened #246 where we are proposing to define an a new OID for use with EKU X.509 certificate extension because the KU extension you propose is really only suppose to be used to define basic cryptographic operations that the subject public key should be used for.",
          "createdAt": "2025-01-29T07:55:03Z",
          "updatedAt": "2025-01-29T07:55:03Z"
        }
      ]
    },
    {
      "number": 236,
      "id": "I_kwDOJZ2aqs6m02mL",
      "title": "About Status List Token distribution points",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/236",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This is a continuation of the issues raised in section 1 (Introduction) about the Diagram 1 and the Diagram 2.\n\nSee: Interims Feedback: Explain motivation to split issuer / status list issuer / status list provider #224\n\nIn section 6.2, the text states:\n\n> 6.2.  Referenced Token in JOSE\n> \n> (...)\n> \n>    The following content applies to the JWT Claims Set:\n> \n>          (...)\n> \n>          o  uri: REQUIRED.  The uri (URI) claim MUST specify a String\n>             value that identifies the Status List Token containing the\n>             status information for the Referenced Token.  The value of\n>             uri MUST be a URI conforming to [RFC3986].\n\nChange the bullet into:\n\n>        o    uris: REQUIRED.  JSON array of strings that contains URIs \n>             that identify the Status List Tokens containing the status \n>             information for the Referenced Token.  The value of each uri \n>             MUST be a URI conforming to [RFC3986].\n> \n\nPerform the same type of change for section 6.3 (Referenced Token in COSE)\n\nWith such changes, I don't see the added value to define 'Status List Aggregation' in section 9. Hence, I propose to remove section 9.\n\n",
      "createdAt": "2025-01-20T10:35:28Z",
      "updatedAt": "2025-01-27T07:32:28Z",
      "closedAt": "2025-01-27T07:32:27Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The aggregation_uri is meant for RPs to fetch all relevant status lists for a type of referenced token, I.e. when the status issuer chunks into multiple status lists. I didn't see the need to have multiple uris for the same status list token.",
          "createdAt": "2025-01-20T23:17:18Z",
          "updatedAt": "2025-01-20T23:17:58Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as a duplicate of #228 ",
          "createdAt": "2025-01-27T07:32:27Z",
          "updatedAt": "2025-01-27T07:32:27Z"
        }
      ]
    },
    {
      "number": 237,
      "id": "I_kwDOJZ2aqs6m0_dO",
      "title": "Token Lifecycle",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/237",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The content of section 13.1 (Token Lifecycle) does not contain sufficient guidance.\n\nThe following guidance is rather vague:\n\n>    The lifetime of a Status List Token depends on the lifetime of its eferenced Tokens.\n\nSince the exp (expiration time) claim in a Status List Token is OPTIONAL, it is hard to understand how this sentence can be used.\n\nThe three paragraphs do not provide sufficient information\n\nProposed text replacement:\n\n> The Issuer and the Status issuer SHALL initially agree on the following set of parameters:\n> \n> -\tthe number of bits that indicates the status of each Referenced Token,\n> -\tthe number of entries in a Status List,\n> -\tthe number of Status Lists initially available,\n> -  one or more absolute uris where the Status List Tokens will be made available by the Status issuer,\n> -\ta relative uri associated with each Status List (that can also be used to reference a given Status List).\n> \n> The Issuer CAN communicate to the Status issuer the \"time to live\" which is the maximum amount of time, in seconds, that the Status List Token can be cached by a consumer before a fresh copy SHOULD be retrieved ('ttl' claim). If the \"time to live\" is communicated, then the Status issuer SHALL include it into each Status List Token.\n> \n> For every Status List, the Issuer SHALL communicate to the Status issuer the date when each Status List will cease to be updated by the Issuer. \n> For every Status List, the Issuer CAN communicate to the Status issuer the time at which the Status List Token will be considered expired. If the expiration time is communicated, then the Status issuer SHALL include the 'exp' claim into the Status List Token.\n> \n> At any time, the Status issuer and the Issuer may agree to use a new set of parameters. For every Status List already agreed, the agreed parameters remain applicable until the date when the Status List will cease to be updated by the Issuer is reached.\n> \n> The Status issuer SHOULD issue and distribute Status List Tokens before the first Referenced Token is issued by the Issuer.\n> \n> The status of Referenced Tokens with close expiration times should be grouped together into Status Lists so the corresponding Status List Tokens can be no longer issued and distributed once all the Referenced Tokens referenced in it have expired.\n> \n\nThe text continues with :\n\n>    Referenced Tokens may be regularly re-issued to mitigate linkability of presentations to Relying Parties.  In this case, every re-issued\n>    Referenced Token MUST have a fresh Status List entry in order to  prevent this becoming possible source of correlation.\n\nThe concept of Referenced Tokens that would be regularly re-issued means a same content with a different validity period.\n\nThe following sentence looks odd:\n\n>    Referenced Tokens may be regularly re-issued to mitigate linkability of presentations to Relying Parties.  \n\nSince the content of the referenced Token is nearly the same, linkability can easily be achieved and a re-issuance of Referenced Tokens will be unable \"to mitigate linkability of presentations to Relying Parties\". \n\nThese two sentences should be removed.\n\nThe text ends-up with :\n\n>    Referenced Tokens may also be issued in batches, such that Holders can use individual tokens for every transaction.  In this case, every\n>    Referenced Token MUST have a dedicated Status List entry.  Revoking batch issued Referenced Tokens might reveal this correlation later\n>    on.\n> \n\nThe right wording is not \"batch issuance of Referenced Tokens\" but \"one-time-use Referenced Tokens\"\nThe second sentence has nothing to do with a consequence of the previous sentence as it applies to every Referenced Token, whether or not it is a one-time-use Referenced Token.\n\nThese three sentences should be removed.\n\nProposed text replacement:\n\n> One-time-use Referenced Tokens may also be issued in batches, such that Holders can use a different Referenced Token for every transaction.  In this case, the status of every one-time-use Referenced Token SHOULD be handled in a different Status list so that a global revocation of these one-time-use Referenced Tokens cannot be used to reveal a correlation later on.\n\n",
      "createdAt": "2025-01-20T10:50:00Z",
      "updatedAt": "2025-02-02T13:47:53Z",
      "closedAt": "2025-02-02T13:47:53Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\n- agree to add implementation guidance what needs to be negotiated between Issuer and Status Issuer\n- don't agree with the other recommendations in this issue, i.e. no privacy gains",
          "createdAt": "2025-01-29T07:46:25Z",
          "updatedAt": "2025-01-29T07:46:25Z"
        }
      ]
    },
    {
      "number": 238,
      "id": "I_kwDOJZ2aqs6m1G6-",
      "title": "Various editorial change proposals",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/238",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In Section 1.3 (Design Considerations), the text states:\n\n>    *  the specification shall design an extension point to convey information about the status of a token that can be re-used by other mechanisms\n\nChange into:\n\n>    *  the specification defines a \"status\" claim in a Reference Token that can be used by other mechanisms to convey information about the status of a Reference Token.\n\nIn section 3 (Terminology) the text defines the term as Relying Party as:\n\n> Relying Party:  An entity that relies on the Status List Token to validate the status of the Referenced Token.  Also known as Verifier.\n\nChange into:\n\n> Relying Party:  An entity that relies on a \"status\" claim that is present in a Reference Token and can fetch a Status List Token or obtain it from the Holder to validate the status of that Referenced Token.  Also known as Verifier.\n\nIn section 3 (Terminology) the text defines the term Referenced Token as:\n\n> Referenced Token:  A cryptographically secured data structure which contains a reference to a Status List Token. (...)\n\nChange into:\n\n> Referenced Token:  A cryptographically secured data structure which contains a \"status\" claim that allows to discover how the status of a Referenced Token can be known.  In the context of this document, the \"status\" claim contains one or more references to Status List Tokens and an index specific to that Referenced Token. (...)\n",
      "createdAt": "2025-01-20T11:01:47Z",
      "updatedAt": "2025-01-27T07:07:16Z",
      "closedAt": "2025-01-27T07:07:16Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I used some of the suggestions in #241 , I think some are too detailed for the terminology section.",
          "createdAt": "2025-01-23T18:12:01Z",
          "updatedAt": "2025-01-23T18:12:01Z"
        }
      ]
    },
    {
      "number": 243,
      "id": "I_kwDOJZ2aqs6ndRSE",
      "title": "Extension Token Status List to x509",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/243",
      "state": "OPEN",
      "author": "steffenschwalm",
      "authorAssociation": "NONE",
      "assignees": [
        "tplooker"
      ],
      "labels": [],
      "body": "Currently Token Status List  not useable for revocation x509 credentials which is critical in context of eIDAS where \n\na) each QEAA has to be signed with xqualified signature or seal based on x509 certificates\nb) credentials in x509 legally possible and covered in ETSI TS 119 472-1 [Token Status List ]\n(https://docbox.etsi.org/esi/Open/Latest_Drafts/ETSI%20DRAFT%20TS_119_472-1v0.0.6-public.pdf)\n\nto avoid that trust service providers have to provide 2 different approaches for revocation, so 1 for credential 1 for its signature x509 shall be covered by Token Status List Spec. As mentioned by @paulbastian  in brief discussion it could be possible to define an X.509 extension in ASN.1, analogous to the CRL Distribution Endpoint:\n\nTokenStatusListDisitrubionEndpoint ::= SEQUENCE {\n        uri                    [0]     RelativeDistinguishedName,\n        index                   [1]     INTEGER }\n\nFurthermore, minimal adjustments to the Validation Logic section would be necessary.",
      "createdAt": "2025-01-24T13:30:59Z",
      "updatedAt": "2025-02-23T12:19:54Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @steffenschwalm \n\nThanks for the suggestion.\n\nConsidering X.509 infrastructure is pre-existing, two approaches to revocation is where one is based on CRL for the certificates while the other based on this draft for the reference tokens is un-avoidable.\n\nSecondly many implementers that are using X.509 certificates as the basis of trust for digital credentials issued under eIDAS are looking to use pre-existing X.509 libraries and PKI without modification and this proposal would require all this infrastructure / code libraries be updated for little benefit.\n\nThirdly the basis of this draft from the beginning was about catering to reference tokens in the JOSE and COSE formats and not other data structures such as X.509 certificates. The draft is already quite significant (in terms of length) and our preference as editors is that if implementation interest emerges for this that we could define an extension specification later that fulfils this need. For those reasons we're going to mark this issue pending close as its out of scope for our draft.",
          "createdAt": "2025-01-29T06:55:24Z",
          "updatedAt": "2025-01-29T06:55:24Z"
        },
        {
          "author": "steffenschwalm",
          "authorAssociation": "NONE",
          "body": "@tplooker thanks for your comment.\n\n1) it`s not unavoidable as shown, especially not if you use signatures for JWT\n2) that`s wrong as it would mean for QTSP to provide 2 different revocations for same subject:\n- QEAA require QES(QSeal acc. annex V eIDAS regulation\n- in case StatusToken List used for attestation itself your great approach would mean: 1 revocation for attestation, 1 for its signature and both have to be correlated, certified etc. acc. to ETSI TS 119 471, 472-1 etc. The only one who appreciate this are consultants and Conformity Assessment Bodies  but not the trust service providers who have to deal with it\n-\n3) This was birth defect from beginning especially after eIDAS 2.0 was published. Now is chance to change it\n\nRecommend that decision done by Working Group and not editors of which no one is QTSP who have to deal with your specification. Means if you close I`ll open again and request decision by WG",
          "createdAt": "2025-01-29T17:36:18Z",
          "updatedAt": "2025-01-29T17:36:46Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would not agree that the draft was always centered to cater only for JOSE and COSE-based Referenced Tokens, but that it should be open to all formats of Referenced Tokens. Instead, the limitation was that the Status List Token format was about JWT and CWT to limit the complexity at this level. \n\nI agree that there are potential advantages:\n- if X509 is your trust layer signing SD-JWT/mdoc, then you may have only one revocation mechanism (although I think this advantage is very limited for the reasons given by Tobias)\n- if X509 is an EAA format, then you may benefit from the better scaling of Status List against CRL (I think this scenario is more of an actual advantage, however I don't know how realisitic it is, as the ARF doesn't mention it yet)\n\nHowever, we may overstep the responsibilities of the OAuth WG, as X509 is not its core topic and we would probably leverage expertise from LAMPS.\n\nWe will write to the OAuth Mailinglist to proceed on this topic.",
          "createdAt": "2025-01-31T14:45:02Z",
          "updatedAt": "2025-01-31T14:45:02Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "@paulbastian. I don't believe that there will ever be a X.509 format for EAAs.\nHowever, using SLTs instead of CRLs or OCSP for end-entity PKCs can make sense.\n\nYou wrote: \n\n> We will write to the OAuth Mailing list to proceed on this topic.\n\nA copy to the chairs of the LAMPS WG (Russ & Tim) should also be done.\n\nIt should be noticed, that the LAMPS [Limited Additional Mechanisms for PKIX and SMIME] charter \n(https://datatracker.ietf.org/wg/lamps/about/) indicates: \n\n> In addition, the LAMPS WG may investigate other updates to documents produced by the PKIX and S/MIME WG. \nThe LAMPS WG may produce clarifications where needed, but the LAMPS WG shall not adopt anything \nbeyond clarifications without rechartering.\n\nDefining this extension in the current draft would be easier as the same document would be able to support \"Referenced Tokens\" \nencoded as JWT, CWT or DER. \n\nTwo approaches would be possible:\n\n- \tto define an extension similar to \"CRL Distribution Points\" as defined in RFC 5280, in section [4.2.1.13](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.13).\n- \tto define an accessMethod OID similar to \"id-ad-ocsp OBJECT IDENTIFIER ::= { id-ad 1 }\" as defined in RFC 5280, \nin [4.2.2.1](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.1). Authority Information Access.\n\nIf developed by the LAMPS WG, this would require a rechartering of LAMPS. \nIf developed by the OAuth WG, recommendations from the co-chairs should be considered.\n\nIn both cases, we should consider the recommendations from our SEC AD: Deb.",
          "createdAt": "2025-02-06T15:05:34Z",
          "updatedAt": "2025-02-06T15:05:34Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "Here's a sample implementation how bit string status list could be included in the x509 (DER/PEM) CRL format (with a new extension):\nhttps://github.com/MyNextID/idt-plus-plus/tree/experimental/compact-crl/compact-crl\nMore specifically: https://github.com/MyNextID/idt-plus-plus/blob/dbce1b6454342df0af9a711eeb7dd900f74878ae/compact-crl/crl.go#L131\n\nResulting DER/PEM size are that of a unencoded/encoded CBOR.\n\nalg: bit-string-status-list\nformat: jwt, cwt, der\n\n",
          "createdAt": "2025-02-14T09:01:04Z",
          "updatedAt": "2025-02-14T09:01:04Z"
        },
        {
          "author": "steffenschwalm",
          "authorAssociation": "NONE",
          "body": "@paulbastian The issue is: According Annex V g) eIDAS any QEAA has to be signed with QES/QSeal. As QES/QSeal based on x509 in Europe under eIDAS. This means in consequence: If TokenStatus List used for the QEAA but not possible for x509 any QTSP for QEAA has to have 2 different revocation mechanism for exact the same subject - a QEAA:\n\n- 1 StatusList for the attestation\n- 1 for the QES/QSeal of the attestation\n\nThis creates only higher effort and security risks as both have to be managed, correlated and secured. \n\nBTW; x509 is already attestation format acc. ETYSI TS 119 472-1 as legally possible in Europe. Recommend to cover x509 with TokenStatusList as @alenhorvat suggested .- maybe in a profile or similar\n",
          "createdAt": "2025-02-14T09:07:45Z",
          "updatedAt": "2025-02-14T09:09:17Z"
        },
        {
          "author": "cre8",
          "authorAssociation": "NONE",
          "body": "@alenhorvat @steffenschwalm when you could provide the necessary encoding information for the x509 format and also can give the ok that the approach of the status list (like different states, etc) is covering the requirements, I think the authors are thankful for this and it's easier for them to integrate it.",
          "createdAt": "2025-02-14T09:35:27Z",
          "updatedAt": "2025-02-14T09:35:27Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I understand the motivation for the request (and it makes sense to me from that perspective), but the biggest question seems to  be where to define this.\n\nI share the concern of Tobias that this draft has already grown quite a bit in size and especially that this topic feels outside of the scope of the OAuth WG. I would be more comfortable with a small addition / profile somewhere else - a WG that focuses more on X.509 related work. It also sounds like this is primarily a concern for eIDAS related implementations right now -> would it make sense to create this profile in ETSI?",
          "createdAt": "2025-02-14T09:46:02Z",
          "updatedAt": "2025-02-14T09:46:17Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "> [@alenhorvat](https://github.com/alenhorvat) [@steffenschwalm](https://github.com/steffenschwalm) when you could provide the necessary encoding information for the x509 format and also can give the ok that the approach of the status list (like different states, etc) is covering the requirements, I think the authors are thankful for this and it's easier for them to integrate it.\n\nI used the encoding as defined in the document (I hope) and put it in the CRL extension\nIn DER -> byte array (zlib compressed).\n\nI guess for EU, it's ETSI who should confirm the x509 profile\nRequires a custom identifer/OID I guess. @steffenschwalm would you know more about the process?\n\na) technically we know how to do it and it doesn't introduce any breaking change to this specification\nb) where to define the extension, maybe @steffenschwalm ?",
          "createdAt": "2025-02-14T10:10:57Z",
          "updatedAt": "2025-02-14T10:10:57Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "> I understand the motivation for the request (and it makes sense to me from that perspective), but the biggest question seems to be where to define this.\n> \n> I share the concern of Tobias that this draft has already grown quite a bit in size and especially that this topic feels outside of the scope of the OAuth WG. I would be more comfortable with a small addition / profile somewhere else - a WG that focuses more on X.509 related work. It also sounds like this is primarily a concern for eIDAS related implementations right now -> would it make sense to create this profile in ETSI?\n\nISO 18013 would also benefit from x509 as they're already using x509 for trust management and having revocation in the same format, but more compact, would be beneficial also for them.",
          "createdAt": "2025-02-14T10:17:53Z",
          "updatedAt": "2025-02-14T10:17:53Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> ISO 18013 would also benefit from x509 as they're already using x509 for trust management and having revocation in the same format, but more compact, would be beneficial also for them.\n\nAt least the people we spoke to from that (ISO) WG don't seem to think that way - rather keep existing X.509 implementations untouched as Tobias already mentioned.",
          "createdAt": "2025-02-14T10:59:27Z",
          "updatedAt": "2025-02-14T10:59:27Z"
        },
        {
          "author": "steffenschwalm",
          "authorAssociation": "NONE",
          "body": "@c2bo I thought the TokenStatusList focused on revocation of attestations in eIDAS isn\u00b4t it? How should this work without exponential increasing of effort for QTSP)? and ISO WG will have same issue ;-) Or can I take your comment that TokenStatusList not aimed for eIDAS? Means @cre8 you can delete it from German Architecture ;-)\n@alenhorvat \na) technically we know how to do it and it doesn't introduce any breaking change to this specification\nb) where to define the extension,\naccording to suggestion given by @paulbastian it could be done as extension of Section 6 \"Referenced Token\" alternatively Section 4 and/or 5\n\n--> OID = ETSI\n\nRecommend to define the profile first\n",
          "createdAt": "2025-02-14T11:03:42Z",
          "updatedAt": "2025-02-14T11:11:56Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "> > ISO 18013 would also benefit from x509 as they're already using x509 for trust management and having revocation in the same format, but more compact, would be beneficial also for them.\n> \n> At least the people we spoke to from that (ISO) WG don't seem to think that way - rather keep existing X.509 implementations untouched as Tobias already mentioned.\n\nBeauty of the proposal is that the existing x509 implementations remain untouched. However, set of their options is extended by the novel approach introduced in this specification. Use cases, that suffer from CRL size issue incurred by the current CRL approach can now implement a super-efficient bit-string status list as x509. There are many (un?)successful attempts to make CRL sizes smaller (https://blog.mozilla.org/security/2020/01/09/crlite-part-1-all-web-pki-revocations-compressed/) and Let's Encrypt moving back to CRL https://letsencrypt.org/2024/12/05/ending-ocsp/, IMO this represents an amazing opportunity for this specification to thrive.",
          "createdAt": "2025-02-14T11:55:37Z",
          "updatedAt": "2025-02-14T11:56:24Z"
        },
        {
          "author": "steffenschwalm",
          "authorAssociation": "NONE",
          "body": "@paulbastian @tplooker @c2bo the avoidance to put profile for using TokenStatusList for the QES/QSeal of certain QEAA in the IETF Specification seems: As you define in 12.1 of the spec the idea is to avoid that \" Issuer creates a profile for the issued token by correlating the date and identity of Relying Parties, that are requesting the status.\". In case for the QEA/QSeal of QEAA no TokenStatusList used we have following issue:\n\n- Attestation = TokenStatus List --> privacy solved\n- QES/Seal of attestation = OCSP because x509 --> as QES/QSeal is referenced and linked to belonging attestation the tracking of Holder of given QEAA is possible\n\nMeans: if not in both cases attestation and its signature TokenStatusList used, the requirement of 12.1 of the TokenStatusList specification seems compromiseable I guess.\n\nTogether with @cre8 I would like to contribute a concrete Solution for the proposed Extenstion of Token Status List (TSL) draft to support X.509 certificates. you`ll find the proposal below:\n\nTo extend the Token Status List (TSL) draft to support X.509 certificates, we need to introduce:\n\n1. A new section in the draft detailing how to encode and interpret the status of X.509 certificates.\n\n\n2. An ASN.1 extension that allows an X.509 certificate to reference a Token Status List.\n\n---\n\nProposed Additional Section for the Token Status List Draft\n\nX.509 Certificate Status Management using Token Status Lists\n\n1. Introduction\n\nX.509 certificates require a scalable, efficient mechanism to check their revocation status. Traditional methods such as Certificate Revocation Lists (CRLs) and Online Certificate Status Protocol (OCSP) have limitations in terms of scalability and privacy. Token Status Lists (TSL) provide an alternative by allowing X.509 certificates to reference a compact, Merkle-tree-based status list.\n\nThis section defines how X.509 certificates can integrate with TSL by embedding a reference to the list, enabling verifiers to efficiently check revocation status.\n\n2. X.509 Token Status List Reference\n\nEach X.509 certificate can include a TSL reference via an X.509 certificate extension. This extension provides:\n\nA URI pointing to the published Token Status List.\n\nAn index or hash within the list that corresponds to the certificate.\n\nOptional cryptographic proofs to ensure integrity.\n\n\n3. X.509 Extension Definition\n\nTo integrate with X.509, we define a new certificate extension named id-pe-tokenStatusList. This extension is non-critical and allows verifiers to check the status of a certificate using TSL.\n\nThe extension contains:\n\nThe URI where the status list is published.\n\nThe index position or hash of the certificate within the list.\n\nAn optional timestamp for the last status update.\n\n\n\n---\n\nASN.1 Definition for the X.509 Token Status List Extension\n\nHere is the ASN.1 definition for embedding the Token Status List reference into an X.509 certificate:\n\nid-pe-tokenStatusList OBJECT IDENTIFIER ::= { id-pe 45 }\n\nTokenStatusListSyntax ::= SEQUENCE {\n statusListURI IA5String, -- URI of the Token Status List\n statusIndex INTEGER OPTIONAL, -- Index of the certificate in the list (if applicable)\n statusHash OCTET STRING OPTIONAL, -- Hash of certificate entry in the list (if used)\n lastUpdated GeneralizedTime OPTIONAL -- Timestamp of last update\n}\n\nTokenStatusListExtension ::= SEQUENCE {\n statusList TokenStatusListSyntax\n}\n\n-- X.509 extension definition\nEXTENSION ::= {\n SYNTAX TokenStatusListSyntax\n IDENTIFIED BY id-pe-tokenStatusList\n}\n\n---\n\nHow Verifiers Use This Extension\n\n1. Extract the statusListURI from the X.509 certificate extension.\n\n\n2. Fetch the Token Status List from the given URI.\n\n\n3. Determine certificate status by:\n\nUsing statusIndex to look up the certificate's entry in the list.\n\nIf statusHash is provided, verifying the hash matches the stored entry.\n\nEnsuring that the lastUpdated field is recent enough for validity.\n\n4. Verify the cryptographic proof (if applicable) to confirm the integrity of the status list.\n\n---\n\nIntegration with the X.509 Certificate Signing Process\n\n1. Certificate Issuance:\n\nThe CA generates a Token Status List and assigns an entry to the new certificate.\n\nThe CA includes the corresponding id-pe-tokenStatusList extension in the certificate before signing.\n\n2. Certificate Verification:\n\nRelying parties extract the extension and validate the status by fetching the list.\n\nThey confirm whether the certificate is revoked, suspended, or still valid.\n\n---\n\nConclusion\n\nBy adding this X.509 extension, certificates can efficiently use Token Status Lists for status verification. This method enhances scalability, reduces reliance on OCSP servers, and improves privacy by minimizing direct queries to certificate authorities.\n",
          "createdAt": "2025-02-17T17:37:32Z",
          "updatedAt": "2025-02-23T12:19:54Z"
        }
      ]
    },
    {
      "number": 247,
      "id": "I_kwDOJZ2aqs6n9EpC",
      "title": "About claim \"aggregation_uri\"",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/247",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "In #228, C2bo wrote:\n\n> The claim \"aggregation_uri\" is meant as a way to allow efficient caching for RPs, not for alternative URIs - it points to all relevant status lists for an issuer or specific referenced token type.\n\n\"aggregation_uri\" is defined in 4.1 as:\n\n> aggregation_uri: OPTIONAL.  JSON String that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token. \n See section Section 9 for further detail.\n\nSection 9 (Status List Aggregation) states:\n\n> Status List Aggregation is an optional mechanism to retrieve a list of URIs to all Status List Tokens, allowing a Relying Party to fetch \nall relevant Status Lists for a specific type of Referenced Token or Issuer.  \n\nThese two descriptions are not aligned with section 4.1, as in section 9, the sentence mentions:\n> all relevant Status Lists for a specific type of Referenced Token or Issuer.  \n\nThe case of the Issuer is not mentioned in section 4.1.\n\nThen comes some questions.\n\nHow can the Relying Party retrieve either: \n> a) all relevant Status Lists for a specific [type of] Referenced Token, or\n> b) all relevant Status Lists for an Issuer ?\n\nIn the first case, how long should \"all relevant Status Lists\" for a specific type of Referenced Token be accessible ? \nSame question for \"all relevant Status Lists\" for an Issuer.\n\nThere should be some additional text to warn the Issuers about some consequences when this claim is supported.\n\n\"All relevant Status Lists for an Issuer\" allows a Relying Party to know how many Referenced Tokens have been issued by an Issuer and are either valid, suspended or revoked at an instant of time. This reveals the number of entities that have been registered. Some Issuers  might not like to disclose that information and should be warned of the consequences before choosing to support this optional claim.\n\nFinally, I still have difficulties to understand the usefulness of this optional claim for a Referenced Token. \nCaching is pretty well supported by the ttl claim:\n\n> *  ttl: OPTIONAL.  The ttl (time to live) claim, if present, MUST specify the maximum amount of time, in seconds, \nthat the Status List Token can be cached by a consumer before a fresh copy SHOULD be retrieved. \n\n\n\n\n\n\n\n",
      "createdAt": "2025-01-29T10:29:15Z",
      "updatedAt": "2025-01-31T13:49:42Z",
      "closedAt": "2025-01-31T13:49:42Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editors Call:\n-  we will fix Section 4 to add \".. or Issuer\"\n- the privacy consideration that you mention is already present in the draft: https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#section-12.4",
          "createdAt": "2025-01-31T13:41:44Z",
          "updatedAt": "2025-01-31T13:41:44Z"
        }
      ]
    },
    {
      "number": 253,
      "id": "I_kwDOJZ2aqs6ogC_j",
      "title": "Change proposals for the definition of the terms \"Referenced Token\" and \" Status List Token\"",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/253",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "The current definition of a Referenced Token is:\n\n> Referenced Token:\n> A cryptographically secured data structure that contains a reference to a Status List Token. It is RECOMMENDED to use JSON [[RFC8259](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#RFC8259)] with JOSE as defined in [[RFC7515](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#RFC7515)] or CBOR [[RFC8949](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#RFC8949)] with COSE as defined in [[RFC9052](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#RFC9052)]. The information from the contained Status List gives the Relying Party additional information about the current status of the Referenced Token. Examples for Referenced Tokens are SD-JWT VC and ISO mdoc.\n\nThis definition does not match with the definition of a status claim which is:\n\n> 6.1. Status Claim \n> \n> By including a \"status\" claim in a Referenced Token, the Issuer is **referencing a mechanism** to retrieve status information \nabout this Referenced Token. \n\n> The claim contains members used to reference to a Status List Token as defined in this specification. Other members of the \"status\" object may be defined by other specifications. This is analogous to \"cnf\" claim in Section 3.1 of [RFC7800] in which different authenticity confirmation methods can be included.\n> \n\nIt is proposed to change this definition into:\n\n> Referenced Token: A cryptographically secured data structure that includes a \"status\" claim that is referencing a mechanism to retrieve status information about this Referenced Token. \n> While several mechanisms are possible, this document documents a single mechanism where the \"status\" claim contains both a reference to a Status List Token and an index specific to the Referenced Token that allows a Relying Party to check for status information in the Status List Token for the current Referenced Token. Examples of Referenced Tokens are X.509 PKCs, SD-JWT VC and ISO mdoc.\n\n\nAt the moment \"Status List Token\" is defined as:\n\n> A token in JWT or CWT representation that contains a cryptographically secured Status List.\n\nThis is correct. However some text that is present in the definition of \"Referenced Token\" should be moved afterwards.\n\nText change proposal:\n\n> Status List Token : A token in JWT or CWT representation that contains a cryptographically secured Status List. \nIt is RECOMMENDED to use JSON [[RFC8259](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#RFC8259)] with JOSE as defined in [[RFC7515](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#RFC7515)] or CBOR [[RFC8949](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#RFC8949)] with COSE as defined in [[RFC9052](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#RFC9052)].",
      "createdAt": "2025-02-03T09:42:06Z",
      "updatedAt": "2025-02-12T19:02:09Z",
      "closedAt": "2025-02-12T19:02:09Z",
      "comments": []
    },
    {
      "number": 254,
      "id": "I_kwDOJZ2aqs6ogF2B",
      "title": "Status List Tokens can be fetched either by the Relying Party or by the Holder",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/254",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "Only the first case is described and illustrated. Both cases should be described and illustrated.\n\nThe current text from section 1 (Introduction) is:\n\n> An Issuer issues Referenced Tokens to a Holder, the Holder uses and presents those Referenced Tokens to a Relying Party.  The Issuer gives updated status information to the Status Issuer, who creates a Status List Token.  The Status Issuer provides the Status List Token to the Status Provider, who serves the Status List Token on a public, resolvable endpoint.  The roles of the Issuer (of the Referenced Token), the Status Issuer and the Status Provider may be fulfilled by the same entity.  If not further specified, the term Issuer may refer to an entity acting for all three roles.  This document describes how an Issuer references a Status List Token and how a Relying Party fetches and validates Status Lists.\n\n> The following diagram depicts the relationship between the involved roles (Relying Party is equivalent to Verifier of [SD-JWT.VC]):\n\n```\n\n              issue                 present\n              Referenced            Referenced\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Token      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Token      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Issuer \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Holder \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Relying Party \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u25bc update status                              \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                              \u2502\n   \u2502 Status Issuer \u2502                              \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                              \u2502\n     \u25bc provide Status List                        \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         fetch Status List  \u2502\n   \u2502 Status Provider \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n```\n\n> Status Lists may be composed for expressing a range of Status Types. This document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types.\n\nText change proposal:\n\n> An Issuer of Referenced Tokens which is called an Issuer, issues Referenced Tokens to Holders. An Holder then uses and presents those Referenced Tokens to a Relying Party. \n> \n> Status Issuers issue Status List Tokens. The Status issuer can be either the Issuer or an entity that has been authorized by the Issuer to issue Status List Tokens.\n> \n> The Status Issuer issues Status List Tokens using one or more distribution points.\n> \n> The Status Issuer creates Status List Tokens initially indicating that all the Referenced Tokens then can be referenced in it are valid. In case a status change is required, the Issuer provides status information to the Status Issuer so that it can modify the content of one of the Status Lists that has been created. The modification will be taken into account at the next issuance of the Status List Token where the Referenced Token is referenced.\n> \n> This document describes how a Status List Token is created, how an Issuer references a Status List Token and how a Relying Party fetches and validates Status List Tokens.\n> \n> The following diagram depicts the relationship between the involved roles (Relying Party is equivalent to Verifier of [SD-JWT.VC]) when Status List Tokens are fetched by the Relying Party:\n> \n```\n\n              issues                  presents\n              Referenced              Referenced\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Token      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   Token           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Issuer \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Holder \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Relying Party \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u25bc updates status                                          \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                           \u2502\n   \u2502 Status Issuer \u2502                                           \u2502\n   \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                           \u2502\n        \u2502 issues Status List Tokens using a Distribution point \u2502\n        \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                             \u2502\n        \u2514\u2500\u25ba\u2502  Status List Token  \u2502  fetches Status List Token  \u2502\n           \u2502  Distribution Point \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n> Diagram 2: This diagram depicts the case where the Status List Token is fetched by the Relying Party. \n> \n> Before presenting the Referenced Token to the Relying Party, the Holder may choose to fetch the Status List Token and to present together to the Relying Party both the Referenced Token and the corresponding Status list Token. This can avoid the Relying Party to fetch the corresponding Status List Token.\n\n```\n\n                                             presents \n                                             Referenced Token and\n               issues                        Status List Token\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  Referenced Token   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Issuer \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Holder \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Relying Party \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518                     \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u25bc updates status                  \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                   \u2502\n   \u2502 Status Issuer \u2502                   \u2502\n   \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2502\n        \u2502 issues Status List Tokens    \u2502\n        \u2502 using a Distribution point   \u2502\n        \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u2502\n        \u2514\u2500\u25ba\u2502  Status List Token  \u2502     \u2502 fetches Status List Token\n           \u2502  Distribution point \u2502\u25c4\u2500\u2500\u2500\u2500\u2518\n           \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\nDiagram 3: This diagram depicts the case where the Status List Token is fetched by the Holder. \n\nText in section 8.1 should be changed to support the use case of the Diagram 3 where the Status List Token is fetched by the Holder.\n\nIn section 8.1, the text states:\n\n> 8.1.  Status List Request\n> \n> To obtain the Status List Token, the Relying Party MUST send an HTTP GET request to the URI provided in the Referenced Token.\n\n Since Status List Tokens can also be fetched by the Holder, this sentence should be modified.\n\nChange into:\n\n> The URI provided in the Referenced Token can be used either by the Relying Party or by the Holder to fetch the Status List Token that contains the status of the Referenced Token. To obtain this Status List Token, either the Relying Party or the Holder MUST send an HTTP GET request to the URI provided in the Referenced Token.\n\nThe following sentences should be modified to accommodate the two cases:\n\n>    The Relying Party SHOULD send the following Accept-Header to indicate the requested response type:\n> \n>    *  \"application/statuslist+jwt\" for Status List Token in JWT format\n> \n>    *  \"application/statuslist+cwt\" for Status List Token in CWT format\n> \n>    If the Relying Party does not send an Accept Header, the response\n>    type is assumed to be known implicit or out-of-band.\n\nChange into:\n\n> Either the Relying Party or the Holder SHOULD send the following Accept-Header to indicate the requested response type:\n> \n>    *  \"application/statuslist+jwt\" for Status List Token in JWT format\n> \n>    *  \"application/statuslist+cwt\" for Status List Token in CWT format\n> \n> If the Relying Party or the Holder does not send an Accept Header, the response type is assumed to be known implicit or out-of-band.\n> ",
      "createdAt": "2025-02-03T09:45:30Z",
      "updatedAt": "2025-02-17T00:29:15Z",
      "closedAt": "2025-02-17T00:29:15Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think there is a valid point, that it may make sense for the Holder to request the status list, such that a wallet could display the status of credentials.",
          "createdAt": "2025-02-07T14:45:15Z",
          "updatedAt": "2025-02-07T14:45:15Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "I am sorry but I can't see which changes have been done. \nI downloaded the Editor's copy but it is dated 7 February 2025.\n\nIf you were able to copy and paste below the text that has been changed, it would be possible for me to see it. \n",
          "createdAt": "2025-02-12T17:27:21Z",
          "updatedAt": "2025-02-12T17:27:21Z"
        }
      ]
    },
    {
      "number": 255,
      "id": "I_kwDOJZ2aqs6ogGPh",
      "title": "About claim \"aggregation_uri\"",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/255",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "pending-close"
      ],
      "body": "In #228, C2bo wrote:\n\n> The claim \"aggregation_uri\" is meant as a way to allow efficient caching for RPs, not for alternative URIs \n> - it points to all relevant status lists for an issuer or specific referenced token type.\n\n\"aggregation_uri\" is defined in 4.1 as:\n\n> aggregation_uri: OPTIONAL.  JSON String that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token.  \nSee section 9 for further detail.\n\nSection 9 (Status List Aggregation) states:\n\n> Status List Aggregation is an optional mechanism to retrieve a list of URIs to all Status List Tokens, allowing a Relying Party to fetch all relevant Status Lists for a specific type of Referenced Token or Issuer.  \n\nThese two descriptions are not aligned with section 4.1. **The case of the Issuer is not mentioned in section 4.1**.\nHowever, in section 9, the sentence mentions: \n> all relevant Status Lists for a specific type of Referenced Token **or Issuer**.  \n\n Then comes some questions.\n\nHow can the Relying party retrieve either: \n\na) all relevant Status Lists for a specific [type of] Referenced Token, or\nb) all relevant Status Lists for an Issuer ?\n\nIn the first case, how long should \"all relevant Status Lists\" for a specific type of Referenced Token be accessible ? \nSame question for \"all relevant Status Lists\" for an Issuer.\n\nIf the case of the \"Issuer\" is indeed supported, there should be some additional text to warn the Issuers about some consequences when this claim is supported. For example:\n\n> \"All relevant Status Lists for an Issuer\" allows a Relying Party to know how many Referenced Tokens have been issued by an Issuer and are either valid, suspended or revoked at an instant of time. This can reveal also the number of entities that have been registered. Issuers should be warned of the consequences before choosing to support this optional claim.\n\n\nFinally, the argument is that this claim is \"meant as a way to allow efficient caching for RPs\". However, I still have difficulties to understand the usefulness of this optional claim when the JSON String contains a URI to retrieve the Status List Aggregation for this Referenced Token.\nCaching is pretty well supported by the ttl claim:\n\n> *  ttl: OPTIONAL.  The ttl (time to live) claim, if present, MUST specify the maximum amount of time, in seconds, that the Status List Token can be cached by a consumer before a fresh copy SHOULD be retrieved. \n\n",
      "createdAt": "2025-02-03T09:45:58Z",
      "updatedAt": "2025-03-03T07:51:31Z",
      "closedAt": "2025-03-03T07:51:31Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "- Your first point was already fixed in the newest version\n- its up to the Issuer/Status List Provider how long he provides these, no need for any normative text\n- your reference to the privacy is also mentioned in the current draft already, you posted this already twice now, so I'm repeating my answer here: https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-observability-of-outsiders\n- the `ttl` claim usage is already well explained in the draft: https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-status-list-caching\n\nPending close as there are no new issues reported.",
          "createdAt": "2025-02-03T10:17:17Z",
          "updatedAt": "2025-02-03T10:17:17Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "OK. Section 4.1 is now consistent with Section 9.\n\nHowever, I still have difficulties to understand the usefulness of this optional claim and I still cant' understand the following sentence: \n\n> the argument is that this claim is \"meant as a way to allow efficient caching for RPs\".\n\nAn additional side question: \n\nHow can a Relying Party retrieve :\n\na) either all relevant Status Lists for a specific [type of] Referenced Token,\nb) or all relevant Status Lists for an Issuer ?\n\n",
          "createdAt": "2025-02-06T15:04:56Z",
          "updatedAt": "2025-02-06T15:04:56Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Imagine that a Relying Party doesn't want to pull the Status List Token ad-hoc during presentation but already wants it ready to use and regularly pull all of the necessary ones together. This may be beneficial for performance and for offline capability. A police officer may want to fetch all mDL status lists in the morning if he may drive in an area without internet connectivity.",
          "createdAt": "2025-02-07T17:03:45Z",
          "updatedAt": "2025-02-07T17:03:45Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "No response has been provided to my question which was:\n\n> How can a Relying Party retrieve :\n> (a) either all relevant Status Lists for a specific [type of] Referenced Token,\n> (b) or all relevant Status Lists for an Issuer ?\n\nI understand the case (b) but not the case (a).\n\nI can't understand the rational for this sentence (and I believe that this topic is related to my previous comment about the case (a)):\n\n>    If a Relying Party encounters an invalid Status List referenced in the response from the Status List Aggregation endpoint, \n>    it SHOULD continue processing the other valid Status Lists referenced in the response.\n\nThere should be one and only one SLT which contains the status of the Referenced Token. \nSo why continue to processing the other valid Status Lists referenced in the response ?\n\nLet us now suppose that mDLs has been issued by a country to 20 millions of drivers. \nHow many SLTs would need to be referenced ? Quite a lot. \n\nIn issue #220, I wrote: \n> a \"CRL issuer\" can use several \"distribution points\". Why should it be otherwise for a \"Status Issuer\" ?\n\nThe mDL is a nice example to illustrate the fact that, at least, two URIs should be made available. \nThe Police can use a private address to fetch the appropriate SLT on a network that is not open to the public, \nwhile commercial web servers can use a different (public) address to fetch the same the appropriate SLT.\n If an issuing country is a member of the EU, it can provide a URI in the domain name of the country, e.g. de or fr, \nas well as in the domain mane of the eu. \n\nIf more that one SLT distribution point is available, this number will be multiplied by the number of SLT distribution points.  \nThis can overload the SLTs. However, if one or more base URIs are negotiated between the Issuer and the Status Issuer \nfor each SLT distribution point, these base URIs can be included into the aggregation_uri. \n\nThen, each base URI will contain a list of relative URIs for each SLT. \n\nA further advantage is the fact that the content of the aggregation_uri extension will remain the same, even when a new SLT is added.\n\nTo summarize, the idea would be to issue all SLTs under a set of base URIs where each SLT will be placed under a single \n(and same) relative URI.\n\nI am conscious that this would be an important change to the current content of the draft, but it would provide major benefits.",
          "createdAt": "2025-02-12T17:28:41Z",
          "updatedAt": "2025-02-12T17:28:41Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> > If a Relying Party encounters an invalid Status List referenced in the response from the Status List Aggregation endpoint,\n> > it SHOULD continue processing the other valid Status Lists referenced in the response.\n> \n> There should be one and only one SLT which contains the status of the Referenced Token. So why continue to processing the other valid Status Lists referenced in the response ?\n\nTo provide a bit of context for that section: \"This mechanism is intended to support fetching and caching mechanisms and allow offline validation of the status of a reference token for a period of time.\"\n\nThe intention of \n\n> If a Relying Party encounters an invalid Status List referenced in the response from the Status List Aggregation endpoint, it SHOULD continue processing the other valid Status Lists referenced in the response.\n\nis that RPs that want to cache Status List Tokens (e.g., because they want to have them available for offline usage later), should continue to parse entries in the aggregation_uri if they encounter an error - don't fail and terminate all parsing, but keep on fetching and verifying the other entries.\n\n----\n\n> This can overload the SLTs. However, if one or more base URIs are negotiated between the Issuer and the Status Issuer\nfor each SLT distribution point, these base URIs can be included into the aggregation_uri.\n\nMost modern systems deal with that deployment complexity afaik not by providing more URLs, but by load balancing via DNS: the same DNS entry resolves depending on load and geographical(/network) proximity to other IPs (or other deployments/clusters). That is at least my experience and the main reason why I don't think it is necessary to add the complexity of having more than one entry in the aggregation_uri.\n\nWe also allow for redirects when resolving Status List Tokens, which would easily allow to shift traffic to another URL if it becomes necessary (outages etc).\n\n----\n\n> The mDL is a nice example to illustrate the fact that, at least, two URIs should be made available. The Police can use a private address to fetch the appropriate SLT on a network that is not open to the public, while commercial web servers can use a different (public) address to fetch the same the appropriate SLT. If an issuing country is a member of the EU, it can provide a URI in the domain name of the country, e.g. de or fr, as well as in the domain mane of the eu.\n\nThere is no reason for the private address to be visible anywhere publicly in that example is there? In that example I would see the public aggregation_uri as the one URI that is made publicly available and any other system can provide its own mechanism for distribution (e.g., via a private network etc), but there is no reason to include that information somewhere publicly. ",
          "createdAt": "2025-02-14T11:19:24Z",
          "updatedAt": "2025-02-14T11:19:24Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "C2bo wrote: \n\n> If a Relying Party encounters an invalid Status List referenced in the response from the Status List Aggregation endpoint, it SHOULD continue processing the other valid Status Lists referenced in the response.\n\nis that RPs that want to cache Status List Tokens (e.g., because they want to have them available for offline usage later), should continue to parse entries in the aggregation_uri if they encounter an error - don't fail and terminate all parsing, but keep on fetching and verifying the other entries.\n\n===================================================================================\n\nI am sorry, but I still don't understand. What do you mean by \" if they encounter an error\" ? The normal way is to use the uri that is contained in the Referenced Token and then to use the index to get the appropriate status. Since there is one distribution point there can only be a single SLT which will be the more up-to-date. \n\n===================================================================================\n\nC2bo also wrote: \n\n> This can overload the SLTs. However, if one or more base URIs are negotiated between the Issuer and the Status Issuer\nfor each SLT distribution point, these base URIs can be included into the aggregation_uri.\n\nMost modern systems deal with that deployment complexity afaik not by providing more URLs, but by load balancing via DNS: the same DNS entry resolves depending on load and geographical(/network) proximity to other IPs (or other deployments/clusters). That is at least my experience and the main reason why I don't think it is necessary to add the complexity of having more than one entry in the aggregation_uri.\n\n===================================================================================\nSection 9 (Status List Aggregation) starts with:\n\n> Status List Aggregation is an optional mechanism to retrieve **_a list of URIs_** (...)\n\nThis means that aggregation_uri can contain several entries.\n\nHowever, this is in contradiction with section 4.1 which states:\n\n> aggregation_uri: OPTIONAL. JSON String that **_contains a URI_** to retrieve the Status List Aggregation for this type of Referenced Token or Issuer.\n\nWhy are there two cases, i.e., \"this type of Referenced Token or Issuer\" ? \n\nI still don't understand the first case.\n\nI can understand the second case, where the Relying Party would like to cache in advance all the SLTs from a given Issuer \nas soon as it got a Referenced Token. But in that case, it would be a single **_base uri_** (instead of a list of uris). \n\n===================================================================================\n\n> The mDL is a nice example to illustrate the fact that, at least, two URIs should be made available. The Police can use a private address to fetch the appropriate SLT on a network that is not open to the public, while commercial web servers can use a different (public) address to fetch the same the appropriate SLT. (...)\n\nC2bo wrote: \n\n> There is no reason for the private address to be visible anywhere publicly in that example is there? In that example I would see the public aggregation_uri as the one URI that is made publicly available and any other system can provide its own mechanism for distribution (e.g., via a private network etc), but there is no reason to include that information somewhere publicly.\n\nThank you for the explanations and for the rational. Your last sentence allowed me to bounce. \nLet us continue to use the mDL example. Two distribution points would be used:\n-\ta public distribution point for the public, and\n-\ta private distribution point for the police.\n\nThe private distribution point for the police would no be included into the Referenced Token, but is only known by the police. \n\nThe public distribution point can contain a uri with a SLT with 2 bits.\nThe private distribution point can contain a uri with a SLT with 8 bits.\n\nIn the second case, the police can know various statuses of the mDL (but not the public). For example:\n\n- this mDL allows to drive cars,\n- this mDL allows to drive trucks,\n- this mDL allows to drive school buses,\n- this mDL has been suspended because the driver got 12 or more penalty points.\n- this mDL has been invalidated following a decision of the police or of a court\n\nTo summarize : \n\nThe Status Issuer can use several distribution points, but a single public distribution point will be indicated in the Referenced Token.\nEach SLT can use a different number of bits (1, 2, 4 or 8 bits)\n\n",
          "createdAt": "2025-02-17T13:49:00Z",
          "updatedAt": "2025-02-17T13:49:00Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I think there is some misunderstanding on how the `aggregation_uri` currently works:\nIt is a uri that is provided either by metadata (.well-known etc) or within a Status List Token itself. When resolved, it contains a JSON array with a list of URLs to Status List Tokens. Those are the relevant Status List Tokens within that scope (either all Status List Tokens that the issuer is serving, or all Status List Tokens relevant for that credential type). \n\nFrom that context:\n> If they encounter an error ...\n\nThe aggregation_uri contains a list of Status List Tokens - if fetching or validating one of them fails, the others should still be processed\n\n> I can understand the second case, where the Relying Party would like to cache in advance all the SLTs from a given Issuer\nas soon as it got a Referenced Token. But in that case, it would be a single base uri (instead of a list of uris).\n\nDepending on size, there could be more than 1 Status List Token for a credential (referenced token) type, so `aggregation_uri` even if scoped to one referenced token type could point to a list. \n\nThe idea of embedding `aggregation_uri` also in the Status List Token itself is to provide an option to ecosystems that do not (or do not want to) use other ways of metadata like .well-known - that way it is sort of self-contained without other dependencies: a RP can always fetch one Status List Token after receiving a Referenced Token and get `aggregation_uri` from there to cache all relevant Status List Tokens.",
          "createdAt": "2025-02-20T07:38:15Z",
          "updatedAt": "2025-02-20T07:38:15Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "> I think there is some misunderstanding on how the aggregation_uri currently works:\n> It is a uri that is provided either by metadata (.well-known etc) or within a Status List Token itself. \n> When resolved, it contains a JSON array with a list of URLs to Status List Tokens. \n\nThis now becomes understandable, but this is not what the text was saying:\n\n> JSON String that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token or Issuer.\n\n> Those are the relevant Status List Tokens within that scope (either all Status List Tokens that the issuer is serving, \nor all Status List Tokens relevant for that credential type).`\n\nThe term \"credential type\" is not present in the draft. This is still not understandable. There is no means to understand what the \"scope\" is. \n\n> The aggregation_uri contains a list of Status List Tokens - if fetching or validating one of them fails, \n> the others should still be processed\n\nThis is still not understandable to me. The status of a Referenced Token is provided by the latest published SLT. \nAt a given point of time and for a given Referenced Token, only the latest SLT is published. \nIf the SLT has been malformed or is not correctly signed, then this is a fatal error. \nIf the SLT cannot be retrieved, then trying more times is likely to succeed.\n\n> Depending on size, there could be more than 1 Status List Token for a credential (referenced token) type, \nso aggregation_uri even if scoped to one referenced token type could point to a list.\n\nDepending of the size of \"what\" ? \n\n> \"there could be more than 1 Status List Token\". \n\nThis statement would need to be explained in details.\n\nWhat is a \"credential type\" ?\n\n> ... so aggregation_uri even if scoped to one referenced token type could point to a list.\n\nThe end of this sentence is not understandable to me.\n",
          "createdAt": "2025-02-21T18:41:44Z",
          "updatedAt": "2025-02-21T18:41:44Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > I think there is some misunderstanding on how the aggregation_uri currently works:\n> > It is a uri that is provided either by metadata (.well-known etc) or within a Status List Token itself.\n> > When resolved, it contains a JSON array with a list of URLs to Status List Tokens.\n> \n> This now becomes understandable, but this is not what the text was saying:\n> \n> > JSON String that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token or Issuer.\n\nThis text is from the draft an clear enough to me. What's missing?\n\n> \n> > Those are the relevant Status List Tokens within that scope (either all Status List Tokens that the issuer is serving,\n> > or all Status List Tokens relevant for that credential type).`\n> \n> The term \"credential type\" is not present in the draft. This is still not understandable. There is no means to understand what the \"scope\" is.\n\n\nThis text is not in the draft and just an attempt of explanation within this issue, therefore it makes sense that these terms are not in the draft. I think the text is good enough, otherwise make a proposal (as you now understand the concept) or we close the issue.\n\n> \n> > The aggregation_uri contains a list of Status List Tokens - if fetching or validating one of them fails,\n> > the others should still be processed\n> \n> This is still not understandable to me. The status of a Referenced Token is provided by the latest published SLT. At a given point of time and for a given Referenced Token, only the latest SLT is published. If the SLT has been malformed or is not correctly signed, then this is a fatal error. If the SLT cannot be retrieved, then trying more times is likely to succeed.\n\nThere may be more than one \"latest\" Status List Token, if the Status Issuer is chunking these Referenced Tokens into multiple Status Lists for scalability. Therefore, aggregation_uri may contain multiple URIs to multiple Status List Tokens. If one of them fails for whatever reason, still continue with the others.\n\n> \n> > Depending on size, there could be more than 1 Status List Token for a credential (referenced token) type,\n> > so aggregation_uri even if scoped to one referenced token type could point to a list.\n> \n> Depending of the size of \"what\" ?\n> \n> > \"there could be more than 1 Status List Token\".\n> \n> This statement would need to be explained in details.\n> \n> What is a \"credential type\" ?\n> \n> > ... so aggregation_uri even if scoped to one referenced token type could point to a list.\n> \n> The end of this sentence is not understandable to me.\n\nThis is explained here: https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#section-13.3-3\n\n",
          "createdAt": "2025-02-23T11:32:26Z",
          "updatedAt": "2025-02-23T11:32:26Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "\n>  I think there is some misunderstanding on how the aggregation_uri currently works:\n>  It is a uri that is provided either by metadata (.well-known etc) or within a Status List Token itself.\n>  When resolved, it contains a JSON array with a list of URLs to Status List Tokens.\n\n> This now becomes understandable, but this is not what the text was saying:\n\n> JSON String that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token or Issuer.\n\n> This text is from the draft an clear enough to me. What's missing?\n\nThe draft is unclear as it does not contain the following wording: \n\n> \"JSON array with a list of URLs to Status List Tokens.\n\nSome text like below would be more understandable:\n\n> uri that is provided either by metadata (.well-known etc) or within a Status List Token itself.\nWhen resolved, it contains a JSON array with a list of URLs to Status List Tokens.\n\nYou wrote:\n\n> There may be more than one \"latest\"  Status List Token, if the Status Issuer is chunking these Referenced Tokens into multiple Status Lists for scalability. Therefore, aggregation_uri may contain multiple URIs to multiple Status List Tokens. If one of them fails for whatever reason, still continue with the others.\n\nThe above explanation is using the word \"chunking\": \n\n> \"if the Status Issuer is chunking these Referenced Tokens into multiple Status Lists for scalability\".\n\n I made a search on the term \"chunk\" and, in the draft, I found the following text:\n\n>    The Status List Issuer may chunk its Referenced Tokens into multiple\n>    Status Lists to reduce the transmission size of an individual Status\n>    List Token.  This may be useful for setups where some entities\n>    operate in constrained environments, e.g. for mobile internet or\n>    embedded devices.  The Status List Issuer may chunk the Status List\n>    Tokens depending on the Referenced Token's expiry date to align their\n>    lifecycles and allow for easier retiring of Status List Tokens,\n>    however the Status Issuer must be aware of possible privacy risks due\n>    to correlations.\n\n\"chunk\" is a term I am not familiar with. \n         Cambridge dictionary: a part of something, especially a large part. \n         North American: divide (something) into chunks. \n\nThis does not help me to understand why \"chunking\" is used and what is being \"chunked\".\n\nThe Issuer can decide to place THE status of a Referenced Token in any SLT depending upon a criteria of its is own choice. \nIt is is NOT the job of the Status List Issuer to decide: it is the job of the Issuer. \n\nThis still does not explain why THE status of a Referenced Token should be placed into \"more than one SLT\". \nTo make an analogy, when using CRLs, there is one and only one (base) CRL referenced in an X.509 PKC and if it fails \n(whatever the verb \"fail\" may mean) then there is no \"continuation\". \n\nLet us make things simple and do not attempt to make things over complicated.\n\nThe text that is \"chunk-related\" should be removed.\n\nThe text that is mentioning \"types of Referenced Tokens\" should also be removed.",
          "createdAt": "2025-02-25T08:07:37Z",
          "updatedAt": "2025-02-25T08:07:37Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > I think there is some misunderstanding on how the aggregation_uri currently works:\n> > It is a uri that is provided either by metadata (.well-known etc) or within a Status List Token itself.\n> > When resolved, it contains a JSON array with a list of URLs to Status List Tokens.\n> \n> > This now becomes understandable, but this is not what the text was saying:\n> \n> > JSON String that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token or Issuer.\n> \n> > This text is from the draft an clear enough to me. What's missing?\n> \n> The draft is unclear as it does not contain the following wording:\n> \n> > \"JSON array with a list of URLs to Status List Tokens.\n> \n> Some text like below would be more understandable:\n> \n> > uri that is provided either by metadata (.well-known etc) or within a Status List Token itself.\n> > When resolved, it contains a JSON array with a list of URLs to Status List Tokens.\n\nNo, you still got it wrong. The Status List contains ONE URL in the `aggregation_uri`, that one points to the object described in Section 9 which contains the array of URLs to the other Status List Tokens.\n\n> \n> You wrote:\n> \n> > There may be more than one \"latest\"  Status List Token, if the Status Issuer is chunking these Referenced Tokens into multiple Status Lists for scalability. Therefore, aggregation_uri may contain multiple URIs to multiple Status List Tokens. If one of them fails for whatever reason, still continue with the others.\n> \n> The above explanation is using the word \"chunking\":\n> \n> > \"if the Status Issuer is chunking these Referenced Tokens into multiple Status Lists for scalability\".\n> \n> I made a search on the term \"chunk\" and, in the draft, I found the following text:\n> \n> > The Status List Issuer may chunk its Referenced Tokens into multiple\n> > Status Lists to reduce the transmission size of an individual Status\n> > List Token.  This may be useful for setups where some entities\n> > operate in constrained environments, e.g. for mobile internet or\n> > embedded devices.  The Status List Issuer may chunk the Status List\n> > Tokens depending on the Referenced Token's expiry date to align their\n> > lifecycles and allow for easier retiring of Status List Tokens,\n> > however the Status Issuer must be aware of possible privacy risks due\n> > to correlations.\n> \n> \"chunk\" is a term I am not familiar with. Cambridge dictionary: a part of something, especially a large part. North American: divide (something) into chunks.\n> \n> This does not help me to understand why \"chunking\" is used and what is being \"chunked\".\n> \n> The Issuer can decide to place THE status of a Referenced Token in any SLT depending upon a criteria of its is own choice. It is is NOT the job of the Status List Issuer to decide: it is the job of the Issuer.\n> \n> This still does not explain why THE status of a Referenced Token should be placed into \"more than one SLT\". To make an analogy, when using CRLs, there is one and only one (base) CRL referenced in an X.509 PKC and if it fails (whatever the verb \"fail\" may mean) then there is no \"continuation\".\n> \n> Let us make things simple and do not attempt to make things over complicated.\n> \n> The text that is \"chunk-related\" should be removed.\n> \n> The text that is mentioning \"types of Referenced Tokens\" should also be removed.\n\nI'm ok to rename \"chunk\" into \"aggregate\".\n\nA Referenced Token's status is not put into multiple Status List Tokens, but many Referenced Token's statuses may be divided/spread/distributed across multiple Status List Tokens. Already today, some X509 CAs have more than one CRL, which is the same mechanism.\n\n",
          "createdAt": "2025-02-28T17:56:10Z",
          "updatedAt": "2025-02-28T17:58:03Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "It seems that we don't agree about the role of the Issuer and of the Status Issuer.\nIt is the Issuer that decides which SLT will be used for a given Referenced Token (i.e., it is not the Status Issuer).\n\nI still disagree with (or do not understadd) the following sentence: \n\n> The aggregation_uri contains a list of Status List Tokens - if fetching or validating one of them fails,\n> the others should still be processed\n\nIn addition, would you agree to remove the text that is mentioning \"types of Referenced Tokens\" ?",
          "createdAt": "2025-02-28T18:24:01Z",
          "updatedAt": "2025-02-28T18:24:01Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "How the Status List Tokens are organized is primarily a technical task, therefore the Status List Issuer's. As the recommendation is anyway to randomize, there is no need for the Issuer of Referenced Token to give further guidance.\n\nI also don't agree to remove the text types of Referenced Tokens. Easy example: A goverment issuer is issuing multiple Credentials/Referenced Token, but police officers are only interested to cache the status information for driving licenses. Therefore it may make sense to have multiple Status List Aggregations per Referenced Token.",
          "createdAt": "2025-03-01T14:41:15Z",
          "updatedAt": "2025-03-01T14:41:15Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I added further explanations for aggregation_uri and renamed chunking in #272 \nIf you still disagree after this, please bring it up to the mailing list or bring it up in the IETF Bangkok meeting",
          "createdAt": "2025-03-01T14:46:09Z",
          "updatedAt": "2025-03-01T14:46:09Z"
        }
      ]
    },
    {
      "number": 256,
      "id": "I_kwDOJZ2aqs6ogHLf",
      "title": "Section 13.1 should not be about \"Referenced Token Lifecycle\" but about \"Status List Token Lifecycle\"",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/256",
      "state": "CLOSED",
      "author": "Denisthemalice",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In version -06, the title of section 13.1 was: \"13.1. Token Lifecycle\"\n\nIn version -07, the title of section 13.1 has been changed into:  \"13.1. Referenced Token Lifecycle\"\n\nSince the first sentence of this section starts with \"The lifetime of a Status List Token (...)\" \nthis means that none of these two titles is correct. \n\nThis section should be renamed:\n\n> 13.1 Status List Token  Lifecycle \n\nThe content of section 13.1 does not contain enough guidance. The following guidance is insufficient:\n\n> The lifetime of a Status List Token depends on the lifetime of its Referenced Tokens.\n\nSince the exp (expiration time) claim in a Status List Token is OPTIONAL, it is hard to understand how this sentence can be used.\n\nThe three paragraphs do not provide sufficient information.\n\nProposed text replacement:\n\n> The Issuer and the Status issuer SHALL initially agree on the following set of parameters:\n> \n> -\tone or more absolute uris where the Status List Tokens will be made available by the Status issuer,\n> -\tthe number of bits that indicates the status of each Referenced Token,\n> -\tthe number of entries in a Status List,\n> -   the date when each Status List corresponding to a Status List Token will cease to be updated by the Issuer.\n> \n> The Issuer CAN communicate to the Status issuer the \"time to live\" which is the maximum amount of time, in seconds, that the Status List Token can be cached by a consumer before a fresh copy SHOULD be retrieved ('ttl' claim). If the \"time to live\" is communicated, then the Status issuer SHALL include it into each Status List Token.\n> \n> For every Status List, the Issuer CAN communicate to the Status issuer the time at which the Status List Token will be considered expired ('exp' claim). If the expiration time is communicated, then the Status issuer SHALL include it into each Status List Token.\n> \n> At any time, the Status issuer and the Issuer may agree to use a new set of parameters. For every Status List already agreed, the agreed parameters remain applicable until the date when the Status List will cease to be updated by the Issuer is reached.\n> \n> The Status issuer SHOULD issue and distribute Status List Tokens before the first Referenced Token is issued by the Issuer.\n> \n> The status of Referenced Tokens with close expiration times should be grouped together into Status Lists so the corresponding Status List Tokens can be no longer issued and distributed once all the Referenced Tokens referenced in it have expired.\n> \n\nThe text continues with :\n\n>    Referenced Tokens may be regularly re-issued to mitigate linkability\n>    of presentations to Relying Parties.  In this case, every re-issued\n>    Referenced Token MUST have a fresh Status List entry in order to\n>    prevent this becoming possible source of correlation.\n\nThe concept of Referenced Tokens that would be regularly re-issued means a same content with a different validity period.\n\nThe following sentence looks odd:\n\n   \n\n> Referenced Tokens may be regularly re-issued to mitigate linkability of presentations to Relying Parties.\n\nSince the content of the referenced Token is nearly the same, linkability can easily be achieved and a re-issuance of Referenced Tokens will be unable \"to mitigate linkability of presentations to Relying Parties\". \n\nThese two sentences should be removed.\n\nThe text ends-up with :\n\n>    Referenced Tokens may also be issued in batches, such that Holders\n>    can use individual tokens for every transaction.  In this case, every\n>    Referenced Token MUST have a dedicated Status List entry.  Revoking\n>    batch issued Referenced Tokens might reveal this correlation later\n>    on.\n\nThe right wording is not \"batch issuance of Referenced Tokens\" but \"one-time-use Referenced Tokens\"\nThe second sentence has nothing to do with a consequence of the previous sentence as it applies to every Referenced Token, whether or not it is a one-time-use Referenced Token.\n\nThese three sentences should be removed.\n\nProposed text replacement:\n\n> One-time-use Referenced Tokens may also be issued in batches, such that Holders can use a different Referenced Token for every transaction.  In this case, the status of every one-time-use Referenced Token SHOULD be handled in a different Status list so that a global revocation of these one-time-use Referenced Tokens cannot be used to reveal a correlation later on.\n",
      "createdAt": "2025-02-03T09:46:58Z",
      "updatedAt": "2025-02-14T14:18:16Z",
      "closedAt": "2025-02-14T14:18:16Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It is correct that Section 13.1 was falsely renamed and we will revert it.",
          "createdAt": "2025-02-07T14:46:48Z",
          "updatedAt": "2025-02-07T14:46:48Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We have added text [here](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-external-status-issuer) that already incorporated your ideas on what needs to be negotiated between  Referenced Token Issuer and Status Issuer. I would expect that you look at the latest changes and the referenced PRs before you re-raise the same points.",
          "createdAt": "2025-02-07T16:48:24Z",
          "updatedAt": "2025-02-07T16:48:24Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> In version -06, the title of section 13.1 was: \"13.1. Token Lifecycle\"\n> \n> In version -07, the title of section 13.1 has been changed into: \"13.1. Referenced Token Lifecycle\"\n> \n> Since the first sentence of this section starts with \"The lifetime of a Status List Token (...)\" this means that none of these two titles is correct.\n> \n> This section should be renamed:\n> \n> > 13.1 Status List Token  Lifecycle\n> \n> The content of section 13.1 does not contain enough guidance. The following guidance is insufficient:\n> \n> > The lifetime of a Status List Token depends on the lifetime of its Referenced Tokens.\n> \n> Since the exp (expiration time) claim in a Status List Token is OPTIONAL, it is hard to understand how this sentence can be used.\n> \n> The three paragraphs do not provide sufficient information.\n> \n> Proposed text replacement:\n> \n> > The Issuer and the Status issuer SHALL initially agree on the following set of parameters:\n> > \n> > * one or more absolute uris where the Status List Tokens will be made available by the Status issuer,\n> > * the number of bits that indicates the status of each Referenced Token,\n> > * the number of entries in a Status List,\n> > * the date when each Status List corresponding to a Status List Token will cease to be updated by the Issuer.\n> > \n> > The Issuer CAN communicate to the Status issuer the \"time to live\" which is the maximum amount of time, in seconds, that the Status List Token can be cached by a consumer before a fresh copy SHOULD be retrieved ('ttl' claim). If the \"time to live\" is communicated, then the Status issuer SHALL include it into each Status List Token.\n> > For every Status List, the Issuer CAN communicate to the Status issuer the time at which the Status List Token will be considered expired ('exp' claim). If the expiration time is communicated, then the Status issuer SHALL include it into each Status List Token.\n> > At any time, the Status issuer and the Issuer may agree to use a new set of parameters. For every Status List already agreed, the agreed parameters remain applicable until the date when the Status List will cease to be updated by the Issuer is reached.\n> > The Status issuer SHOULD issue and distribute Status List Tokens before the first Referenced Token is issued by the Issuer.\n> > The status of Referenced Tokens with close expiration times should be grouped together into Status Lists so the corresponding Status List Tokens can be no longer issued and distributed once all the Referenced Tokens referenced in it have expired.\n\nWe have added text [here](https://drafts.oauth.net/draft-ietf-oauth-status-list/draft-ietf-oauth-status-list.html#name-external-status-issuer) that already incorporated your ideas on what needs to be negotiated between Referenced Token Issuer and Status Issuer. I would expect that you look at the latest changes and the referenced PRs before you re-raise the same points.\n\n> \n> The text continues with :\n> \n> > Referenced Tokens may be regularly re-issued to mitigate linkability\n> > of presentations to Relying Parties.  In this case, every re-issued\n> > Referenced Token MUST have a fresh Status List entry in order to\n> > prevent this becoming possible source of correlation.\n> \n> The concept of Referenced Tokens that would be regularly re-issued means a same content with a different validity period.\n> \n> The following sentence looks odd:\n> \n> > Referenced Tokens may be regularly re-issued to mitigate linkability of presentations to Relying Parties.\n> \n> Since the content of the referenced Token is nearly the same, linkability can easily be achieved and a re-issuance of Referenced Tokens will be unable \"to mitigate linkability of presentations to Relying Parties\".\n> \n> These two sentences should be removed.\n\nThe issue of linkability has been extensively discussed within SD-JWT and the points are very clear. We don't need to and will not reiterate this here, as this draft is about Status Lists and not about the Referenced Tokens. The details of Referenced Tokens is out of scope for this draft. The section above clearly states that Status List is only able to achieve RP-RP unlinkability and there is nothing to add to this.\n\n> \n> The text ends-up with :\n> \n> > Referenced Tokens may also be issued in batches, such that Holders\n> > can use individual tokens for every transaction.  In this case, every\n> > Referenced Token MUST have a dedicated Status List entry.  Revoking\n> > batch issued Referenced Tokens might reveal this correlation later\n> > on.\n> \n> The right wording is not \"batch issuance of Referenced Tokens\" but \"one-time-use Referenced Tokens\" The second sentence has nothing to do with a consequence of the previous sentence as it applies to every Referenced Token, whether or not it is a one-time-use Referenced Token.\n> \n> These three sentences should be removed.\n> \n> Proposed text replacement:\n> \n> > One-time-use Referenced Tokens may also be issued in batches, such that Holders can use a different Referenced Token for every transaction.  In this case, the status of every one-time-use Referenced Token SHOULD be handled in a different Status list so that a global revocation of these one-time-use Referenced Tokens cannot be used to reveal a correlation later on.\n\nI don't think your suggestions provide much benefit but I tried to extract as much as possible in #261\n",
          "createdAt": "2025-02-07T17:00:58Z",
          "updatedAt": "2025-02-07T17:00:58Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "I am sorry but I can't see which changes have been done. \nI downloaded the Editor's copy but it is dated 7 February 2025.\n\nIf you were able to copy and paste below the text that has been changed, it would be possible for me to see it. \n\nhttps://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/261 is not understandable for me.",
          "createdAt": "2025-02-12T17:28:36Z",
          "updatedAt": "2025-02-12T17:28:36Z"
        }
      ]
    },
    {
      "number": 262,
      "id": "I_kwDOJZ2aqs6pSd1A",
      "title": "Status List Token in CWT Format / typ value",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/262",
      "state": "CLOSED",
      "author": "sschulz-t",
      "authorAssociation": "NONE",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "The draft says:\n```\n16 (type): REQUIRED. The type of the CWT MUST be statuslist+cwt as defined in \n[[RFC9596](https://www.rfc-editor.org/rfc/rfc9596)].\n```\n\nRFC9596 states:\n```\nThis specification adds the equivalent of the JOSE \"typ\" (type) header parameter to COSE so that the benefits of \nexplicit typing can be brought to COSE objects. The syntax of the COSE type header parameter value is the \nsame as the existing COSE content type header parameter, \nallowing both unsigned integers as registered in the \"CoAP Content-Formats\" registry\n[[CoAP.ContentFormats](https://www.rfc-editor.org/rfc/rfc9596#CoAP.ContentFormats)]\n and string media type values [[MediaTypes](https://www.rfc-editor.org/rfc/rfc9596#MediaTypes)] to be used.\n```\n\nWhich refers to https://www.iana.org/assignments/media-types but there is no statuslist content type registered (yet?).\n\nI was wondering about the value. Is statuslist+cwt the final value as to be registered with the iana? Or is this a work in progress?\nI was expecting typ to be in the form of <type-name>/<subtype-name>.\n\nThe lib I used for the implementation expects this format as well (see https://github.com/veraison/go-cose/issues/211)",
      "createdAt": "2025-02-08T18:10:17Z",
      "updatedAt": "2025-02-17T09:21:15Z",
      "closedAt": "2025-02-17T09:21:15Z",
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "That sounds like a mistake on our side - and weird inconsistency with how JOSE typ works.\n\n\"typ\" for the JOSE header is defines as:\n> To keep messages compact in common situations, it is RECOMMENDED that\n   producers omit an \"application/\" prefix of a media type value in a\n   \"typ\" Header Parameter when no other '/' appears in the media type\n   value.  A recipient using the media type value MUST treat it as if\n   \"application/\" were prepended to any \"typ\" value not containing a\n   '/'.  For instance, a \"typ\" value of \"example\" SHOULD be used to\n   represent the \"application/example\" media type, whereas the media\n   type \"application/example;part=\"1/2\"\" cannot be shortened to\n   \"example;part=\"1/2\"\".\n\nThe `statuslist+jwt` for the JOSE header is consistent with the media type we are registering (`application/statuslist+jwt`) and it appears we didn't notice the different behavior for CWT. We are requesting the registration of media type `application/statuslist+cwt` and from re-reading the CWT typ RFC, we should use the full one then for the COSE typ header parameter.",
          "createdAt": "2025-02-08T18:59:23Z",
          "updatedAt": "2025-02-09T07:43:36Z"
        }
      ]
    },
    {
      "number": 265,
      "id": "I_kwDOJZ2aqs6qGoQS",
      "title": "Recommendations for key resolution section",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/265",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "We should be more clear in the text that this section (11.3) is aimed at other specifications or profiles building on top of status list - not something that is recommended for the RP.\n\nOne sentence in the introduction should be fine.",
      "createdAt": "2025-02-14T14:26:30Z",
      "updatedAt": "2025-02-17T09:08:45Z",
      "closedAt": "2025-02-17T09:08:45Z",
      "comments": []
    },
    {
      "number": 267,
      "id": "I_kwDOJZ2aqs6qyWtk",
      "title": "CDDL for CBOR",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/267",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "c2bo"
      ],
      "labels": [],
      "body": "Rohan Mahy suggested on the mailing list:\n\n8. There should be a CDDL snippet for the CBOR. I would be happy to provide one once points 6 and 7 are addressed.",
      "createdAt": "2025-02-20T07:36:49Z",
      "updatedAt": "2025-03-03T07:52:45Z",
      "closedAt": "2025-03-03T07:52:44Z",
      "comments": []
    },
    {
      "number": 268,
      "id": "I_kwDOJZ2aqs6qyYfO",
      "title": "Clarify whether Status List refers to the uncompressed or compressed byte array",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/268",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [],
      "body": "Rohan Maly wrote on the mailing list:\n\n> 3. The document uses status_list (JSON object) and StatusList (CBOR map) to refer to the map, but Status List seems to be used to refer to both the compressed byte string (in Section 5) and the uncompressed byte array of status values (in Section 4 step 2, and Section 4.1 2nd sentence).\n\nOur response: This is correct, we will separate, the parts of section 4 that talk about the the uncompressed byte array into its own subsection and not use the wording Status List for this. Otherwise, through out the rest of the document, Status List refers to the compressed byte array as defined in the terminology.",
      "createdAt": "2025-02-20T07:40:41Z",
      "updatedAt": "2025-03-03T07:54:43Z",
      "closedAt": "2025-03-03T07:54:43Z",
      "comments": []
    },
    {
      "number": 271,
      "id": "I_kwDOJZ2aqs6sHgvm",
      "title": "Update Acknowledgments",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/271",
      "state": "OPEN",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I'd like to add the people that have contributed/provided feedback in the past few weeks/months. Please give a thumbs up / comment here if you are ok with being mentioned in the Acknowledgments section.\n\nI might have forgotten people - please comment if you think someone else should be added.\n\n@rohanmahy - done\n@steffenschwalm\n@Denisthemalice\n@sschulz-t\n@cre8 - done\n@mickrau - done\n@hannestschofenig - done\n@wbl\n@rifaat-shekh-yusef - done\n\n(also fix Giuseppe's spelling)",
      "createdAt": "2025-02-28T16:57:41Z",
      "updatedAt": "2025-03-03T18:34:16Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 6,
      "id": "PR_kwDOJZ2aqs5Q5MSP",
      "title": "fix broken links",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/6",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixing links to point to new org",
      "createdAt": "2023-05-19T13:40:13Z",
      "updatedAt": "2023-05-19T19:27:44Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "05f0630a52d47d8f9ca09629cf93c0eefe128016",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "fix/links",
      "headRefOid": "bffa41854f0ea7f669fa3940a776240ede0279bc",
      "closedAt": "2023-05-19T19:27:44Z",
      "mergedAt": "2023-05-19T19:27:44Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "8fd1578c37e3077c753f9f571e5d9d99e18ed7d8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5ViCuh",
          "commit": {
            "abbreviatedOid": "bffa418"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-19T19:27:39Z",
          "updatedAt": "2023-05-19T19:27:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOJZ2aqs5Q6BHV",
      "title": "Drafting Privacy and Security Considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/8",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "gathering some ideas on privacy and security considerations",
      "createdAt": "2023-05-19T16:23:43Z",
      "updatedAt": "2023-05-21T20:40:47Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "05f0630a52d47d8f9ca09629cf93c0eefe128016",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "main",
      "headRefOid": "d6e597910b4aeb1c7076738bf8b9abdde84f169d",
      "closedAt": "2023-05-21T20:40:47Z",
      "mergedAt": "2023-05-21T20:40:47Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "1de1ae351567921de967dd8d042725d7766b8245"
      },
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Looking good @paulbastian you should be able to run 'make fix-lint' locally to fix the whitespace issues",
          "createdAt": "2023-05-19T19:29:35Z",
          "updatedAt": "2023-05-19T19:29:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5Vh9ZL",
          "commit": {
            "abbreviatedOid": "9b46a5a"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Need to remove the trailing whitespaces for the markdown tooling to be happy",
          "createdAt": "2023-05-19T19:12:53Z",
          "updatedAt": "2023-05-19T19:13:53Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nTODO elaborate on issuers avoiding sequential usage of indices and status lists\r\n```",
              "createdAt": "2023-05-19T19:12:53Z",
              "updatedAt": "2023-05-19T19:13:53Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n## Herd Privacy\r\n```",
              "createdAt": "2023-05-19T19:13:02Z",
              "updatedAt": "2023-05-19T19:13:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOJZ2aqs5RKPbK",
      "title": "add privacy consideration on issuers mechanisms to obfuscate actual u\u2026",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/15",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026sage",
      "createdAt": "2023-05-23T15:34:58Z",
      "updatedAt": "2023-05-23T19:02:27Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1de1ae351567921de967dd8d042725d7766b8245",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "privacy",
      "headRefOid": "699ab02ce71124983448f1c97cf72ddb753b23ce",
      "closedAt": "2023-05-23T19:02:27Z",
      "mergedAt": "2023-05-23T19:02:27Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "911f25837d219ac5f6f0e9a7fc5fb0f6f49762e9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5V2psY",
          "commit": {
            "abbreviatedOid": "699ab02"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-23T19:02:19Z",
          "updatedAt": "2023-05-23T19:02:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOJZ2aqs5RKRQC",
      "title": "rename sts and sts_lst",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/16",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-23T15:40:16Z",
      "updatedAt": "2023-05-23T19:03:51Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1de1ae351567921de967dd8d042725d7766b8245",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "bikeshedding",
      "headRefOid": "6703e13f2240695b3cda07904aa5a934fa7ed161",
      "closedAt": "2023-05-23T19:03:51Z",
      "mergedAt": "2023-05-23T19:03:50Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "b90e150d6df05231298d446619924a1bfb5ad94e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5V2qND",
          "commit": {
            "abbreviatedOid": "6703e13"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-23T19:03:40Z",
          "updatedAt": "2023-05-23T19:03:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOJZ2aqs5RKpwh",
      "title": "draft for status types and defintiions",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/17",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-23T16:45:15Z",
      "updatedAt": "2023-06-15T07:06:51Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "97d29248904ebb29c899d094066f74d21aecfb04",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "types",
      "headRefOid": "64c70917a1f10b0576c2c8e525f5f914822d658a",
      "closedAt": "2023-06-15T07:06:51Z",
      "mergedAt": "2023-06-15T07:06:50Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "052948599ca836550d5469d89b7a434a494a3a5c"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Micha proposed to change REVOKED to INVALID, as it gives less intention whether this is a permanent state and the issuers could reflect a suspension also with a 1bit size status list as well",
          "createdAt": "2023-05-24T10:42:32Z",
          "updatedAt": "2023-05-24T10:42:32Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm in agreement with Kristina, the more I look at this the more I think we should have one possible enumeration of statuses rather than allowing every issuer to define their own, the question then becomes how big that set needs to be as it controls how many bits are allocated to each credential in the status list.",
          "createdAt": "2023-06-06T20:51:34Z",
          "updatedAt": "2023-06-06T20:51:34Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm fine with defining the first bit as valid/invalid. I think providing the option for additional bits offers benefits with acceptable tradeoffs",
          "createdAt": "2023-06-07T05:29:03Z",
          "updatedAt": "2023-06-07T05:29:03Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've made some changes, please recheck @tplooker @Sakurann ",
          "createdAt": "2023-06-07T12:18:45Z",
          "updatedAt": "2023-06-07T12:18:45Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "umm I thought we agreed to remove the concept of the \"typ\" attribute.. so no `revocation-list` and no `suspention-status-list`.\r\n",
          "createdAt": "2023-06-09T06:38:59Z",
          "updatedAt": "2023-06-09T06:38:59Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah that was captured here @Sakurann https://github.com/vcstuff/draft-looker-jwt-cwt-status-list/pull/20#issuecomment-1581385983",
          "createdAt": "2023-06-09T09:04:41Z",
          "updatedAt": "2023-06-09T09:04:41Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> umm I thought we agreed to remove the concept of the \"typ\" attribute.. so no `revocation-list` and no `suspention-status-list`.\r\n\r\nBut I assume the Status List Token will have a `typ` JOSE header to properly distinguish it from other JWTs, right?",
          "createdAt": "2023-06-09T10:43:55Z",
          "updatedAt": "2023-06-09T10:43:55Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > umm I thought we agreed to remove the concept of the \"typ\" attribute.. so no `revocation-list` and no `suspention-status-list`.\r\n> \r\n> But I assume the Status List Token will have a `typ` JOSE header to properly distinguish it from other JWTs, right?\r\n\r\nI approve, but moved to separate issue",
          "createdAt": "2023-06-12T15:25:44Z",
          "updatedAt": "2023-06-12T15:25:44Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tlodderstedt typo on my end. yes, JWT should be typed (`typ` claim present), the current spec also introduces a `type` body claim as far as I can see, which is what I am not in agreement with.",
          "createdAt": "2023-06-13T05:49:57Z",
          "updatedAt": "2023-06-13T05:49:57Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker I am confused. so the idea is to merge this PR and then remove the \"type\" JWT claim in PR #20?",
          "createdAt": "2023-06-13T05:50:33Z",
          "updatedAt": "2023-06-13T05:50:33Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "comment edited, I got confused here as well.\r\nThere is an issue open already as a task and I would like to not blow up the PRs too much",
          "createdAt": "2023-06-13T05:52:15Z",
          "updatedAt": "2023-06-13T09:46:58Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker ready for merge",
          "createdAt": "2023-06-14T21:45:54Z",
          "updatedAt": "2023-06-14T21:45:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5XVFf1",
          "commit": {
            "abbreviatedOid": "562b19e"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-06T12:58:26Z",
          "updatedAt": "2023-06-06T12:58:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYOI3",
          "commit": {
            "abbreviatedOid": "562b19e"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "sorry, I am not onboard with giving the issuers the complete freedom to define their own status values. for the interop purposes, the valid and invalid values MUST always be the same. ie 0 is always valid and 1 is always invalid. (or vice versa - that I do not care). so when the bit size is bigger than 2, the first bite is always valid/invalid and from the second bit, it can be suspended, etc.",
          "createdAt": "2023-06-06T19:53:34Z",
          "updatedAt": "2023-06-06T19:53:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5V20ho",
          "commit": {
            "abbreviatedOid": "d8d7d57"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-23T19:33:12Z",
          "updatedAt": "2023-06-12T15:22:00Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Should we also call this VALID?",
              "createdAt": "2023-05-23T19:33:13Z",
              "updatedAt": "2023-06-12T15:22:00Z"
            },
            {
              "originalPosition": 67,
              "body": "Imho, we should change this to 0 -> valid, 1-> revoked, 2 -> suspended. That way it is a clear extension to the 1bit one",
              "createdAt": "2023-05-23T19:34:22Z",
              "updatedAt": "2023-06-12T15:22:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YFskQ",
          "commit": {
            "abbreviatedOid": "9d7ae60"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T19:09:08Z",
          "updatedAt": "2023-06-13T19:09:08Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n2. The claim value object MUST contain an \"idx\" (index) attribute with a numeric based value that represents the index to check for status information in the status list for the current JWT. The value of this attribute MUST be a non-negative number, containing a value of zero or greater. Refer to xx for details on the validation procedure.\r\n```",
              "createdAt": "2023-06-13T19:09:08Z",
              "updatedAt": "2023-06-13T19:09:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YFs5s",
          "commit": {
            "abbreviatedOid": "9d7ae60"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I am a little confused with calling \"VALID\", \"INVALID\" Status List `type`, but agreed this should be merged",
          "createdAt": "2023-06-13T19:10:07Z",
          "updatedAt": "2023-06-13T19:10:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YFtDI",
          "commit": {
            "abbreviatedOid": "9d7ae60"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "One minor typo",
          "createdAt": "2023-06-13T19:10:37Z",
          "updatedAt": "2023-06-13T19:10:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOJZ2aqs5RVzIX",
      "title": "First iteration for the encoding ",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/18",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Questions for the encoding:\r\n- base64 vs url-safe base64\r\n- bitwise encoding right now is least significant bit to most significant bit\r\n\r\nThe part describing the bit-encoding still needs be rewritten\r\n\r\nIn general:\r\nI searched a bit for better ways to encode/compress but in terms of simplicity and support for different programming languages, it seems some form of byte array and gZIP seem to be a pretty decent pick.",
      "createdAt": "2023-05-25T12:34:58Z",
      "updatedAt": "2023-06-15T13:43:30Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "052948599ca836550d5469d89b7a434a494a3a5c",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "feature/encoding",
      "headRefOid": "a6ef3d720e3fd4c299d06cfa6c9dd293b2bb4011",
      "closedAt": "2023-06-15T13:43:29Z",
      "mergedAt": "2023-06-15T13:43:29Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've made a first implementation in Kotlin today.\r\nTo me, it feels very natural to count Byte indexes up from 0 to size(whether this is left to right or right to left feels a little philosophical) and Bit indexes from right to left.",
          "createdAt": "2023-06-13T15:11:18Z",
          "updatedAt": "2023-06-13T15:11:18Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Imho we need another iteration on the description of the bit encoding, most likely with some form of ASCII art. I would prefer to do that in another PR- what do you think?",
          "createdAt": "2023-06-15T11:48:26Z",
          "updatedAt": "2023-06-15T11:48:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5WJmCj",
          "commit": {
            "abbreviatedOid": "13e1d2f"
          },
          "author": "MichScha",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-26T07:12:24Z",
          "updatedAt": "2023-05-26T07:12:25Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Better understanding by adding the possible states of a status with number of bits\r\nExample of a byte representing 4  statuses (2 bit possible values each) with indices 0,1,2,3:",
              "createdAt": "2023-05-26T07:12:24Z",
              "updatedAt": "2023-05-26T07:12:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WiXZM",
          "commit": {
            "abbreviatedOid": "453c427"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T21:30:25Z",
          "updatedAt": "2023-05-30T21:30:25Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "If #20 is merged ahead will need to update this PR with the required language alignment e.g credential -> subject token",
              "createdAt": "2023-05-30T21:30:25Z",
              "updatedAt": "2023-05-30T21:30:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WwLKL",
          "commit": {
            "abbreviatedOid": "453c427"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-01T13:22:49Z",
          "updatedAt": "2023-06-01T13:22:50Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nEach status of a credential MUST be represented with a bit size of 1,2,4, or 8. Therefore up to 2,4,16, or 256 statuses for a credential depending on the bit-size are possible. This limitation was introduced to reduce the amount of bit manipulation necessary to one byte for every operation and thus keeping implementations simpler and less error prone.\r\n```",
              "createdAt": "2023-06-01T13:22:49Z",
              "updatedAt": "2023-06-01T13:22:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YMdhX",
          "commit": {
            "abbreviatedOid": "7bdf31d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-14T14:48:32Z",
          "updatedAt": "2023-06-14T15:59:23Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nEach status of a Referenced Token MUST be represented with a bit size of 1,2,4, or 8. Therefore up to 2,4,16, or 256 statuses for a Referenced Token, depending on the bit-size, are possible. This limitation is intended to limit bit manipulation necessary to a single byte for every operation and thus keeping implementations simpler and less error prone.\r\n```",
              "createdAt": "2023-06-14T14:48:32Z",
              "updatedAt": "2023-06-14T15:59:23Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n1. The overall status list is encoded as a byte array. Depending on the \"bit-size\" each byte corresponds to 8/(#bit-size) statuses (8,4,2, or 1). The status of each Referenced Token is identified using an index that maps to a specific bits within the byte array. The index starts counting at 0 and ends with \"size\" - 1(being the last valid entry). The bits within an array are counted from least significant bit \"0\" to the most significant bit (\"7\"). All bits of the byte array at a particular index are set to a status value.\r\n```",
              "createdAt": "2023-06-14T15:55:35Z",
              "updatedAt": "2023-06-14T15:59:23Z"
            },
            {
              "originalPosition": 23,
              "body": "I would favor Base64 instead of Base64 URL as I think library support should be better and we do not intend to send the byte array over an URL",
              "createdAt": "2023-06-14T15:56:23Z",
              "updatedAt": "2023-06-14T15:59:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YOTZl",
          "commit": {
            "abbreviatedOid": "7bdf31d"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T19:18:59Z",
          "updatedAt": "2023-06-14T19:19:00Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "That was one of the points I wasn't 100% sure about. Url-safe encoding is a tiny bit smaller (= padding) but so far i don't think we would ever convey the status list in some form of URL. \r\nOverall I agree, let's start with base64 for better support and figure out if there are reasons we are not aware of yet to switch to another representaion.",
              "createdAt": "2023-06-14T19:18:59Z",
              "updatedAt": "2023-06-14T21:41:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YPEg5",
          "commit": {
            "abbreviatedOid": "34d588a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T21:38:21Z",
          "updatedAt": "2023-06-14T21:38:21Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "this is missing the encoded list",
              "createdAt": "2023-06-14T21:38:21Z",
              "updatedAt": "2023-06-14T21:38:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YPE6m",
          "commit": {
            "abbreviatedOid": "7bdf31d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T21:40:02Z",
          "updatedAt": "2023-06-14T21:40:02Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I refrain from my point after speaking with Micha Kraus. He mentioned that JWT is using Ba64URL for encoding anyway, as the Token uses JWT as a wrapper, it makes sense to use the same encoding!",
              "createdAt": "2023-06-14T21:40:02Z",
              "updatedAt": "2023-06-14T21:40:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YTNWr",
          "commit": {
            "abbreviatedOid": "453c427"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T12:17:19Z",
          "updatedAt": "2023-06-15T12:17:19Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Updated with referenced token by paul",
              "createdAt": "2023-06-15T12:17:19Z",
              "updatedAt": "2023-06-15T12:17:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YTNyn",
          "commit": {
            "abbreviatedOid": "34d588a"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T12:18:22Z",
          "updatedAt": "2023-06-15T12:18:23Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "The encoded list example was added in the last commit",
              "createdAt": "2023-06-15T12:18:22Z",
              "updatedAt": "2023-06-15T12:18:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YTr7e",
          "commit": {
            "abbreviatedOid": "6ac60aa"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-15T13:19:16Z",
          "updatedAt": "2023-06-15T13:19:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOJZ2aqs5RscE6",
      "title": "add introduction text, rename to Referenced Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/20",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-30T14:43:32Z",
      "updatedAt": "2023-06-14T20:06:49Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "b90e150d6df05231298d446619924a1bfb5ad94e",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "introduction",
      "headRefOid": "ee8111fea6d2ac617a68cc2c0497a309c8944bd6",
      "closedAt": "2023-06-14T20:06:49Z",
      "mergedAt": "2023-06-14T20:06:49Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "97d29248904ebb29c899d094066f74d21aecfb04"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker Whats' failing on the build here?",
          "createdAt": "2023-05-30T14:59:47Z",
          "updatedAt": "2023-05-30T14:59:47Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "`RFC-XXXX` breaks the build\r\nAll RFC references are resolved interally and linked",
          "createdAt": "2023-05-30T18:54:49Z",
          "updatedAt": "2023-05-30T18:54:49Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am sorry, I am completely lost with the idea of using a term subject token to say digital credential/verifiable credential. and the definition of a subject token does not really give a rationale why it is called subject token and only talks about relationship with the status list...\r\n\r\nThere are possible applications of this draft that go beyond just verifiable credentials, hence we do not want to use that term in this draft IMO. \"Token\" is already a term broadly used in this space e.g CWT and JWT both use it, \"subject\" was used in this context because it is also a term used heavily w.r.t tokens, feel free to suggest alternative terminology but at this point I think subject token is the best I've heard suggested.",
          "createdAt": "2023-06-06T20:54:30Z",
          "updatedAt": "2023-06-06T20:54:30Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "can we simply use JWT/CWT instead of creating any kind of abstraction term like `subject token`? One person i asked for feedback associated `subject token` with a token used to communicate a subject of an email.",
          "createdAt": "2023-06-06T21:04:54Z",
          "updatedAt": "2023-06-06T21:04:54Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "or, bottomline, please stick to `token`. `subject token` is very confusing.",
          "createdAt": "2023-06-07T00:04:14Z",
          "updatedAt": "2023-06-07T00:04:14Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm with Tobias on this and prefer introducing a new term here. Otherwise things get really weird because the status list is also a JWT/CWT and a token. We need something that clearly separated the status list token and the other token. I think subject token is the best we have. Also subject is leaving towards what we have as credentialSubject in the VC world, so the term subject is kind of established in this context",
          "createdAt": "2023-06-07T05:24:13Z",
          "updatedAt": "2023-06-07T05:25:46Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am really strongly against \"Subject Token\". Not only because it is not intuitive (I have been asking various people in this space and no one would associate what it trying to be conveyed), but we should not be introducing a new term in this already confusing ecosystem. \n\nMoreover, this status list mechanism can be used with a JWT/CWT that does not necessarily contain a subject (like SD-JWT-VC), so using a term subject because it is widely used is not a sufficient reason.\n\nKeep referring to it as a token, because this draft should not be opinionated about what is in the JWT/CWT whose status is being expressed should be fine, if a \"status list JWT/CWT\" is always referred as such. there are multiple occurrences where \"status list JWT\" is referred to simply as a JWT which should be fixed IMO.",
          "createdAt": "2023-06-07T05:53:43Z",
          "updatedAt": "2023-06-07T05:54:40Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "We need clear terminology for:\r\n- the status list token (i think this one fits pretty well)\r\n- the credential / token that is bound to the status list\r\n\r\nI do believe only calling it token will cause confusion with the status list token. We can also call it something else like credential if we do a proper introduction of the term in the beginning?",
          "createdAt": "2023-06-07T13:50:49Z",
          "updatedAt": "2023-06-07T13:50:49Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Why call \"status list token\" and not \"status list JWT/CWT\"?",
          "createdAt": "2023-06-07T14:00:06Z",
          "updatedAt": "2023-06-07T14:00:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "agreed on call:\r\nrename Status List to Status List Token\r\nintroduce Status List for the actual bitarray\r\nrename Subject Token to Referenced Token\r\nremove Status List Provider for now and introduce it later if neccessary",
          "createdAt": "2023-06-07T19:27:12Z",
          "updatedAt": "2023-06-07T19:27:12Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "btw sd-jwt vc spec mentions status provider :)",
          "createdAt": "2023-06-09T06:55:07Z",
          "updatedAt": "2023-06-09T06:55:07Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tlodderstedt @Sakurann can you approve this PR?",
          "createdAt": "2023-06-12T13:09:31Z",
          "updatedAt": "2023-06-12T13:09:31Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi, thinking more about this, status list Token is being referenced in the token-whose-name-we-are-trying-to-find, so it's the status list token that is actually a \"referenced token\". Can we call token-whose-name-we-are-trying-to-find \"a Token with reference\"?",
          "createdAt": "2023-06-13T06:04:16Z",
          "updatedAt": "2023-06-13T06:04:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, I agree and had the same thoughts when I changed the PR. I assume Referencing Token could be better. But let's accept this PR and move discussion to an issue instead...",
          "createdAt": "2023-06-13T06:06:13Z",
          "updatedAt": "2023-06-13T06:06:13Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Multiple approvals and discussions on editors calls, merging",
          "createdAt": "2023-06-14T20:06:46Z",
          "updatedAt": "2023-06-14T20:06:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5WiWIb",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T21:26:33Z",
          "updatedAt": "2023-05-30T21:26:34Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a status list in JWT and CWT representation that describes the individual statuses of multiple subject tokens. The statuses of each subject token are conveyed via a bit array in the status list. Each subject token during issuance is allocated an index which represents a position within this bit array and the value of the bit(s) at this position correspond to the subject tokens status. The document also defines how an issuer of a subject token in JWT or CTW representation references a status list. Status lists may be composed for expressing a range of status types, the document defines two configurations for the most common use cases as well as an extensibility mechanism for custom status list types. The status list may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Subject Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-05-30T21:26:33Z",
              "updatedAt": "2023-05-30T21:26:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WiWe2",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T21:27:18Z",
          "updatedAt": "2023-05-30T21:27:18Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Bit of a suggested revision to the text here.",
              "createdAt": "2023-05-30T21:27:18Z",
              "updatedAt": "2023-05-30T21:27:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WiW6s",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T21:28:41Z",
          "updatedAt": "2023-05-30T21:28:42Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Not super convinced of this, I think this is pending resolution around whether we agree if the status list provider != issuer otherwise I think issuer suffices?",
              "createdAt": "2023-05-30T21:28:41Z",
              "updatedAt": "2023-05-30T21:28:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WlbBH",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-31T09:40:34Z",
          "updatedAt": "2023-05-31T09:40:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "@tplooker Looking at other RFCs like JWT, I see that things that are mentioned in the terminology are capitalized throughout the text. Why does this not apply here?",
              "createdAt": "2023-05-31T09:40:35Z",
              "updatedAt": "2023-05-31T09:40:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5Wvvvx",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-01T12:30:37Z",
          "updatedAt": "2023-06-01T12:30:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5Wv_oH",
          "commit": {
            "abbreviatedOid": "31dd746"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-01T13:01:19Z",
          "updatedAt": "2023-06-01T13:01:20Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "This relates to #10 and is in line with the issuer-holder-verifier model described in the SD-JWT spec. Outsourcing the status list hosting to another party has potential privacy benefits so I would definitly include the option",
              "createdAt": "2023-06-01T13:01:20Z",
              "updatedAt": "2023-06-01T13:02:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5WweOy",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-01T13:56:54Z",
          "updatedAt": "2023-06-01T13:56:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYOlP",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T19:54:54Z",
          "updatedAt": "2023-06-06T19:54:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nJSON Web Tokens (JWTs) {{RFC7519}} and CBOR Web Tokens (CWTs) {{RFC8392}} as secure token formats, have vast possible applications. Some of these applications can involve issuing a token whereby certain semantics about the token can change over time which are important to be able to communicate to relying parties in an interoperable manner, such as whether the token is considered invalidated or suspended by its issuer.\r\n```\r\n\r\nto match with the rest of terminology",
              "createdAt": "2023-06-06T19:54:54Z",
              "updatedAt": "2023-06-06T19:54:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYO3c",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T19:55:37Z",
          "updatedAt": "2023-06-06T19:55:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a status list in JWT and CWT representations that describes the individual statuses of multiple subject tokens. The statuses of each subject token are conveyed via a bit array in the status list. Each subject token during issuance is allocated an index which represents a position within this bit array and the value of the bit(s) at this position correspond to the subject tokens status. The document also defines how an issuer of a subject token in JWT or CTW representation references a status list. Status lists may be composed for expressing a range of status types, the document defines two configurations for the most common use cases as well as an extensibility mechanism for custom status list types. The status list may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Subject Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-06-06T19:55:37Z",
              "updatedAt": "2023-06-06T19:55:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYPv9",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "I am sorry, I am completely lost with the idea of using a term `subject token` to say `digital credential/verifiable credential`. and the definition of a `subject token` does not really give a rationale why it is called `subject token` and only talks about relationship with the status list...",
          "createdAt": "2023-06-06T19:58:16Z",
          "updatedAt": "2023-06-06T19:58:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYuYw",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T20:55:37Z",
          "updatedAt": "2023-06-06T20:55:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a status list in JWT and CWT representation that describes the individual statuses of multiple subject tokens. The statuses of each subject token are conveyed via a bit array in the status list. Each subject token during issuance is allocated an index which represents a position within this bit array and the value of the bit(s) at this position correspond to the subject tokens status. The document also defines how an issuer of a subject token in JWT or CWT representation references a status list. Status lists may be composed for expressing a range of status types, the document defines two configurations for the most common use cases as well as an extensibility mechanism for custom status list types. The status list may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Subject Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-06-06T20:55:37Z",
              "updatedAt": "2023-06-06T20:55:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5XYvAg",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-06T20:57:03Z",
          "updatedAt": "2023-06-06T20:57:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XgVxY",
          "commit": {
            "abbreviatedOid": "5644ac8"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "I understand the concerns of @Sakurann. \r\n\r\nStatusList2021 just uses the term StatusList2021Credential. I think we could use the term status list token. status list JWT/CWT would be fine as well. ",
          "createdAt": "2023-06-07T16:10:54Z",
          "updatedAt": "2023-06-07T16:10:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5XwT1l",
          "commit": {
            "abbreviatedOid": "310a60a"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-09T14:36:24Z",
          "updatedAt": "2023-06-12T15:05:08Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a Status List in JWT and CWT representation that describes the individual statuses of multiple Referenced Tokens. The statuses of all Referenced Tokens are conveyed via a bit array in the Status List. Each Referenced Token during issuance is allocated an index which represents a position within this bit array and the value of the bit(s) at this position correspond to the Referenced Token's status. The document also defines how an issuer of a Referenced Token in JWT or CTW representation references a Status List Token. Status Lists may be composed for expressing a range of Status Types, the document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types. The Status List Token may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Referenced Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-06-09T14:36:25Z",
              "updatedAt": "2023-06-12T15:05:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5X7UO8",
          "commit": {
            "abbreviatedOid": "95bb340"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-12T15:07:12Z",
          "updatedAt": "2023-06-12T15:07:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YBG0D",
          "commit": {
            "abbreviatedOid": "95bb340"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-13T09:24:20Z",
          "updatedAt": "2023-06-13T09:27:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis document defines a Status List in JWT and CWT representations that describes the individual statuses of multiple Referenced Tokens. The statuses of all Referenced Tokens are conveyed via a bit array in the Status List. Each Referenced Token is allocated an index during issuance which represents a position within this bit array and the value of the bit(s) at this position correspond to the Referenced Token's status. The document also defines how an issuer of a Referenced Token in JWT or CWT representation references a Status List Token. Status Lists may be composed for expressing a range of Status Types, the document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types. The Status List Token may be used by an issuer in the Issuer-Holder-Verifier model, as described in (XXX) to express the status of verifiable credentials (Referenced Tokens) issued by an issuer.\r\n```",
              "createdAt": "2023-06-13T09:24:20Z",
              "updatedAt": "2023-06-13T09:27:35Z"
            },
            {
              "originalPosition": 121,
              "body": "Can we keep TODOs as issues, pls.? It makes it easier to grasp the TODOs for a certain draft. ",
              "createdAt": "2023-06-13T09:27:28Z",
              "updatedAt": "2023-06-13T09:27:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YBLth",
          "commit": {
            "abbreviatedOid": "95bb340"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T09:33:58Z",
          "updatedAt": "2023-06-13T09:33:58Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "these TODOs are partly resolved in other PRs and I would like to not change them in this PR as this resulsts to even more merge conflicts",
              "createdAt": "2023-06-13T09:33:58Z",
              "updatedAt": "2023-06-13T09:33:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YByAd",
          "commit": {
            "abbreviatedOid": "ee8111f"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "ok. Then please migrate the TODOs afterwards. ",
          "createdAt": "2023-06-13T10:51:51Z",
          "updatedAt": "2023-06-13T10:51:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YFw-P",
          "commit": {
            "abbreviatedOid": "ee8111f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "opened issue #26 to continue the terminology discussion",
          "createdAt": "2023-06-13T19:22:56Z",
          "updatedAt": "2023-06-13T19:22:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOJZ2aqs5SaDaW",
      "title": "Adding to privacy considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/22",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-07T12:17:35Z",
      "updatedAt": "2023-09-20T20:49:50Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "fa0432bb81cc5672625d8f9edfa2706bffab9179",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "privacy",
      "headRefOid": "a1fd5307d96a83685df7bb8dd06671ac72a2840f",
      "closedAt": "2023-09-20T20:49:50Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 23,
      "id": "PR_kwDOJZ2aqs5SakUh",
      "title": "first iteration on authorized access",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/23",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-07T13:30:10Z",
      "updatedAt": "2023-09-01T07:56:26Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "fa0432bb81cc5672625d8f9edfa2706bffab9179",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "authorization-statuslist-endpoint",
      "headRefOid": "2a202ef4945029e5a0c076e7628201eb7a3f093c",
      "closedAt": "2023-09-01T07:56:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "How does the described approach of the holder fetching the status list token compare to the validity credentials as presented by Andreas Freitag?",
          "createdAt": "2023-06-13T16:16:42Z",
          "updatedAt": "2023-06-13T16:16:42Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Imho validity credential would be very similar if we only go the route of the holder presenting the status list - the only benefit would be that we would not need to introduce another standard to check and could re-use the already known mechanism.\r\n\r\nThe main benefit for this approach would be that we could use a hybrid mode: the holder can carry the status lust with him (retrieved using holder authentication) and provide it for offline cases if necessary. For other cases, the verifier can get and check the status list themselves (using verifier authentication).",
          "createdAt": "2023-06-13T17:22:03Z",
          "updatedAt": "2023-06-13T17:22:03Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Closing for now, will revisit the topic later",
          "createdAt": "2023-09-01T07:56:25Z",
          "updatedAt": "2023-09-01T07:56:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YEhyz",
          "commit": {
            "abbreviatedOid": "2a202ef"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T16:11:56Z",
          "updatedAt": "2023-06-13T16:11:56Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I would leave these two points out, as it is a repetition of what is/will be in the privacy section",
              "createdAt": "2023-06-13T16:11:56Z",
              "updatedAt": "2023-06-13T16:11:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5e0lp-",
          "commit": {
            "abbreviatedOid": "2a202ef"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-23T06:31:25Z",
          "updatedAt": "2023-08-23T06:31:26Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "this allows tracking who excessively etches the status list",
              "createdAt": "2023-08-23T06:31:25Z",
              "updatedAt": "2023-08-23T06:31:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOJZ2aqs5THFAQ",
      "title": "ascii art for bit and byte ordering",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/29",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-15T15:32:34Z",
      "updatedAt": "2023-06-17T06:21:32Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "encoding",
      "headRefOid": "57d18cf2655df30ca37cdbc0be729d1d51945254",
      "closedAt": "2023-06-17T06:21:31Z",
      "mergedAt": "2023-06-17T06:21:31Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "1ffaa4afd1bfe26121499417283e27434f7c7d9e"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "after writing this I figured out changing the byte ordering, i.e. starting with byte 0 on the left might be a little more intuitive?",
          "createdAt": "2023-06-15T15:33:17Z",
          "updatedAt": "2023-06-15T15:33:17Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "> after writing this I figured out changing the byte ordering, i.e. starting with byte 0 on the left might be a little more intuitive?\r\n\r\nYeah with fresh eyes I definately think that would be better.",
          "createdAt": "2023-06-16T03:07:09Z",
          "updatedAt": "2023-06-16T03:07:09Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "reversed byte order and added the index to the ascii art",
          "createdAt": "2023-06-16T08:08:42Z",
          "updatedAt": "2023-06-16T08:08:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YaCUp",
          "commit": {
            "abbreviatedOid": "4fb63b0"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "More compact version",
          "createdAt": "2023-06-16T10:59:26Z",
          "updatedAt": "2023-06-16T11:03:04Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\n~~~ ascii-art\r\n\r\nbyte             0                  1               2\r\nbit       7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0    7\r\n         +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+...\r\nvalues   |1|0|1|1|1|0|0|1|  |1|0|1|0|0|0|1|1|  |0|...\r\n         +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+...\r\nindex     7 6 5 4 3 2 1 0   15   ...  10 9 8   23\r\n         \\_______________/  \\_______________/\r\n                0xB9               0xA3\r\n~~~\r\n~~~\r\n```",
              "createdAt": "2023-06-16T10:59:26Z",
              "updatedAt": "2023-06-16T11:04:29Z"
            },
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nbyte             0                  1                  2\r\nbit       7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0    7 6 5 4 3 2 1 0\r\n         +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+\r\nvalues   |1|1|0|0|1|0|0|1|  |0|1|0|0|0|1|0|0|  |1|1|1|1|1|0|0|1|\r\n         +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+  +-+-+-+-+-+-+-+-+\r\n          \\ / \\ / \\ / \\ /    \\ / \\ / \\ / \\ /    \\ / \\ / \\ / \\ /\r\nstatus     3   0   2   1      1   0   1   0      3   3   2   1\r\nindex      3   2   1   0      7   6   5   4      11  10  9   8\r\n           \\___________/      \\___________/      \\___________/\r\n                0xC9               0x44               0xF9\r\n```",
              "createdAt": "2023-06-16T11:01:50Z",
              "updatedAt": "2023-06-16T11:03:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YaSD5",
          "commit": {
            "abbreviatedOid": "57d18cf"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T11:44:15Z",
          "updatedAt": "2023-06-16T11:44:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YfsMi",
          "commit": {
            "abbreviatedOid": "57d18cf"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T06:21:22Z",
          "updatedAt": "2023-06-17T06:21:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 30,
      "id": "PR_kwDOJZ2aqs5TK1Fg",
      "title": "adding a subject claim for Status List Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/30",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-16T09:02:46Z",
      "updatedAt": "2023-06-17T06:20:15Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "sub",
      "headRefOid": "387f015643c2fd682500a23cd893c75582d1cee8",
      "closedAt": "2023-06-17T06:20:15Z",
      "mergedAt": "2023-06-17T06:20:15Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "560f847ca34ebec674ceccb961638786cfeb970f"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This solves #28 ",
          "createdAt": "2023-06-16T09:16:23Z",
          "updatedAt": "2023-06-16T09:16:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YaISg",
          "commit": {
            "abbreviatedOid": "a4c313f"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:17:45Z",
          "updatedAt": "2023-06-16T11:17:46Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n2. The JWT MUST contain a \"sub\" (subject) claim that contains an unique string based identifier for that Referenced Token. The value MUST be equal to that of the \"uri\" claim contained in the \"status\" claim of the Referenced Token.\r\n```",
              "createdAt": "2023-06-16T11:17:45Z",
              "updatedAt": "2023-06-16T11:18:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YaY3Z",
          "commit": {
            "abbreviatedOid": "387f015"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T11:50:35Z",
          "updatedAt": "2023-06-16T11:50:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5Yfr1D",
          "commit": {
            "abbreviatedOid": "387f015"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T06:20:09Z",
          "updatedAt": "2023-06-17T06:20:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDOJZ2aqs5TK5Xv",
      "title": "clarify bit and bit_size wording",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/31",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-16T09:15:29Z",
      "updatedAt": "2023-06-16T21:16:47Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "minor_fixes",
      "headRefOid": "248135ca2cc7870e25d5384cf0a416cb04f71003",
      "closedAt": "2023-06-16T21:16:46Z",
      "mergedAt": "2023-06-16T21:16:46Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "a56771322117372d4649d3d2064557854f359cad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YaGQ0",
          "commit": {
            "abbreviatedOid": "6f14f56"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:11:18Z",
          "updatedAt": "2023-06-16T11:11:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n2. The claim value object MUST contain a \"bits\" (bit size) attribute with an numeric based value that represents the number of bits per Referenced Token in the Status List (\"lst\") of the Status List JWT. The allowed values for \"bits\" are 1,2,4 and 8.\r\n```",
              "createdAt": "2023-06-16T11:11:19Z",
              "updatedAt": "2023-06-16T11:11:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5YaZOY",
          "commit": {
            "abbreviatedOid": "248135c"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T11:50:55Z",
          "updatedAt": "2023-06-16T11:50:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YelDx",
          "commit": {
            "abbreviatedOid": "248135c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T21:16:40Z",
          "updatedAt": "2023-06-16T21:16:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOJZ2aqs5TLCvr",
      "title": "add as author",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/32",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-16T09:46:21Z",
      "updatedAt": "2023-06-16T21:16:07Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "paulbastian/draft-looker-jwt-cwt-status-list",
      "headRefName": "author",
      "headRefOid": "ad5dfad3ed42c9c3434349b101f07aca0891e045",
      "closedAt": "2023-06-16T21:16:07Z",
      "mergedAt": "2023-06-16T21:16:07Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "e59711c86c82341c3431ba5ed74df58533f4eaad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5Yekw8",
          "commit": {
            "abbreviatedOid": "ad5dfad"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T21:16:02Z",
          "updatedAt": "2023-06-16T21:16:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOJZ2aqs5TNIY8",
      "title": "some spelling fixes",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/33",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixing some spelling errors",
      "createdAt": "2023-06-16T15:53:00Z",
      "updatedAt": "2023-06-16T21:15:52Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "79b1b53200f5f4ca9cc3949ddfba28d7010df774",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "spelling",
      "headRefOid": "257d3878d8fe8e2edf3664d50d0f3a7ea1b223c7",
      "closedAt": "2023-06-16T21:15:51Z",
      "mergedAt": "2023-06-16T21:15:51Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "6411d628b820a190f79238bedc85bee6f74245e6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YcYHJ",
          "commit": {
            "abbreviatedOid": "257d387"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T16:08:09Z",
          "updatedAt": "2023-06-16T16:08:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YekSC",
          "commit": {
            "abbreviatedOid": "257d387"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T21:15:26Z",
          "updatedAt": "2023-06-16T21:15:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOJZ2aqs5TP2FM",
      "title": "fix examples",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/34",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "- fixes the examples to use constant timestamps in gzip encoding\r\n- minor changes/fixes to the ascii art / code blocks",
      "createdAt": "2023-06-17T07:47:54Z",
      "updatedAt": "2023-06-18T20:50:50Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1ffaa4afd1bfe26121499417283e27434f7c7d9e",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "jwt-examples",
      "headRefOid": "1f6cef985060b5beafde96dc7367e86dd333a339",
      "closedAt": "2023-06-18T20:50:50Z",
      "mergedAt": "2023-06-18T20:50:50Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "d987ce753b8b1644d603650707d537c80bab089d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YfvSA",
          "commit": {
            "abbreviatedOid": "1f6cef9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T07:55:18Z",
          "updatedAt": "2023-06-17T07:55:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YhjAq",
          "commit": {
            "abbreviatedOid": "1f6cef9"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-18T20:50:44Z",
          "updatedAt": "2023-06-18T20:50:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOJZ2aqs5TgbEl",
      "title": "fix reference token example",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/36",
      "state": "MERGED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #35\r\n\r\n## \ud83d\udcd1 Description\r\n\r\nSimple fix to example",
      "createdAt": "2023-06-21T06:13:35Z",
      "updatedAt": "2023-06-21T21:02:56Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "fa0432bb81cc5672625d8f9edfa2706bffab9179",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "tl/fix-example",
      "headRefOid": "d9c847b04806bf201c3333a79fa3a7a2ef603a27",
      "closedAt": "2023-06-21T06:20:10Z",
      "mergedAt": "2023-06-21T06:20:10Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "bee05c44945b9c812ead181f558699990930d8c1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5YzTcY",
          "commit": {
            "abbreviatedOid": "d9c847b"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T06:19:26Z",
          "updatedAt": "2023-06-21T06:19:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5YzTcq",
          "commit": {
            "abbreviatedOid": "d9c847b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T06:19:27Z",
          "updatedAt": "2023-06-21T06:19:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDOJZ2aqs5UwYHR",
      "title": "Mike's editorial suggestions",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/37",
      "state": "MERGED",
      "author": "selfissued",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-05T23:32:11Z",
      "updatedAt": "2023-07-10T21:41:13Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "bee05c44945b9c812ead181f558699990930d8c1",
      "headRepository": "selfissued/draft-looker-oauth-jwt-cwt-status-list",
      "headRefName": "mbj-editorial-suggestions",
      "headRefOid": "36c4fe7e0d5ebefb0c710f82531f22940467fe4a",
      "closedAt": "2023-07-10T21:41:12Z",
      "mergedAt": "2023-07-10T21:41:12Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "4210fba10aa1ce801668e3097b5c301d292e1f8b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5ayBBj",
          "commit": {
            "abbreviatedOid": "36c4fe7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T21:17:02Z",
          "updatedAt": "2023-07-10T21:17:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDOJZ2aqs5Vg_6s",
      "title": "reorder sections on Referenced Token and Status List Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/43",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #19 \r\n\r\n## \ud83d\udcd1 Description\r\nreorder section on Referenced Token and Status List Token\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-07-14T12:28:02Z",
      "updatedAt": "2023-07-17T06:35:20Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "4210fba10aa1ce801668e3097b5c301d292e1f8b",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "reorder",
      "headRefOid": "910a9a815b1a51892835ea0c9da10abf894a9983",
      "closedAt": "2023-07-17T06:35:01Z",
      "mergedAt": "2023-07-17T06:35:01Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "70e860b9cd190741593d92cd0b8e27394137bda9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5bTVgj",
          "commit": {
            "abbreviatedOid": "910a9a8"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-16T20:08:30Z",
          "updatedAt": "2023-07-16T20:08:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5bUaZe",
          "commit": {
            "abbreviatedOid": "910a9a8"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-17T06:34:43Z",
          "updatedAt": "2023-07-17T06:34:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 48,
      "id": "PR_kwDOJZ2aqs5WyObE",
      "title": "auto-generate examples",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/48",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "## \ud83d\udcd1 Description\r\nAuto-generates the encoding / token examples from the included code.",
      "createdAt": "2023-07-31T10:48:04Z",
      "updatedAt": "2023-08-14T12:06:15Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "70e860b9cd190741593d92cd0b8e27394137bda9",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "feature/generate-examples",
      "headRefOid": "095ad05e42db081349c4d7ec1db11fa64299a50e",
      "closedAt": "2023-08-14T12:06:15Z",
      "mergedAt": "2023-08-14T12:06:14Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "b985250a346db03529388096abdfd72b76121e67"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5d8ndw",
          "commit": {
            "abbreviatedOid": "095ad05"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-14T06:51:34Z",
          "updatedAt": "2023-08-14T06:51:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 49,
      "id": "PR_kwDOJZ2aqs5XChB5",
      "title": "chore: initial commit for ttl langugage",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/49",
      "state": "CLOSED",
      "author": "mprorock",
      "authorAssociation": "NONE",
      "assignees": [
        "tplooker"
      ],
      "labels": [],
      "body": "## \ud83d\udcd1 Description\r\nadds support for `ttl` instructions for consumers/verifiers - this is important, especially with signed lists to separate the requirement to sign and reissue from when a client or cdn needs to fetch a fresh copy of the list",
      "createdAt": "2023-08-02T18:46:01Z",
      "updatedAt": "2024-02-27T07:31:46Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "70e860b9cd190741593d92cd0b8e27394137bda9",
      "headRepository": "mesur-io/draft-looker-oauth-jwt-cwt-status-list",
      "headRefName": "feature/ttl",
      "headRefOid": "b0947c311544e9cd2ea3a4f43efa883798fce4c7",
      "closedAt": "2024-02-27T07:31:46Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is that the same mechanism that we intended for `exp` or what are the intended differences?",
          "createdAt": "2023-08-02T18:48:38Z",
          "updatedAt": "2023-08-02T18:48:38Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "We definitely need to improve the wording in the draft on this - the intention was to use the default `exp` claim to signal the freshness requirements of the issuer. Advantage of this would be that it basically comes for free if you use a standard JWT library (which should already check for expiration). \r\nDo you see a benefit in having both `exp` and `ttl` or the need for different meanings/usage?",
          "createdAt": "2023-08-02T19:22:27Z",
          "updatedAt": "2023-08-02T19:31:55Z"
        },
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "> We definitely need to improve the wording in the draft on this - the intention was to use the default `exp` claim to signal the freshness requirements of the issuer. Advantage of this would be that it basically comes for free if you use a standard JWT library (which should already check for expiration). Do you see a benefit in having both `exp` and `ttl` or the need for different meanings/usage?\r\n\r\ndefinitely a need for both:\r\n`exp` indicates that the issuer will reissue status no later than such and such date\r\n`ttl` is an instruction for the client side, or the cdn side as to how often to fetch a fresh copy\r\n\r\nThese two values may be in sync in some cases, but not always.  consider the case where a jwt may need status checked frequently, but the status changes are infrequent - the isssuer should not need to re-sign a status as frequently as they wish the client to check for a new copy.  pretty common issue in the supply chain arena, and others.  \r\nthink of `exp` as the renewal date for a dns registration itself, and `ttl` as the `ttl` on a dns record\r\n\r\nedit: also want to note, that a side effect of this, is that if ttl is not set, it basically defaults to exp and works well for a lot of cases where you would just want an off the shelf jwt processing, or where caching of status, perhaps on external systems, is not a concern",
          "createdAt": "2023-08-02T23:29:37Z",
          "updatedAt": "2023-08-03T12:58:05Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": " The case that I mainly had in mind was offline-validation or restricted access to the status list for privacy reasons. In these cases the holder could carry the status list and provide status list and credential during presentation.\r\nThere would be no way for `ttl` to be adhered to / verified from the verifier side for these cases but I guess that is fine and `exp` would be the claim that is enforced and `ttl` is a policy that is basically suggested to the verifier / hosting provider of the status list?",
          "createdAt": "2023-08-04T10:44:33Z",
          "updatedAt": "2023-08-04T10:44:33Z"
        },
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "> There would be no way for `ttl` to be adhered to / verified from the verifier side for these cases but I guess that is fine and `exp` would be the claim that is enforced and `ttl` is a policy that is basically suggested to the verifier / hosting provider of the status list?\r\n\r\nexactly - that is why `exp` is the more important one, but adding `ttl` as optional covers the more connected and cdn type use cases",
          "createdAt": "2023-08-04T15:15:10Z",
          "updatedAt": "2023-08-04T15:15:10Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As we got the the caching information integrated with the HTTP Cache Control over HTTP GET in the specification, the question remains whether the duplicate information inside the Status List serves a purpose",
          "createdAt": "2023-11-01T22:02:43Z",
          "updatedAt": "2023-11-01T22:02:43Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "If you duplicate the information, the list can be delivered by the holder in an internet denied environment.\n\nAssuming the verifier has network, or had network, might make sense for some use cases... Other use cases might assume burnt in trust roots and no network ever.",
          "createdAt": "2023-11-01T23:42:49Z",
          "updatedAt": "2023-11-01T23:42:49Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> If you duplicate the information, the list can be delivered by the holder in an internet denied environment.\r\n> \r\n> Assuming the verifier has network, or had network, might make sense for some use cases... Other use cases might assume burnt in trust roots and no network ever.\r\n\r\nPerhaps I am missing something but in my mind the caching information is not relevant for the verifier, only for the system fetching the updates (if they are separate entities). The verifier has `iat` and `exp` to figure out if status list should be trusted/used. The entity fetching the updates needs the information when to try fetching again for possible updates.\r\n\r\nWould you be up for a short call on this topic so we can better understand your point of view?",
          "createdAt": "2023-11-16T09:25:04Z",
          "updatedAt": "2023-11-16T09:25:04Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As we integrated a mechanism to enable Caching over the HTTP Cache-Control mechanism, we dot not see a need to add or duplicate this information to the data of the Status List Token.\r\nPending close without any further feedback.",
          "createdAt": "2024-01-15T08:25:02Z",
          "updatedAt": "2024-01-15T08:25:02Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "pending close in favor for #101 , too many merge conflicts here",
          "createdAt": "2024-02-22T08:12:46Z",
          "updatedAt": "2024-02-22T08:12:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5dKsdI",
          "commit": {
            "abbreviatedOid": "81ad79e"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-04T15:15:48Z",
          "updatedAt": "2023-08-04T15:15:48Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n - Claim Name: ttl\r\n```",
              "createdAt": "2023-08-04T15:15:48Z",
              "updatedAt": "2023-08-04T15:15:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5dMlyj",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-04T21:26:26Z",
          "updatedAt": "2023-08-04T21:26:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5v4got",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "From our latest thoughts, we are again considering to integrate this: https://github.com/vcstuff/draft-ietf-oauth-status-list/issues/96",
          "createdAt": "2024-02-13T08:08:30Z",
          "updatedAt": "2024-02-13T08:08:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5wTiwJ",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-16T01:25:13Z",
          "updatedAt": "2024-02-16T01:25:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n6. The JWT MAY contain a \"ttl\" (time to live) claim that conveys the maximum amount of time, in seconds, that the JWT may be cached by a client before a fresh copy is retrieved. The value of the claim MUST be a positive number.\r\n```",
              "createdAt": "2024-02-16T01:25:13Z",
              "updatedAt": "2024-02-16T01:25:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wkz_e",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-19T15:29:01Z",
          "updatedAt": "2024-02-19T15:29:02Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Why are we creating a new claim, that does basically the same thing as `exp` ?",
              "createdAt": "2024-02-19T15:29:02Z",
              "updatedAt": "2024-02-19T15:29:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wk0H0",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-19T15:29:14Z",
          "updatedAt": "2024-02-19T15:29:15Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-19T15:29:15Z",
              "updatedAt": "2024-02-19T15:29:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wk0Wb",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-19T15:29:35Z",
          "updatedAt": "2024-02-19T15:29:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "^ remove throwaway sentence",
              "createdAt": "2024-02-19T15:29:35Z",
              "updatedAt": "2024-02-19T15:29:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wk0nR",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-19T15:30:03Z",
          "updatedAt": "2024-02-19T15:30:03Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "are you sure encrypted JWT are not allowed?",
              "createdAt": "2024-02-19T15:30:03Z",
              "updatedAt": "2024-02-19T15:30:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wk0_e",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-19T15:30:51Z",
          "updatedAt": "2024-02-19T15:30:52Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "prefer to not register this claim... just make `exp` required.",
              "createdAt": "2024-02-19T15:30:51Z",
              "updatedAt": "2024-02-19T15:30:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wlBTQ",
          "commit": {
            "abbreviatedOid": "b0947c3"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-19T15:52:54Z",
          "updatedAt": "2024-02-19T15:52:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "you actually approved the same idea half a year ago? The idea is that Issuers/Status List Providers may not want to resign the whole Status List if nothing has changed, therefore `ttl` communicates the update interval of the Issuer, so that RP knows how often to check for updates and `exp` communicates \"do not use this list after this point of time\"",
              "createdAt": "2024-02-19T15:52:54Z",
              "updatedAt": "2024-02-19T15:52:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 57,
      "id": "PR_kwDOJZ2aqs5X4Gpj",
      "title": "Add option for Plain Status List and reorder document",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/57",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #55\r\nCloses #56 \r\nCloses #41 \r\n\r\n## \ud83d\udcd1 Description\r\n<!-- Add a brief description of the pr -->\r\n\r\n- [x] change graphic in Introduction\r\n- [ ] update introduction text\r\n- [ ] update terminology\r\n- [ ] auto-generate status list encoding output\r\n- [ ] move some examples to annex?\r\n- [ ] auto-generate referenced token\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-looker-oauth-jwt-cwt-status-list/plain/draft-looker-oauth-jwt-cwt-status-list.html)",
      "createdAt": "2023-08-14T12:14:48Z",
      "updatedAt": "2024-08-28T20:50:51Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "58c91091c080b59860732bea8bc95c140c304473",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "plain",
      "headRefOid": "9c5c4499de9ea3f05c61bdaa780067ab5553abc9",
      "closedAt": "2024-01-15T07:11:44Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Replaced by #89 . Pending close",
          "createdAt": "2023-12-17T16:30:15Z",
          "updatedAt": "2023-12-17T16:30:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5fKZ9p",
          "commit": {
            "abbreviatedOid": "b925fec"
          },
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-25T22:21:55Z",
          "updatedAt": "2023-08-25T22:21:55Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n|    Status List    +------------------>      Referenced Token     |\r\n```\r\n                                   \r\n\"Status Reference Token\" is really confusing. While \"Referenced Token\" is used elsewhere in the draft. ",
              "createdAt": "2023-08-25T22:21:55Z",
              "updatedAt": "2023-08-25T22:21:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5fKcB9",
          "commit": {
            "abbreviatedOid": "b925fec"
          },
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-25T22:28:31Z",
          "updatedAt": "2023-08-25T22:28:31Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "don't think base64url-encoding makes sense here now that this part 4.1 is only describing the list independent of JSON/CBOR ",
              "createdAt": "2023-08-25T22:28:31Z",
              "updatedAt": "2023-08-25T22:28:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5hiHse",
          "commit": {
            "abbreviatedOid": "b925fec"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T19:13:31Z",
          "updatedAt": "2023-09-20T19:13:31Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "you are opting to have the base encoding of status list as binary and add the base64 encoding only for JSON? That was my first opinion as well! We were unsure if it would be better to keep things simpler and more common between JSON and CBOR",
              "createdAt": "2023-09-20T19:13:31Z",
              "updatedAt": "2023-09-20T19:13:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5itXtI",
          "commit": {
            "abbreviatedOid": "b925fec"
          },
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-03T20:20:28Z",
          "updatedAt": "2023-10-03T20:20:28Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "> you are opting to have the base encoding of status list as binary and add the base64 encoding only for JSON? \r\n\r\nThat is kinda what I was thinking. I mean, it doesn't seem quite right to base64 encode this binary thing and then place that in CBOR. \r\n\r\nI'd also been thinking that the base encoding of status list as binary could also be how an unsigned list is retrieved via HTTP - i.e. just content type of application/octet-stream - but the bit size also needs to be conveyed there, which complicates that. It would be nice to avoid the size overhead of base64 when not needed though. And it would seem that it's only needed in JSON. ",
              "createdAt": "2023-10-03T20:20:28Z",
              "updatedAt": "2023-10-03T20:20:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5itvEP",
          "commit": {
            "abbreviatedOid": "b925fec"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-03T21:23:30Z",
          "updatedAt": "2023-10-03T21:23:31Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "The overhead is minimal size wise , if you apply http gzip on top, but it's not \"nice\"",
              "createdAt": "2023-10-03T21:23:30Z",
              "updatedAt": "2023-10-03T21:23:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5ktMNX",
          "commit": {
            "abbreviatedOid": "bb0cb8e"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T08:56:32Z",
          "updatedAt": "2023-10-20T08:56:32Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n|    Status List    +------------------>|    Referenced Token    |\r\n```",
              "createdAt": "2023-10-20T08:56:32Z",
              "updatedAt": "2023-10-20T08:56:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5ktMVs",
          "commit": {
            "abbreviatedOid": "6fbe5dd"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T08:56:50Z",
          "updatedAt": "2023-10-20T08:56:51Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n|    Status List    +----------------->|    Referenced Token    |\r\n```",
              "createdAt": "2023-10-20T08:56:50Z",
              "updatedAt": "2023-10-20T08:56:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5ktP8A",
          "commit": {
            "abbreviatedOid": "b925fec"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T09:02:35Z",
          "updatedAt": "2023-10-20T09:02:36Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "@paulbastian  @c2bo agreed. Separate issue opened #69 ",
              "createdAt": "2023-10-20T09:02:35Z",
              "updatedAt": "2023-10-20T09:02:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOJZ2aqs5YxgEU",
      "title": "add as author",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/61",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "adds myself as author",
      "createdAt": "2023-08-25T08:57:41Z",
      "updatedAt": "2023-09-01T06:37:58Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "b985250a346db03529388096abdfd72b76121e67",
      "headRepository": "c2bo/draft-looker-jwt-cwt-status-list",
      "headRefName": "feature/author",
      "headRefOid": "c0f7a211932216c1f475e2afda7262e1ceef0279",
      "closedAt": "2023-09-01T06:37:58Z",
      "mergedAt": "2023-09-01T06:37:58Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "6da501fc27174d0fe8a36ca04fd2fe01de20f407"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5fF5-W",
          "commit": {
            "abbreviatedOid": "c0f7a21"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-25T10:04:16Z",
          "updatedAt": "2023-08-25T10:04:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5fvuD5",
          "commit": {
            "abbreviatedOid": "c0f7a21"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-01T06:37:52Z",
          "updatedAt": "2023-09-01T06:37:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOJZ2aqs5a0NqT",
      "title": "HTTP processing and verification",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/63",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #2 \r\n\r\n## \ud83d\udcd1 Description\r\nDefines the HTTP GET API\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-looker-oauth-jwt-cwt-status-list/http/draft-looker-oauth-jwt-cwt-status-list.html)",
      "createdAt": "2023-09-20T19:21:09Z",
      "updatedAt": "2024-08-28T20:50:33Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "6da501fc27174d0fe8a36ca04fd2fe01de20f407",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "http",
      "headRefOid": "b773a7b2ceca60078bf4c74d353e1ce18dc7b17c",
      "closedAt": "2023-10-06T06:50:11Z",
      "mergedAt": "2023-10-06T06:50:11Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "879a5d25bec20b262704d97b325a3e3e17d1089e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5hiain",
          "commit": {
            "abbreviatedOid": "b773a7b"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-20T20:08:33Z",
          "updatedAt": "2023-09-20T20:08:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5iPn4k",
          "commit": {
            "abbreviatedOid": "b773a7b"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-28T09:02:24Z",
          "updatedAt": "2023-09-28T09:02:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOJZ2aqs5a0mRf",
      "title": "privacy considerations draft",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/65",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #4 #60\r\n\r\n## \ud83d\udcd1 Description\r\n<!-- Add a brief description of the pr -->\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-09-20T20:49:39Z",
      "updatedAt": "2024-08-28T20:50:31Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "6da501fc27174d0fe8a36ca04fd2fe01de20f407",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "privacy",
      "headRefOid": "170ae1ad581ff782c0d901dd55eeb15bc04cf79c",
      "closedAt": "2023-10-06T06:50:39Z",
      "mergedAt": "2023-10-06T06:50:39Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "d9a86306e31d09f371bcb843a83c5434a8ade342"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5ibhIC",
          "commit": {
            "abbreviatedOid": "0c647c8"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T19:35:50Z",
          "updatedAt": "2023-09-29T19:36:24Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nOnce the Verifier gets the Referenced Token, this enables him to request the Status List to validate the status of the Token through the provided \"uri\" property and look up the corresponding \"index\". However, the Verifier may persistently store the \"uri\" and \"index\" of the Referenced Token to request the Status List again at a later time. By doing so regularly, the Verifier may create a profile of the Referenced Token's validity status. This behaviour may be inteded as a feature, e.g. for a KYC process that requires regular validity checks, but might also be abused in cases where this is not intended and unknown to the Holder, e.g. profiling the suspension of a driving license or checking the employment status of an employee credential. This behaviour could be constrained by adding authorization rules to the Status List, see [](#security-authorization).\r\n```",
              "createdAt": "2023-09-29T19:35:50Z",
              "updatedAt": "2023-09-29T19:36:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5jBCKK",
          "commit": {
            "abbreviatedOid": "170ae1a"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-06T06:48:50Z",
          "updatedAt": "2023-10-06T06:48:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 70,
      "id": "PR_kwDOJZ2aqs5dbHXO",
      "title": "rename Verifier to Relying Part and add some terminology",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/70",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #64 \r\n\r\n## \ud83d\udcd1 Description\r\nUse term Relying Party and Issuer\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-10-20T22:08:00Z",
      "updatedAt": "2024-08-28T20:50:31Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "58c91091c080b59860732bea8bc95c140c304473",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "rp",
      "headRefOid": "eddb734cd6de924e7a56fe804fe2e9e6b9e2860c",
      "closedAt": "2023-10-23T06:10:51Z",
      "mergedAt": "2023-10-23T06:10:51Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "a64098144f3c356d6724f10778c18d0d97d248ce"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5k1llH",
          "commit": {
            "abbreviatedOid": "eddb734"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T06:10:25Z",
          "updatedAt": "2023-10-23T06:10:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5k1lp_",
          "commit": {
            "abbreviatedOid": "eddb734"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T06:10:43Z",
          "updatedAt": "2023-10-23T06:10:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 71,
      "id": "PR_kwDOJZ2aqs5dbOKc",
      "title": "initial IANA section for media types and jwt claim names",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/71",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #59 \r\n\r\n## \ud83d\udcd1 Description\r\nIANA Consideration to register JWT Claim names and media types\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-10-20T22:54:52Z",
      "updatedAt": "2024-08-28T20:50:30Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "58c91091c080b59860732bea8bc95c140c304473",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "iana",
      "headRefOid": "b837e44819ee43928b9a3eef8c7113b977bb381a",
      "closedAt": "2023-10-23T06:12:01Z",
      "mergedAt": "2023-10-23T06:12:01Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "c90d5ece30db4b92c4b4b0638e424386e36ee592"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5k0wZb",
          "commit": {
            "abbreviatedOid": "b837e44"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T00:43:55Z",
          "updatedAt": "2023-10-23T00:43:55Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Given most jwt claims try to informally follow the three character convention, should we consider 'sts'? I dont feel strongly.",
              "createdAt": "2023-10-23T00:43:55Z",
              "updatedAt": "2023-10-23T00:43:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5k1j46",
          "commit": {
            "abbreviatedOid": "b837e44"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T06:03:39Z",
          "updatedAt": "2023-10-23T06:03:39Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/40",
              "createdAt": "2023-10-23T06:03:39Z",
              "updatedAt": "2023-10-23T06:03:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5k1l6n",
          "commit": {
            "abbreviatedOid": "b837e44"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T06:11:48Z",
          "updatedAt": "2023-10-23T06:11:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5k1l6v",
          "commit": {
            "abbreviatedOid": "b837e44"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T06:11:49Z",
          "updatedAt": "2023-10-23T06:11:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 75,
      "id": "PR_kwDOJZ2aqs5deH-g",
      "title": "design considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/75",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #54 \r\n\r\n## \ud83d\udcd1 Description\r\nThis PR adds a section on design considerations.\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-10-22T19:38:19Z",
      "updatedAt": "2024-08-28T20:50:06Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "2e8e7aec6b757263d9fe356dc0f3815ffc5dd177",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/introduction",
      "headRefOid": "bdf7337845c9557cbeef4e7bbec28f587907d10f",
      "closedAt": "2024-01-15T07:10:51Z",
      "mergedAt": "2024-01-15T07:10:51Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "8bf472ac4e3b6aaca67cc5f789aaa4984ed0969c"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I had to force push changes as the branch originated before the renaming of the file and my git merge messed things up",
          "createdAt": "2023-11-16T15:56:43Z",
          "updatedAt": "2023-11-16T15:56:43Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker could you please review this",
          "createdAt": "2023-12-08T07:30:35Z",
          "updatedAt": "2023-12-08T07:30:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5l2lj3",
          "commit": {
            "abbreviatedOid": "1947906"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-01T18:36:57Z",
          "updatedAt": "2023-11-01T18:39:27Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n* the specification shall support JSON and CBOR based tokens\r\n* the specification shall not specify key resolution or trust frameworks\r\n```",
              "createdAt": "2023-11-01T18:36:57Z",
              "updatedAt": "2023-11-16T07:55:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5l341M",
          "commit": {
            "abbreviatedOid": "1947906"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-01T22:00:59Z",
          "updatedAt": "2023-11-01T22:00:59Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I agree with key resolution, but token specific mechanisms may be an overstatement, as we define JWT and CWT specific representations",
              "createdAt": "2023-11-01T22:00:59Z",
              "updatedAt": "2023-11-01T22:01:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5nZHls",
          "commit": {
            "abbreviatedOid": "1947906"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-16T14:58:23Z",
          "updatedAt": "2023-11-16T14:58:23Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "updated it - does this version look better for you?",
              "createdAt": "2023-11-16T14:58:23Z",
              "updatedAt": "2023-11-16T14:58:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5nZvyt",
          "commit": {
            "abbreviatedOid": "a979909"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-16T15:55:36Z",
          "updatedAt": "2023-11-16T15:55:36Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n* the specification shall support JSON and CBOR based tokens\r\n* the specification shall not specify key resolution or trust frameworks\r\n```",
              "createdAt": "2023-11-16T15:55:36Z",
              "updatedAt": "2023-11-16T15:55:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5si2qt",
          "commit": {
            "abbreviatedOid": "e9a1082"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-15T07:08:24Z",
          "updatedAt": "2024-01-15T07:08:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOJZ2aqs5dePPK",
      "title": "update acknowledments",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/76",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses # <!-- Issue # here -->\r\n\r\n## \ud83d\udcd1 Description\r\n<!-- Add a brief description of the pr -->\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-10-22T21:40:36Z",
      "updatedAt": "2024-08-28T20:50:29Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "58c91091c080b59860732bea8bc95c140c304473",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/acknowledgments",
      "headRefOid": "83db261729b7f9028e5b6980fc6e8c76c28feded",
      "closedAt": "2023-10-23T00:45:00Z",
      "mergedAt": "2023-10-23T00:45:00Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "e798a945442f9ba945a66fbc9b8bedfdd8a8bd98"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5k0wN9",
          "commit": {
            "abbreviatedOid": "83db261"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T00:41:37Z",
          "updatedAt": "2023-10-23T00:41:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOJZ2aqs5eT-CL",
      "title": "Change typo in Status List Token sub claim description",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/79",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #78 \r\n\r\n## \ud83d\udcd1 Description\r\nChange typo in Status List Token sub claim description\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-11-01T08:54:20Z",
      "updatedAt": "2023-11-16T07:50:06Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "85fa6f499ae1ec612552c428e5ef77d2d1260e50",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "78-typomixup-in-status-list-jwt-format-and-processing-requirements",
      "headRefOid": "8fb0ca6506c57df7adf3130566ca661068ed844f",
      "closedAt": "2023-11-16T07:50:02Z",
      "mergedAt": "2023-11-16T07:50:02Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "4c646d4611112c74ffec04c4b1d539af9ba543d6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5lzIbd",
          "commit": {
            "abbreviatedOid": "8fb0ca6"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-01T10:02:38Z",
          "updatedAt": "2023-11-01T10:02:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5l20et",
          "commit": {
            "abbreviatedOid": "8fb0ca6"
          },
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-01T19:16:52Z",
          "updatedAt": "2023-11-01T19:16:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5nVlTl",
          "commit": {
            "abbreviatedOid": "8fb0ca6"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-16T07:49:56Z",
          "updatedAt": "2023-11-16T07:49:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOJZ2aqs5eXYqz",
      "title": "switch to deflate + zlib instead of gzip",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/80",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #67 and #39.\r\n\r\n## \ud83d\udcd1 Description\r\nSwitches to zlib instead of gzip encoding and adds the recommendation to use the best available compression.\r\n\r\n## Preview Link\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-11-01T19:22:50Z",
      "updatedAt": "2024-08-28T20:50:47Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "85fa6f499ae1ec612552c428e5ef77d2d1260e50",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "feature/zlib",
      "headRefOid": "e39314207eff122c8d6c9193203372bf14324ea6",
      "closedAt": "2023-11-16T08:47:51Z",
      "mergedAt": "2023-11-16T08:47:51Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "2323f53751e542f5edf5448fa4f522693f1b09aa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5l3PhZ",
          "commit": {
            "abbreviatedOid": "566016b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-01T19:51:26Z",
          "updatedAt": "2023-11-01T21:52:09Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I prefer recommend over should, as should and shall are sometimes confusing",
              "createdAt": "2023-11-01T19:51:26Z",
              "updatedAt": "2023-11-01T21:52:09Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n2. The complete byte array is compressed using the \"DEFLATE\" {{RFC1951}} compression method and stored using the \"ZLIB\" {{RFC1950}} data format. Implementations are RECOMMENDED to use the highest compression level available.\r\n```",
              "createdAt": "2023-11-01T21:51:38Z",
              "updatedAt": "2023-11-01T21:52:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5nVwyf",
          "commit": {
            "abbreviatedOid": "504fa5e"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-16T08:17:02Z",
          "updatedAt": "2023-11-16T08:17:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5sl6hV",
          "commit": {
            "abbreviatedOid": "e393142"
          },
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-15T15:14:10Z",
          "updatedAt": "2024-01-15T15:14:10Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I'm not sure I understand \"compressed using the \"DEFLATE\" {{RFC1951}} compression method and stored using the \"ZLIB\" {{RFC1950}} data format\" and not sure I understand well enough to even ask appropriate questions. Does this say to compress twice, once with DEFLATE only and once with ZLIB? That sounds silly but could easily be read that way. Or like what does \"stored\" mean in this context? Stored where? This should be about data format for exchange between parties. Whereas storage typically implies something internal (which wouldn't be in scope for the interchange format). I would expect this draft to clearly specify one compression method. This reads like two compressions. The code below suggests that ZLIB is being used - shouldn't the text reflect that? I know zlib does use DEFLATE internally and that is confusing things but indicating them both with an \"and\" is further confusing. \r\n\r\n",
              "createdAt": "2024-01-15T15:14:10Z",
              "updatedAt": "2024-01-15T15:14:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5smJhb",
          "commit": {
            "abbreviatedOid": "e393142"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-15T15:49:58Z",
          "updatedAt": "2024-01-15T15:49:58Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "So Zlib is using Deflate as the compression method internally and zlib is more of a data format wrapping the result. \"stored\" may indeed be confusing here, is \"encoded\" better? Do you think its better not to reference Deflate as its referenced by Zlib RFC?\r\n\r\nSome implementations may not offer the choice for the compression level, so I think that was the idea to not mandate the level of compression. Although we don't have extensive experience with many programming languages yet.",
              "createdAt": "2024-01-15T15:49:58Z",
              "updatedAt": "2024-01-15T15:49:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5smOk7",
          "commit": {
            "abbreviatedOid": "e393142"
          },
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-15T16:02:09Z",
          "updatedAt": "2024-01-15T16:02:09Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "> Do you think its better not to reference Deflate as its referenced by Zlib RFC?\r\n\r\nYeah, that's probably how I would have tried to write it. But in https://www.rfc-editor.org/rfc/rfc9110.html#section-18.6 and https://www.rfc-editor.org/rfc/rfc9112.html#section-12.3 HTTP uses language like the following, which makes more sense to me and is probably an example worth following. \r\n\r\n> \"deflate\" compressed data ([RFC1951]) inside the \"zlib\" data format ([RFC1950])\r\n",
              "createdAt": "2024-01-15T16:02:09Z",
              "updatedAt": "2024-01-15T16:02:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5smdI-",
          "commit": {
            "abbreviatedOid": "e393142"
          },
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-15T16:43:14Z",
          "updatedAt": "2024-01-15T16:43:14Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "The wording is tricky (for me anyway!) but maybe something like this kinda following the language example from HTTP conveys the intent here more clearly: \r\n\r\n```suggestion\r\n2. The complete byte array is compressed using DEFLATE {{RFC1951}} inside the ZLIB {{RFC1950}} data format. Implementations are RECOMMENDED to use the highest compression level available.\r\n```\r\n\r\nmaybe... ",
              "createdAt": "2024-01-15T16:43:14Z",
              "updatedAt": "2024-01-15T16:43:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5smeuP",
          "commit": {
            "abbreviatedOid": "e393142"
          },
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-15T16:47:49Z",
          "updatedAt": "2024-01-15T16:47:49Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "This PR has been merged already so I created issue #94 for this ",
              "createdAt": "2024-01-15T16:47:49Z",
              "updatedAt": "2024-01-15T16:48:02Z"
            }
          ]
        }
      ]
    },
    {
      "number": 81,
      "id": "PR_kwDOJZ2aqs5e5qZT",
      "title": "VALID does not precede J/CWT processing rules",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/81",
      "state": "MERGED",
      "author": "panva",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This feedback comes from applying the Status List to an implementation of a general OAuth 2.x server issuing JWT Access Tokens.\r\n\r\nSuch implementation will typically not keep record of any issued JWT Access Tokens (their claims, expiry, etc) until they need to be revoked due any reason, e.g. getting leaked or just being explicitly revoked by the client.\r\n\r\nIn such cases the issuer considers the token as VALID when issuing the Status List but this state will not necessarily reflect the token's validity as per the JWT validation rules for claims like nbf or exp. This is important to point out so that the status list is not mistaken for an alternative to actually validating the referenced token's claim set.",
      "createdAt": "2023-11-08T09:15:05Z",
      "updatedAt": "2023-11-16T20:10:21Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "85fa6f499ae1ec612552c428e5ef77d2d1260e50",
      "headRepository": "panva/draft-ietf-oauth-status-list",
      "headRefName": "note-on-valid",
      "headRefOid": "d79ea7cbc01289f079970f3c31c524c0bd75c85b",
      "closedAt": "2023-11-16T19:41:35Z",
      "mergedAt": "2023-11-16T19:41:35Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "5e89ba2bea20e16e8d6f1533bd4e5745758866d4"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@panva could you merge with main and add a line to the document history please",
          "createdAt": "2023-11-16T15:24:04Z",
          "updatedAt": "2023-11-16T15:24:04Z"
        },
        {
          "author": "panva",
          "authorAssociation": "MEMBER",
          "body": "Not a member, cannot merge.",
          "createdAt": "2023-11-16T16:25:53Z",
          "updatedAt": "2023-11-16T16:25:53Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I meant sync, sry. But I can add the history on main also.",
          "createdAt": "2023-11-16T16:27:06Z",
          "updatedAt": "2023-11-16T16:27:45Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker Please review and merge if you approve",
          "createdAt": "2023-11-16T16:28:03Z",
          "updatedAt": "2023-11-16T16:28:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5nVdQC",
          "commit": {
            "abbreviatedOid": "56d03d4"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good to me. It might be better positioned in a dedicated Verification Processing section once we have that but its good for now",
          "createdAt": "2023-11-16T07:28:14Z",
          "updatedAt": "2023-11-16T07:28:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5nVwRB",
          "commit": {
            "abbreviatedOid": "56d03d4"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-16T08:16:10Z",
          "updatedAt": "2023-11-16T08:16:11Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe processing rules for JWT or CWT precede any evaluation of a referenced tokens status. For example if a token is evaluated as being expired through the \"exp\" (Expiration Time) but also has a status of 0x00 (\"VALID\"), the token is considered expired.\r\n```\r\n\r\nThanks @panva the tweak I'm trying to make with this language is that even if an issuer is tracking a tokens status, once it expires, even if they don't revoke it, it should be considered expired. I think that is what you meant too, I've just taken another stab at this language.\r\n\r\ncc @paulbastian @c2bo ",
              "createdAt": "2023-11-16T08:16:10Z",
              "updatedAt": "2023-11-16T08:16:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5nZGuJ",
          "commit": {
            "abbreviatedOid": "d79ea7c"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-16T14:57:00Z",
          "updatedAt": "2023-11-16T14:57:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5nbsOu",
          "commit": {
            "abbreviatedOid": "d79ea7c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-16T19:41:22Z",
          "updatedAt": "2023-11-16T19:41:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 87,
      "id": "PR_kwDOJZ2aqs5hbSsf",
      "title": "Typo: status types list",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/87",
      "state": "CLOSED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Adds a new line before the pre-defined status types so it renders properly as a list",
      "createdAt": "2023-12-07T14:02:27Z",
      "updatedAt": "2024-08-28T20:50:27Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "5e89ba2bea20e16e8d6f1533bd4e5745758866d4",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/typo-types",
      "headRefOid": "6fae779a953db20aeb18edceecd4acb4764b12b9",
      "closedAt": "2023-12-21T20:18:02Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Fixed in #89 - closing this one",
          "createdAt": "2023-12-21T20:18:02Z",
          "updatedAt": "2023-12-21T20:18:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5piAeW",
          "commit": {
            "abbreviatedOid": "6fae779"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-07T16:01:02Z",
          "updatedAt": "2023-12-07T16:01:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 88,
      "id": "PR_kwDOJZ2aqs5hxKU3",
      "title": "add access token example",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/88",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #82 \r\n\r\n## \ud83d\udcd1 Description\r\nAdds access token as an example use-case for status list.\r\n\r\n## Preview Link\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/c2bo/access-token/draft-ietf-oauth-status-list.html)",
      "createdAt": "2023-12-12T09:00:20Z",
      "updatedAt": "2024-08-28T20:50:05Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "5e89ba2bea20e16e8d6f1533bd4e5745758866d4",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/access-token",
      "headRefOid": "92fa63aef9755ed517d2b2076e2e59a37ea73421",
      "closedAt": "2024-01-09T12:17:40Z",
      "mergedAt": "2024-01-09T12:17:40Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "28e2ea69c33ce4ae3254bdc723906859b3ea3f8e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5p8T1W",
          "commit": {
            "abbreviatedOid": "5327655"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T13:01:26Z",
          "updatedAt": "2023-12-12T13:01:26Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "should these by informative?",
              "createdAt": "2023-12-12T13:01:26Z",
              "updatedAt": "2023-12-12T13:01:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5p8VBT",
          "commit": {
            "abbreviatedOid": "5327655"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T13:04:00Z",
          "updatedAt": "2023-12-12T13:04:00Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "The other use case for Issuer-Holder-Verifier is mentioned one paragraph further down. I think it makes sense to group them together",
              "createdAt": "2023-12-12T13:04:00Z",
              "updatedAt": "2023-12-12T13:04:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5qWXcy",
          "commit": {
            "abbreviatedOid": "61c86f5"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-15T14:45:53Z",
          "updatedAt": "2023-12-15T14:45:53Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nThis document defines Status List representations in JWT and CWT formats that describe the individual statuses of multiple Referenced Tokens, which themselves are also JWTs or CWTs. The statuses of all Referenced Tokens are conveyed via a bit array in the Status List. Each Referenced Token is allocated an index during issuance that represents its position within this bit array. The value of the bit(s) at this position correspond to the Referenced Token's status. The document also defines how an issuer of a Referenced Token references a Status List Token. Status Lists may be composed for expressing a range of Status Types. This document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types.\r\n\r\nAn example for the usage of a Status List would be an \"access token\" as defined in section 1.4 of {{RFC6749}} where validity (after issuance, before expiration) is important meta information. A mechanism to gather this kind of information exists in the form of Token Introspection {{RFC7662}}, but requires direct interaction with the issuer, whereas this specification defines a mechanism using static information in the form of a status list.\r\n\r\nAnother possible use case for the Status List is to express the status of verifiable credentials (Referenced Tokens) issued by an issuer in the Issuer-Holder-Verifier model.\r\n```",
              "createdAt": "2023-12-15T14:45:53Z",
              "updatedAt": "2023-12-15T14:45:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5qacJY",
          "commit": {
            "abbreviatedOid": "75dc61b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-16T22:43:59Z",
          "updatedAt": "2023-12-16T22:43:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5r5Zme",
          "commit": {
            "abbreviatedOid": "75dc61b"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-08T23:53:45Z",
          "updatedAt": "2024-01-08T23:53:46Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nAn example for the usage of a Status List is to manage the status of issued access tokens as defined in section 1.4 of {{RFC6749}}. Token Introspection {{RFC7662}} defines another way to determine the status of an issued access token, but it requires the party trying to validate an access tokens status to directly contact the token issuer, whereas the mechanism defined in this specification does not have this limitation.\r\n```",
              "createdAt": "2024-01-08T23:53:46Z",
              "updatedAt": "2024-01-08T23:53:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 89,
      "id": "PR_kwDOJZ2aqs5iMNtq",
      "title": "Restructure and Support for plain status list",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/89",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #55\r\nCloses #56\r\nCloses #41\r\n\r\n## \ud83d\udcd1 Description\r\nAdds support for unsigned Status List retrieved via HTTP endpoint.\r\nAlso restructures the document to allow this.\r\n\r\nRemaining tasks:\r\n\r\n- [x] Fix python example to provide Status List Object in 4.1\r\n- [x] Fix python example in 5.1 to use the very same Status List Object from 4.1\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/56-add-option-for-plain-status-list-unsigned/draft-ietf-oauth-status-list.html)",
      "createdAt": "2023-12-17T16:17:53Z",
      "updatedAt": "2024-01-15T07:11:17Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "28e2ea69c33ce4ae3254bdc723906859b3ea3f8e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "56-add-option-for-plain-status-list-unsigned",
      "headRefOid": "0c8bbced22fb93b7ee93954b79ffc0d27028d186",
      "closedAt": "2024-01-15T07:07:12Z",
      "mergedAt": "2024-01-15T07:07:11Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "2e8e7aec6b757263d9fe356dc0f3815ffc5dd177"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5q8DCV",
          "commit": {
            "abbreviatedOid": "7b3e8ac"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-22T08:18:57Z",
          "updatedAt": "2023-12-22T10:19:06Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "```suggestion\r\nA Status List Token embeds the Status List into a token that is cryptographically signed and protects the integrity of the Status List. This allows for the Status List Token to be hosted by third parties or be transferred for offline use cases.\r\n```",
              "createdAt": "2023-12-22T08:18:57Z",
              "updatedAt": "2023-12-22T10:19:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5r5X6_",
          "commit": {
            "abbreviatedOid": "7b3e8ac"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-08T23:43:43Z",
          "updatedAt": "2024-01-08T23:43:43Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "With the proposal of #90 we would need to re-word this to be a bit more abstract right? Given the status list might take a different form?",
              "createdAt": "2024-01-08T23:43:43Z",
              "updatedAt": "2024-01-08T23:43:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5r8j0r",
          "commit": {
            "abbreviatedOid": "7b3e8ac"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T12:16:15Z",
          "updatedAt": "2024-01-09T12:16:15Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "we need to rebase #90 on top of this anyway and I would like to merge this beforehand. lets do the discussion in the updated PR then",
              "createdAt": "2024-01-09T12:16:15Z",
              "updatedAt": "2024-01-09T12:16:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5sKEv6",
          "commit": {
            "abbreviatedOid": "e5973ec"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T02:56:08Z",
          "updatedAt": "2024-01-11T02:56:09Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "```suggestion\r\nThe following additional rules apply:\r\n```",
              "createdAt": "2024-01-11T02:56:08Z",
              "updatedAt": "2024-01-11T02:56:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5sKE98",
          "commit": {
            "abbreviatedOid": "e5973ec"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T02:57:26Z",
          "updatedAt": "2024-01-11T02:57:26Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "Im unsure whether this layout of a bullet list of claims is any clearer then the number bullet points we had previously, any particular reason for this change?",
              "createdAt": "2024-01-11T02:57:26Z",
              "updatedAt": "2024-01-11T02:57:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5sLETg",
          "commit": {
            "abbreviatedOid": "e5973ec"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T07:27:17Z",
          "updatedAt": "2024-01-11T07:27:17Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "it allows to describe nested claims and shows more clearly the structure.\r\nTherefore its more dense making the document shorter and better to read imo",
              "createdAt": "2024-01-11T07:27:17Z",
              "updatedAt": "2024-01-11T07:27:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5sLFHo",
          "commit": {
            "abbreviatedOid": "e5973ec"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T07:28:48Z",
          "updatedAt": "2024-01-11T07:28:48Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "also it makes things more obvious when REQUIRED/OPTIONAL is the first word in the description",
              "createdAt": "2024-01-11T07:28:48Z",
              "updatedAt": "2024-01-11T07:28:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5si2Hv",
          "commit": {
            "abbreviatedOid": "0c8bbce"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-15T07:06:03Z",
          "updatedAt": "2024-01-15T07:06:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 90,
      "id": "PR_kwDOJZ2aqs5iddwc",
      "title": "Establish a mechanism that allows for other revocation means in the Referenced Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/90",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Establish a mechanism that allows for other revocation means in the Referenced Token as discussed in #85. The only thing i changed was to call the reference \"status_list\" but I am open to change it to \"status_bitstring\" if we think that is a better fit.\r\n\r\nCloses #85 \r\n\r\n## Preview Link\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/c2bo/status-reference/draft-ietf-oauth-status-list.html)",
      "createdAt": "2023-12-20T11:18:33Z",
      "updatedAt": "2024-02-06T07:05:04Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "7844a82ff77920fe7f41b5b55d6e0d89a989f1c6",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/status-reference",
      "headRefOid": "3fcdf5d864724a025dc989a2340c20fbcd93b417",
      "closedAt": "2024-02-06T07:04:44Z",
      "mergedAt": "2024-02-06T07:04:44Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "6eaf6e59123cdb213902a3602b55cbac9d50120e"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Should we consider registering an IANA registry? As RFC7800 did here: https://www.rfc-editor.org/rfc/rfc7800.html#section-6.2",
          "createdAt": "2023-12-21T20:07:42Z",
          "updatedAt": "2023-12-21T20:12:45Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "This changed quite a bit with the recent bigger PR (and had some merge conflicts) -> please check again :/ @paulbastian @tplooker ",
          "createdAt": "2024-01-19T14:13:54Z",
          "updatedAt": "2024-01-19T14:13:54Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I'll add a small section as an introduction / to explain the `status` expansion idea (similar to `cnf` claim) over the weekend",
          "createdAt": "2024-01-19T14:15:50Z",
          "updatedAt": "2024-01-19T14:15:50Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the text in the introduction is a little weird. I checked what 7800 wrote:\n\n> Other members of the \"cnf\"\n   object may be defined because a proof-of-possession key may not be\n   the only means of confirming the authenticity of the token\n\n> This specification establishes the IANA \"JWT Confirmation Methods\"\n   registry for these members in Section 6.2 and registers the members\n   defined by this specification.  Other specifications can register\n   other members used for confirmation, including other members for\n   conveying proof-of-possession keys using different key representations.\n\nI think the text may be more subtle along this lines. I would omit \"we expect more in the future\" which doesn't age well in a standard and be more neutral, just saying that we establish a registry for other mechanisms?\n",
          "createdAt": "2024-01-31T08:27:08Z",
          "updatedAt": "2024-01-31T08:27:08Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> I think the text in the introduction is a little weird. I checked what 7800 wrote:\r\n> \r\n> > Other members of the \"cnf\"\r\n> > object may be defined because a proof-of-possession key may not be\r\n> > the only means of confirming the authenticity of the token\r\n> \r\n> > This specification establishes the IANA \"JWT Confirmation Methods\"\r\n> > registry for these members in Section 6.2 and registers the members\r\n> > defined by this specification.  Other specifications can register\r\n> > other members used for confirmation, including other members for\r\n> > conveying proof-of-possession keys using different key representations.\r\n> \r\n> I think the text may be more subtle along this lines. I would omit \"we expect more in the future\" which doesn't age well in a standard and be more neutral, just saying that we establish a registry for other mechanisms?\r\n\r\nSounds reasonable - i will propose a change",
          "createdAt": "2024-02-01T13:37:46Z",
          "updatedAt": "2024-02-01T13:37:46Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I changed the text and realized that the IANA text in general needs some work, could you please re-review the current state? I am not super happy with this version but imho let's go with something like this for the time being and revisit a bit later (and fix all of the IANA related things).",
          "createdAt": "2024-02-02T14:35:35Z",
          "updatedAt": "2024-02-02T15:02:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5q6FtN",
          "commit": {
            "abbreviatedOid": "5aa3ace"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good to me. Maybe merge after #89 ",
          "createdAt": "2023-12-21T20:07:01Z",
          "updatedAt": "2023-12-21T20:07:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5r5XfA",
          "commit": {
            "abbreviatedOid": "5aa3ace"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-08T23:41:16Z",
          "updatedAt": "2024-01-08T23:41:16Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "If we make this a MUST then won't other future mechanisms only be additional rather than alternatives?",
              "createdAt": "2024-01-08T23:41:16Z",
              "updatedAt": "2024-01-08T23:41:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5r8iKF",
          "commit": {
            "abbreviatedOid": "5aa3ace"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T12:11:58Z",
          "updatedAt": "2024-01-09T12:11:58Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "this is only a MUST for the mechanism used in the specification. If Giuseppe wants to implement an OCSP-like mechanism than it would look mlike:\r\n```json\r\n\"status\" : {\r\n  \"new-mechanism-name\" : {\r\n    \"whatever-parameter\" : \"whatever-value\"\r\n  }\r\n}  \r\n```",
              "createdAt": "2024-01-09T12:11:58Z",
              "updatedAt": "2024-01-09T12:11:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5r8lEI",
          "commit": {
            "abbreviatedOid": "5aa3ace"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T12:19:13Z",
          "updatedAt": "2024-01-09T12:19:14Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Yeah, that was the intention. For this spec, the existence of `status_list` is a MUST, but other status mechanisms can reuse the `status` claim and define other behaviour depending on other claims within status.",
              "createdAt": "2024-01-09T12:19:14Z",
              "updatedAt": "2024-01-09T12:19:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5r8nXj",
          "commit": {
            "abbreviatedOid": "5aa3ace"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T12:25:06Z",
          "updatedAt": "2024-01-09T12:25:06Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I think we may need some text to the introduction that explains this in more detail. However its more better to merge #89 first and then start working from there",
              "createdAt": "2024-01-09T12:25:06Z",
              "updatedAt": "2024-01-09T12:25:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5tQKgz",
          "commit": {
            "abbreviatedOid": "523c053"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Changes look good so far",
          "createdAt": "2024-01-19T15:02:24Z",
          "updatedAt": "2024-01-19T15:02:50Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Maybe swap the order of Uri and idx?",
              "createdAt": "2024-01-19T15:02:24Z",
              "updatedAt": "2024-01-19T15:02:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5ucrY-",
          "commit": {
            "abbreviatedOid": "21dc0f1"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-31T06:59:21Z",
          "updatedAt": "2024-01-31T06:59:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5uy1AT",
          "commit": {
            "abbreviatedOid": "523c053"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-02T09:52:14Z",
          "updatedAt": "2024-02-02T09:52:14Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Current ordering is alphabetical which matches the examples and what afaik most json libraries will generate - that was my main intention for this ordering",
              "createdAt": "2024-02-02T09:52:14Z",
              "updatedAt": "2024-02-02T09:52:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5u9O9F",
          "commit": {
            "abbreviatedOid": "066b9ab"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-02-04T19:31:54Z",
          "updatedAt": "2024-02-05T10:45:20Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\nThis specification establishes the IANA \"Status Mechanism Methods\" registry for status mechanism and registers the members defined by this specification. Other specifications can register other members used for status retrieval.\n```\n",
              "createdAt": "2024-02-04T19:31:54Z",
              "updatedAt": "2024-02-05T10:45:20Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\n* the specification shall design an extension point to convey information about the status of a token that can be re-used by other mechanisms\n```\n",
              "createdAt": "2024-02-04T19:33:34Z",
              "updatedAt": "2024-02-05T10:45:20Z"
            },
            {
              "originalPosition": 40,
              "body": "it seems this is in the wrong chapter?",
              "createdAt": "2024-02-05T10:39:23Z",
              "updatedAt": "2024-02-05T10:45:20Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nBy including a \"status\" claim in a Referenced Token, the issuer is referencing a mechanism to retrieve status information about this Referenced Token. The claim contains members used to reference to a status list as defined in this specification. Other members of the \"status\" object may be defined by other specifications. This is analogous to \"cnf\" claim in Section 3.1 of {{RFC7800}} in which different authenticity confirmation methods can be included.\r\n```\r\nmake it more general",
              "createdAt": "2024-02-05T10:45:01Z",
              "updatedAt": "2024-02-05T10:45:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5vBKJ-",
          "commit": {
            "abbreviatedOid": "066b9ab"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-05T12:06:35Z",
          "updatedAt": "2024-02-05T12:06:35Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I formulated this for JWT specifically as a starting point. This is similar to the JWT cnf registry. My current understanding is that we need to define 2 registries for \"status\" - one for JWT and one for CWT.\r\nI guess I should adjust the title to match it - let's discuss in the editors call about this issue imho.",
              "createdAt": "2024-02-05T12:06:35Z",
              "updatedAt": "2024-02-05T12:06:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5vCqYu",
          "commit": {
            "abbreviatedOid": "3fcdf5d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-05T14:37:14Z",
          "updatedAt": "2024-02-05T14:37:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5vIICu",
          "commit": {
            "abbreviatedOid": "3fcdf5d"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-06T06:57:53Z",
          "updatedAt": "2024-02-06T06:57:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 91,
      "id": "PR_kwDOJZ2aqs5i8qRn",
      "title": "Rename  Draft Title",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/91",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #77 \r\n\r\n## \ud83d\udcd1 Description\r\n<!-- Add a brief description of the pr -->\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-12-29T17:59:17Z",
      "updatedAt": "2024-08-28T20:50:03Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "5e89ba2bea20e16e8d6f1533bd4e5745758866d4",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "77-rename-draft-to-oauth-token-status-list",
      "headRefOid": "b58d0de12e7428043d3f8a1a6e46b91ce04275ba",
      "closedAt": "2024-01-09T12:06:00Z",
      "mergedAt": "2024-01-09T12:06:00Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "bad9ef35ed98cbbf932dc0ca74618ccbaff9c315"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5rsKXp",
          "commit": {
            "abbreviatedOid": "b58d0de"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-05T19:45:26Z",
          "updatedAt": "2024-01-05T19:45:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5r5XQr",
          "commit": {
            "abbreviatedOid": "b58d0de"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-08T23:39:59Z",
          "updatedAt": "2024-01-08T23:39:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOJZ2aqs5kkAqK",
      "title": "Bump jwcrypto from 1.4.2 to 1.5.1 in /src",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/95",
      "state": "CLOSED",
      "author": "dependabot",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "dependencies"
      ],
      "body": "Bumps [jwcrypto](https://github.com/latchset/jwcrypto) from 1.4.2 to 1.5.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/latchset/jwcrypto/releases\">jwcrypto's releases</a>.</em></p>\n<blockquote>\n<h2>Version 1.5.1 - Security Release</h2>\n<p>This is a minor security release to fix a potential DoS for applications that allow the use of symmetric keys with pbkdf2.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix X22519 import/export from PEM by <a href=\"https://github.com/achamayou\"><code>@\u200bachamayou</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/334\">latchset/jwcrypto#334</a></li>\n<li>Read the Docs now requires a config file by <a href=\"https://github.com/simo5\"><code>@\u200bsimo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/335\">latchset/jwcrypto#335</a></li>\n<li>chore: refactor for removing pdb symbols by <a href=\"https://github.com/peppelinux\"><code>@\u200bpeppelinux</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/330\">latchset/jwcrypto#330</a></li>\n<li>Fix potential DoS issue with p2c header by <a href=\"https://github.com/simo5\"><code>@\u200bsimo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/336\">latchset/jwcrypto#336</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/achamayou\"><code>@\u200bachamayou</code></a> made their first contribution in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/334\">latchset/jwcrypto#334</a></li>\n<li><a href=\"https://github.com/peppelinux\"><code>@\u200bpeppelinux</code></a> made their first contribution in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/330\">latchset/jwcrypto#330</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/latchset/jwcrypto/compare/v1.5.0...v1.5.1\">https://github.com/latchset/jwcrypto/compare/v1.5.0...v1.5.1</a></p>\n<h2>v1.5.0</h2>\n<p>Version 1.5</p>\n<p>Minor bugfixes and the addition of Brainpool curves.\nAs mentioned in the commit: &quot;The use of these algorithms is specified solely by the gematik GmbH \u2013 National Digital Health Agency - for use in german e-health applications&quot;</p>\n<p>This version also raises the minimum Cryptography version required to 3.4 and the minimum python version tested to 3.7</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Raising the bar for minimum pyca/cryptography by <a href=\"https://github.com/simo5\"><code>@\u200bsimo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/306\">latchset/jwcrypto#306</a></li>\n<li>Fix typos with codespell by <a href=\"https://github.com/cclauss\"><code>@\u200bcclauss</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/307\">latchset/jwcrypto#307</a></li>\n<li>Add codespell checks in CI by <a href=\"https://github.com/simo5\"><code>@\u200bsimo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/308\">latchset/jwcrypto#308</a></li>\n<li>Add Brainpool EC-curves support by <a href=\"https://github.com/spilikin\"><code>@\u200bspilikin</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/309\">latchset/jwcrypto#309</a></li>\n<li>Fix error message by <a href=\"https://github.com/Cito\"><code>@\u200bCito</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/318\">latchset/jwcrypto#318</a></li>\n<li>Fix  assorted CI issue by <a href=\"https://github.com/simo5\"><code>@\u200bsimo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/319\">latchset/jwcrypto#319</a></li>\n<li>Better support for algorithms that have different input keysize requirement by <a href=\"https://github.com/simo5\"><code>@\u200bsimo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/324\">latchset/jwcrypto#324</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/spilikin\"><code>@\u200bspilikin</code></a> made their first contribution in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/309\">latchset/jwcrypto#309</a></li>\n<li><a href=\"https://github.com/Cito\"><code>@\u200bCito</code></a> made their first contribution in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/318\">latchset/jwcrypto#318</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/latchset/jwcrypto/compare/v1.4.2...v1.5.0\">https://github.com/latchset/jwcrypto/compare/v1.4.2...v1.5.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/8ae0df6538b8d8aa52e82105ec5132d289ad9ddd\"><code>8ae0df6</code></a> Version 1.5.1</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/066d13f2dbac3c0be7aa2a3023189980d56b86ab\"><code>066d13f</code></a> Update Security Policy</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/d2655d370586cb830e49acfb450f87598da60be8\"><code>d2655d3</code></a> Fix potential DoS issue with p2c header</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/6ee0e8915a22f2aed5346ec8a0116ce1cc64349a\"><code>6ee0e89</code></a> chore: arg renamed</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/d64536b102049c6b08bd8ce155a6bf578c653bfa\"><code>d64536b</code></a> chore: refactor for removing pdb symbols</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/ac40895d57422ec4e93cd7c53d430b532448687d\"><code>ac40895</code></a> Read the Docs now requires a config file</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/4c900198a25bbe0c71a9d3a09c8c378920f40887\"><code>4c90019</code></a> Fix X25519 import/export from PEM</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/41fb08a00ad2a36a1d85bf77ad973b31144ef9f2\"><code>41fb08a</code></a> Version 1.5</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/db1f9f4535fb8d9900aec8f31bef11f298e50f5d\"><code>db1f9f4</code></a> Add test to generate key with algorithm</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/e08cbf162aff952923eaaa4993669cf22bd26fd0\"><code>e08cbf1</code></a> Use separate input_keysize property</li>\n<li>Additional commits viewable in <a href=\"https://github.com/latchset/jwcrypto/compare/v1.4.2...v1.5.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jwcrypto&package-manager=pip&previous-version=1.4.2&new-version=1.5.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/vcstuff/draft-ietf-oauth-status-list/network/alerts).\n\n</details>",
      "createdAt": "2024-01-19T15:59:28Z",
      "updatedAt": "2024-01-19T16:09:06Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "8bf472ac4e3b6aaca67cc5f789aaa4984ed0969c",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "dependabot/pip/src/jwcrypto-1.5.1",
      "headRefOid": "da48ba5a50c4165285350ef34212f6abdc193d05",
      "closedAt": "2024-01-19T16:08:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "dependabot",
          "authorAssociation": "NONE",
          "body": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.",
          "createdAt": "2024-01-19T16:08:59Z",
          "updatedAt": "2024-01-19T16:08:59Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 97,
      "id": "PR_kwDOJZ2aqs5lic3i",
      "title": "added newline to fix rendering for history",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/97",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "## \ud83d\udcd1 Description\r\nfixes the rendering of the last history (01)\r\n\r\n## Preview Link\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/c2bo/history-rendering/draft-ietf-oauth-status-list.html)",
      "createdAt": "2024-01-31T07:52:02Z",
      "updatedAt": "2024-08-28T20:50:06Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "8bf472ac4e3b6aaca67cc5f789aaa4984ed0969c",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/history-rendering",
      "headRefOid": "54e767a7bc52cb1f33b3d7cab5842aa5234f4607",
      "closedAt": "2024-02-05T10:04:30Z",
      "mergedAt": "2024-02-05T10:04:30Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "f4ad8f7f796f67285a7562e54641a273173a33a0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5udBLg",
          "commit": {
            "abbreviatedOid": "54e767a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-31T08:04:26Z",
          "updatedAt": "2024-01-31T08:04:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 98,
      "id": "PR_kwDOJZ2aqs5mAXiP",
      "title": "Add placeholder for cbor-based referenced tokens",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/98",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "see title",
      "createdAt": "2024-02-05T10:48:36Z",
      "updatedAt": "2024-02-05T12:25:11Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f4ad8f7f796f67285a7562e54641a273173a33a0",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "referenced-token-cbor",
      "headRefOid": "c2807c8e3b23124da90bcaf42c8eb77dfcf41e10",
      "closedAt": "2024-02-05T12:25:02Z",
      "mergedAt": "2024-02-05T12:25:02Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "7844a82ff77920fe7f41b5b55d6e0d89a989f1c6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5vBK4Z",
          "commit": {
            "abbreviatedOid": "c2807c8"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-05T12:07:15Z",
          "updatedAt": "2024-02-05T12:07:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 99,
      "id": "PR_kwDOJZ2aqs5mG6F3",
      "title": "Editorial changes + fix codeowners",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/99",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Some spelling fixes\r\nAdd IANA registry to history\r\nadd myself to codeowners\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/c2bo/minor-edits/draft-ietf-oauth-status-list.html)",
      "createdAt": "2024-02-06T07:17:08Z",
      "updatedAt": "2024-02-06T07:19:00Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "6eaf6e59123cdb213902a3602b55cbac9d50120e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/minor-edits",
      "headRefOid": "2c62e90bf5374d25b20bcc6d8c0ef8b03015dd4c",
      "closedAt": "2024-02-06T07:18:56Z",
      "mergedAt": "2024-02-06T07:18:56Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "abe3214cd79226c9735ab8a62401242af61dbbc6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5vIOWp",
          "commit": {
            "abbreviatedOid": "2c62e90"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-06T07:18:48Z",
          "updatedAt": "2024-02-06T07:18:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 100,
      "id": "PR_kwDOJZ2aqs5mSC7M",
      "title": "clarifying deflate/zlib",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/100",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #94 ",
      "createdAt": "2024-02-07T16:20:46Z",
      "updatedAt": "2024-08-28T20:50:07Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "abe3214cd79226c9735ab8a62401242af61dbbc6",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "94-deflate-in-zlib",
      "headRefOid": "768e84a3e6508cb8afa84a68ce418b55480ff065",
      "closedAt": "2024-02-13T07:25:42Z",
      "mergedAt": "2024-02-13T07:25:42Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "f960404e4f3745885434566cad9c6a6dff42f19e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5vYJCf",
          "commit": {
            "abbreviatedOid": "768e84a"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-07T19:22:16Z",
          "updatedAt": "2024-02-07T19:22:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5v4NUH",
          "commit": {
            "abbreviatedOid": "768e84a"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T07:12:10Z",
          "updatedAt": "2024-02-13T07:12:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 101,
      "id": "PR_kwDOJZ2aqs5nKF9k",
      "title": "add initial ttl language",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/101",
      "state": "MERGED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #96 \r\n\r\nAlternative to #49 as it had gone stale.",
      "createdAt": "2024-02-17T09:27:41Z",
      "updatedAt": "2024-08-28T20:50:09Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "0b836009d13c807fa5e56177748512332482a5d2",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "tl/tll",
      "headRefOid": "c79efd9f95a3581c833d8483d1465a96d32e4d1a",
      "closedAt": "2024-02-27T19:40:08Z",
      "mergedAt": "2024-02-27T19:40:08Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "1b1a63f8fbfbc290c9da395d07c608f77b638ca9"
      },
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I moved the claim registration up - we have to do CWT registration after the CBOR/CWT PR has been merged - i'll create an issue for this",
          "createdAt": "2024-02-27T10:18:09Z",
          "updatedAt": "2024-02-27T10:18:09Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5wckKP",
          "commit": {
            "abbreviatedOid": "61a4d30"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-17T10:49:59Z",
          "updatedAt": "2024-02-17T10:49:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5wcpDo",
          "commit": {
            "abbreviatedOid": "61a4d30"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-02-17T12:13:02Z",
          "updatedAt": "2024-02-17T12:15:36Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "This section should be moved up to line ~450 where \"status\" is defined for JWT",
              "createdAt": "2024-02-17T12:13:03Z",
              "updatedAt": "2024-02-17T12:15:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wcqkj",
          "commit": {
            "abbreviatedOid": "61a4d30"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-17T12:18:41Z",
          "updatedAt": "2024-02-17T12:18:41Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n* `ttl`: OPTIONAL. The `ttl` (time to live) claim, if present, MUST specify the maximum amount of time, in seconds, that the Status List Token may be cached by a consumer before a fresh copy is retrieved. The value of the claim MUST be a positive number.\r\n```",
              "createdAt": "2024-02-17T12:18:41Z",
              "updatedAt": "2024-02-17T12:18:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wcqoW",
          "commit": {
            "abbreviatedOid": "61a4d30"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-17T12:19:33Z",
          "updatedAt": "2024-02-17T12:19:33Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nin the Status List Token provides one mechanism for setting a maximum cache time for the fetched data. This property permits distribution of\r\n```",
              "createdAt": "2024-02-17T12:19:33Z",
              "updatedAt": "2024-02-17T12:19:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wcqok",
          "commit": {
            "abbreviatedOid": "61a4d30"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-17T12:19:43Z",
          "updatedAt": "2024-02-17T12:19:43Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\na status list to a CDN or other distribution mechanism while giving guidance to consumers of the status list on how often they need to fetch\r\n```",
              "createdAt": "2024-02-17T12:19:43Z",
              "updatedAt": "2024-02-17T12:19:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wonWf",
          "commit": {
            "abbreviatedOid": "559b370"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T07:51:24Z",
          "updatedAt": "2024-02-20T07:51:24Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n* `ttl`: OPTIONAL. The `ttl` (time to live) claim, if present, MUST specify the maximum amount of time, in seconds, that the Status List Token can be cached by a consumer before a fresh copy SHOULD be retrieved. The value of the claim MUST be a positive number.\r\n```",
              "createdAt": "2024-02-20T07:51:24Z",
              "updatedAt": "2024-02-20T07:51:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xbyiO",
          "commit": {
            "abbreviatedOid": "c79efd9"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T10:22:11Z",
          "updatedAt": "2024-02-27T10:22:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 102,
      "id": "PR_kwDOJZ2aqs5nKlqR",
      "title": "relax requirements referenced token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/102",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixes most of #92 \r\n\r\n## \ud83d\udcd1 Description\r\n- Relaxes requirements on referenced token in terminology\r\n- issuer in status list token is only required when also present in referenced token (and matching checked)\r\n- reorder references\r\n\r\n\r\n## Preview Link\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/c2bo/relax-referenced-token/draft-ietf-oauth-status-list.html)",
      "createdAt": "2024-02-17T12:52:48Z",
      "updatedAt": "2024-02-20T07:26:47Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f960404e4f3745885434566cad9c6a6dff42f19e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/relax-referenced-token",
      "headRefOid": "bf93b7e858c7ccfa6d2f72eb79e59bdcff55daea",
      "closedAt": "2024-02-20T07:26:33Z",
      "mergedAt": "2024-02-20T07:26:33Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "ff54acebe619eb51ccdf3f0e14d9d4c3db63ed79"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5wfT_K",
          "commit": {
            "abbreviatedOid": "e90099b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-18T14:52:53Z",
          "updatedAt": "2024-02-18T14:55:27Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I'm unsure about the word container, maybe token is better",
              "createdAt": "2024-02-18T14:52:53Z",
              "updatedAt": "2024-02-18T14:55:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5woX2X",
          "commit": {
            "abbreviatedOid": "e90099b"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T07:08:07Z",
          "updatedAt": "2024-02-20T07:08:07Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I agree I think token is better.",
              "createdAt": "2024-02-20T07:08:07Z",
              "updatedAt": "2024-02-20T07:08:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5woYhm",
          "commit": {
            "abbreviatedOid": "e90099b"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T07:10:20Z",
          "updatedAt": "2024-02-20T07:10:20Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Maybe \"A cryptographically secured data structure\"",
              "createdAt": "2024-02-20T07:10:20Z",
              "updatedAt": "2024-02-20T07:10:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5woZT1",
          "commit": {
            "abbreviatedOid": "e90099b"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T07:12:53Z",
          "updatedAt": "2024-02-20T07:12:53Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n: A cryptographically secured data structure which contains a reference to a Status List or Status List Token. It is RECOMMENDED to use JSON {{RFC8259}} or CBOR {{8949}} for representation of the token and secure it using JSON Object Signing as defined in {{RFC7515}} or CBOR Object Signing and Encryption as defined in {{RFC8152}} respectively. The information from the contained Status List may give a Relying Party additional information about up-to-date status of the Referenced Token.\r\n```",
              "createdAt": "2024-02-20T07:12:53Z",
              "updatedAt": "2024-02-20T07:15:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5woaFV",
          "commit": {
            "abbreviatedOid": "e90099b"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T07:15:23Z",
          "updatedAt": "2024-02-20T07:15:23Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n  RFC8152: RFC8152\r\n  RFC8259: RFC8259\r\n  RFC8392: RFC8392\r\n  RFC8949: RFC8949\r\n```",
              "createdAt": "2024-02-20T07:15:23Z",
              "updatedAt": "2024-02-20T07:15:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wobJ_",
          "commit": {
            "abbreviatedOid": "e90099b"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T07:18:44Z",
          "updatedAt": "2024-02-20T07:18:44Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\n* `iss`: REQUIRED when also present in the Status List Token. The `iss` (issuer) claim MUST specify a unique string identifier for the entity that issued the Referenced Token. In the absence of an application profile specifying otherwise, compliant applications MUST compare issuer values using the Simple String Comparison method defined in Section 6.2.1 of {{RFC3986}}. The value MUST be equal to that of the `iss` claim contained within the referenced Status List Token.\r\n```",
              "createdAt": "2024-02-20T07:18:44Z",
              "updatedAt": "2024-02-20T07:18:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wobPa",
          "commit": {
            "abbreviatedOid": "f2921ac"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-20T07:18:59Z",
          "updatedAt": "2024-02-20T07:18:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5wobzh",
          "commit": {
            "abbreviatedOid": "a3eb5dc"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T07:20:45Z",
          "updatedAt": "2024-02-20T07:20:45Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n: A cryptographically secured data structure which contains a reference to a Status List or Status List Token. It is RECOMMENDED to use JSON {{RFC8259}} or CBOR {{RFC8949}} for representation of the token and secure it using JSON Object Signing as defined in {{RFC7515}} or CBOR Object Signing and Encryption as defined in {{RFC8152}}. The information from the contained Status List may give a Relying Party additional information about up-to-date status of the Referenced Token.\r\n```",
              "createdAt": "2024-02-20T07:20:45Z",
              "updatedAt": "2024-02-20T07:20:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 103,
      "id": "PR_kwDOJZ2aqs5nToXW",
      "title": "add SD-JWT VC as reference to the Issuer-Holder-Verifier model",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/103",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses # <!-- Issue # here -->\r\n\r\n## \ud83d\udcd1 Description\r\n<!-- Add a brief description of the pr -->\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/paulbastian/sd-jwt-ref#go.draft-ietf-oauth-status-list.html)",
      "createdAt": "2024-02-19T16:06:51Z",
      "updatedAt": "2024-08-28T20:50:08Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f960404e4f3745885434566cad9c6a6dff42f19e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "paulbastian/sd-jwt-ref",
      "headRefOid": "19ab5a5a35ebab6fbfb9ea83365c329408adabee",
      "closedAt": "2024-02-20T07:19:52Z",
      "mergedAt": "2024-02-20T07:19:52Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "22bffb592d9ea5fb127b8b66e690edc0b61c04a7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5wl7RY",
          "commit": {
            "abbreviatedOid": "f2b03d6"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-19T18:21:04Z",
          "updatedAt": "2024-02-19T18:21:05Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n  SDJWTVC: I-D.ietf-oauth-sd-jwt-vc\r\n```",
              "createdAt": "2024-02-19T18:21:04Z",
              "updatedAt": "2024-02-19T18:21:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5wmjsY",
          "commit": {
            "abbreviatedOid": "19ab5a5"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-19T20:56:48Z",
          "updatedAt": "2024-02-19T20:56:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5wobb-",
          "commit": {
            "abbreviatedOid": "19ab5a5"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-20T07:19:36Z",
          "updatedAt": "2024-02-20T07:19:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 104,
      "id": "PR_kwDOJZ2aqs5nUfhH",
      "title": "fix broken references",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/104",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "## Preview Link\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/c2bo/fix-references/draft-ietf-oauth-status-list.html)",
      "createdAt": "2024-02-19T18:45:43Z",
      "updatedAt": "2024-08-28T20:50:08Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "ff54acebe619eb51ccdf3f0e14d9d4c3db63ed79",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-references",
      "headRefOid": "c529788f6920110f7e86c18e2e66d6c2fd71ebfe",
      "closedAt": "2024-02-20T14:59:41Z",
      "mergedAt": "2024-02-20T14:59:41Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "0b836009d13c807fa5e56177748512332482a5d2"
      },
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "waiting for the other PRs to merge",
          "createdAt": "2024-02-19T18:49:02Z",
          "updatedAt": "2024-02-19T18:49:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5wogwu",
          "commit": {
            "abbreviatedOid": "782ffe7"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T07:34:13Z",
          "updatedAt": "2024-02-20T07:34:14Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nthe \"Media Types\" registry{{IANA.MediaTypes}} in the manner described\r\nin {{RFC6838}}.\r\n```",
              "createdAt": "2024-02-20T07:34:13Z",
              "updatedAt": "2024-02-20T07:34:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5woqpH",
          "commit": {
            "abbreviatedOid": "c529788"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-20T07:59:23Z",
          "updatedAt": "2024-02-20T07:59:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 105,
      "id": "PR_kwDOJZ2aqs5nVTP7",
      "title": "improve privacy consideration to recommend re-issuance",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/105",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses # <!-- Issue # here -->\r\n\r\n## \ud83d\udcd1 Description\r\n<!-- Add a brief description of the pr -->\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2024-02-19T21:56:14Z",
      "updatedAt": "2024-03-04T06:08:22Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f960404e4f3745885434566cad9c6a6dff42f19e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "60-privacy-considerations",
      "headRefOid": "3983ad279f4791f83edc27f57aa3a0621827545b",
      "closedAt": "2024-03-04T06:08:11Z",
      "mergedAt": "2024-03-04T06:08:11Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "32f5c8bc2f4bed7ce2853eff73b7e024678e9e10"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5w5w3F",
          "commit": {
            "abbreviatedOid": "949c4cb"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-02-21T18:56:53Z",
          "updatedAt": "2024-02-21T20:01:07Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nThe lifetime of a Status List (and the Status List Token) depends on the lifetime of its Referenced Tokens. Once all Referenced Tokens are expired, the Issuer may stop serving the Status List (and the Status List Token).\r\n```",
              "createdAt": "2024-02-21T18:56:53Z",
              "updatedAt": "2024-02-21T20:01:07Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nReferenced Tokens may be regularly re-issued to increase security or to mitigate linkability and prevent tracking by Relying Parties. In this case, every Referenced Token SHOULD have a fresh Status List entry.\r\n```\r\nI agree in general, but i do believe this should be a SHOULD?",
              "createdAt": "2024-02-21T19:58:18Z",
              "updatedAt": "2024-02-21T20:01:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5w9hRK",
          "commit": {
            "abbreviatedOid": "b51246a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-22T08:07:35Z",
          "updatedAt": "2024-02-22T08:07:35Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I thought about this as well, but we also have a similar consideration in place for batch-issuance and we mandate separate indices with MUST there as well",
              "createdAt": "2024-02-22T08:07:35Z",
              "updatedAt": "2024-02-22T08:07:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xONhF",
          "commit": {
            "abbreviatedOid": "b51246a"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-24T18:25:29Z",
          "updatedAt": "2024-02-24T18:25:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5xONiS",
          "commit": {
            "abbreviatedOid": "949c4cb"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-24T18:26:18Z",
          "updatedAt": "2024-02-24T18:26:18Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Let's revisit this point again later on but you are right - this seems to be consistent with the rest of the draft right now",
              "createdAt": "2024-02-24T18:26:18Z",
              "updatedAt": "2024-02-24T18:26:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5yBQc5",
          "commit": {
            "abbreviatedOid": "b51246a"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-03T09:48:41Z",
          "updatedAt": "2024-03-03T09:48:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n## Limiting issuers observability of token verification {#privacy-issuer}\r\n```",
              "createdAt": "2024-03-03T09:48:41Z",
              "updatedAt": "2024-03-03T09:48:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5yDMHd",
          "commit": {
            "abbreviatedOid": "3983ad2"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T06:07:59Z",
          "updatedAt": "2024-03-04T06:07:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "PR_kwDOJZ2aqs5nVlIe",
      "title": "Add CBOR/CWT encoding",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/106",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #3\r\nCloses #109 \r\nCloses #110 \r\n\r\n## \ud83d\udcd1 Description\r\nThis PR adds:\r\n- CBOR/CWT encoding for status list and status list info\r\n- Example implementation for CBOR/CWT\r\n\r\nNot included yet: examples for referenced tokens (COSE, CWT) but that should be trivial to add.\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://vcstuff.github.io/draft-ietf-oauth-status-list/awoie/add-cwt/draft-ietf-oauth-status-list.html)",
      "createdAt": "2024-02-19T23:31:12Z",
      "updatedAt": "2024-08-28T20:50:10Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1b1a63f8fbfbc290c9da395d07c608f77b638ca9",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "awoie/add-cwt",
      "headRefOid": "2607d3b11a1b9fae7f38461a1bd3b4a3ec164bb4",
      "closedAt": "2024-03-03T21:35:51Z",
      "mergedAt": "2024-03-03T21:35:51Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "0da03a10b348ce2086439b390c1a39cbc05636ee"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The decoded cbor is:\r\n`{\"bits\": 1, \"lst\": h'78dadbb918000217015d'}`\r\n\r\nThe list does not seem to be valid zlib.",
          "createdAt": "2024-02-20T07:26:16Z",
          "updatedAt": "2024-02-20T07:26:16Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I've tried with cyberchef and it seems to work for me:\r\n`0x78dadbb918000217015d` -> zlib inflate = `b9 a3`",
          "createdAt": "2024-02-20T10:42:10Z",
          "updatedAt": "2024-02-20T10:42:10Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "You are right, I probably tried on the hexstring :D",
          "createdAt": "2024-02-20T11:53:59Z",
          "updatedAt": "2024-02-20T11:53:59Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I assume there will be a lot of comments. I had some troubles with the `status` claim language for non-CWTs btw. Please review and give feedback. @paulbastian @c2bo @tplooker ",
          "createdAt": "2024-02-20T14:26:10Z",
          "updatedAt": "2024-02-20T14:26:10Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I was wondering whether it would be better to define a CDDL for Status, StatusList and StatusListInfo. Basically, having a high-level CDDl description of all objects and then having some specific sections for JWT, COSE, CWT that define how they are used in the corresponding objects.",
          "createdAt": "2024-02-20T14:27:29Z",
          "updatedAt": "2024-02-20T14:27:29Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also keep in mind that `status` claim for CWT will require IANA to assign us an integer number, so we can use it in the CWT.",
          "createdAt": "2024-02-20T14:28:32Z",
          "updatedAt": "2024-02-20T14:28:32Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "There is a problem with the width of the CBOR diagnostic notation examples. The datatracker only allows a width of 72, but cborg defaults to 100 and apparently can't be configured in CLI mode.",
          "createdAt": "2024-02-24T18:31:33Z",
          "updatedAt": "2024-02-24T18:31:33Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> There is a problem with the width of the CBOR diagnostic notation examples. The datatracker only allows a width of 72, but cborg defaults to 100 and apparently can't be configured in CLI mode.\r\n\r\nI can write a small JS script that uses the cborg library and configures the width to 72. Would this be even possible? I didn't check by myself.",
          "createdAt": "2024-02-26T08:51:11Z",
          "updatedAt": "2024-02-26T08:51:11Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Yes that would be possible and is the only option I have found so far. I was searching for a pure python solution (which would be cleaner imho) but that seems to be not possible right now.",
          "createdAt": "2024-02-26T09:00:18Z",
          "updatedAt": "2024-02-26T09:00:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5wtkC-",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T17:03:44Z",
          "updatedAt": "2024-02-20T17:03:44Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nThis section defines the structure for a CBOR-encoded Status List:\r\n\r\n* The `StatusList` structure is a map (Major Type 5) and defines the following entries:\r\n  * `bits`: REQUIRED. Unsigned int (Major Type 0) that contains the number of bits in the per Referenced Token in the Status List. The allowed values for `bits` are 1, 2, 4 and 8.\r\n  * `lst`: REQUIRED. Byte string (Major Type 2) that contains the Status List as specified in [](#status-list-json).\r\n```",
              "createdAt": "2024-02-20T17:03:44Z",
              "updatedAt": "2024-02-20T17:03:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5w9ki_",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-22T08:14:43Z",
          "updatedAt": "2024-02-22T08:14:43Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Are we considering to register a CBOR tag for StatusList itself?",
              "createdAt": "2024-02-22T08:14:43Z",
              "updatedAt": "2024-02-22T08:14:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5w-9p9",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-22T10:59:47Z",
          "updatedAt": "2024-02-22T10:59:47Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "No, this is not needed.",
              "createdAt": "2024-02-22T10:59:47Z",
              "updatedAt": "2024-02-22T10:59:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5w-UU2",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-02-22T09:42:35Z",
          "updatedAt": "2024-02-22T17:41:28Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "I think the example is missing the content type header",
              "createdAt": "2024-02-22T09:42:35Z",
              "updatedAt": "2024-02-22T17:41:28Z"
            },
            {
              "originalPosition": 64,
              "body": "```suggestion\r\n```\r\nWe don't have this sentence in the JSON part and media types are explained later in Chapter 8",
              "createdAt": "2024-02-22T09:43:25Z",
              "updatedAt": "2024-02-22T17:41:28Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis specification defines status list data structures and processing rules for representing the status of tokens secured by JSON Object Signing and Encryption {{IANA.JOSE}} or CBOR Object Signing and Encryption {{RFC8152}}, such as JSON Web Tokens (JWTs) {{RFC7519}} and CBOR Web Tokens (CWTs) {{RFC8392}}.\r\n```",
              "createdAt": "2024-02-22T10:12:06Z",
              "updatedAt": "2024-02-22T17:41:28Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nToken formats secured by JOSE {{IANA.JOSE}} or COSE {{RFC8152}}, such as JSON Web Tokens (JWTs) {{RFC7519}} and CBOR Web Tokens (CWTs) {{RFC8392}} have vast possible applications. Some of these applications can involve issuing a token whereby certain semantics about the token can change over time, which are important to be able to communicate to relying parties in an interoperable manner, such as whether the token is considered invalidated or suspended by its issuer.\r\n```\r\nname ISO mdoc explicitly here as well?",
              "createdAt": "2024-02-22T10:13:55Z",
              "updatedAt": "2024-02-22T17:41:28Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n|   (JSON or CBOR)  <------------------+      (JOSE, COSE)      |\r\n```",
              "createdAt": "2024-02-22T10:14:18Z",
              "updatedAt": "2024-02-22T17:41:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xEAXz",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-22T20:19:46Z",
          "updatedAt": "2024-02-22T20:19:46Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Yep, the typ header is not defined in IANA yet. There is draft for that though. I can add the typ header but the label (14) is not confirmed yet.",
              "createdAt": "2024-02-22T20:19:46Z",
              "updatedAt": "2024-02-22T20:19:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xEAnk",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-22T20:20:28Z",
          "updatedAt": "2024-02-22T20:20:28Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "This is what CWT says about the media type. As noted above typ header in CWT/COSE is pending. ",
              "createdAt": "2024-02-22T20:20:28Z",
              "updatedAt": "2024-02-22T20:20:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xONp5",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-24T18:30:50Z",
          "updatedAt": "2024-02-24T18:30:50Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "That sounds like a good idea imho",
              "createdAt": "2024-02-24T18:30:50Z",
              "updatedAt": "2024-02-24T18:30:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xRcpv",
          "commit": {
            "abbreviatedOid": "9793ffc"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T09:47:30Z",
          "updatedAt": "2024-02-26T09:47:30Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Why not? The StatusList is a separate data structure that may live on its own, dependent from the StatusListToken. Doesn't it make sense in this case or should this be solved by media types alone?",
              "createdAt": "2024-02-26T09:47:30Z",
              "updatedAt": "2024-02-26T09:47:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xRdsa",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T09:49:25Z",
          "updatedAt": "2024-02-26T09:49:25Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Tags are usually not needed. In all cases, the structure of the CBOR is pre-defined. That is why CBOR tags are not really needed in most cases. ",
              "createdAt": "2024-02-26T09:49:25Z",
              "updatedAt": "2024-02-26T09:49:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xReHc",
          "commit": {
            "abbreviatedOid": "9793ffc"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T09:50:10Z",
          "updatedAt": "2024-02-26T09:50:11Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "and then we would use type instead of content type?",
              "createdAt": "2024-02-26T09:50:10Z",
              "updatedAt": "2024-02-26T09:50:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xRe-e",
          "commit": {
            "abbreviatedOid": "138e7a4"
          },
          "author": "awoie",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T09:51:46Z",
          "updatedAt": "2024-02-26T09:51:47Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Content type is about the secured payload which could be statuslist+cbor. typ could be statulist+cwt. Both can be used.",
              "createdAt": "2024-02-26T09:51:47Z",
              "updatedAt": "2024-02-26T09:51:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xS5uZ",
          "commit": {
            "abbreviatedOid": "9793ffc"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T12:40:53Z",
          "updatedAt": "2024-02-26T12:40:54Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Remove this when type is added",
              "createdAt": "2024-02-26T12:40:53Z",
              "updatedAt": "2024-02-26T12:40:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xS7hk",
          "commit": {
            "abbreviatedOid": "3d82764"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T12:44:46Z",
          "updatedAt": "2024-02-26T12:44:46Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nThis specification defines status list data structures and processing rules for representing the status of tokens secured by JSON Object Signing and Encryption {{IANA.JOSE}} or CBOR Object Signing and Encryption {{RFC9052}}, such as JSON Web Tokens (JWTs) {{RFC7519}}, CBOR Web Tokens (CWTs) {{RFC8392}} and ISO mdoc.\r\n```",
              "createdAt": "2024-02-26T12:44:46Z",
              "updatedAt": "2024-02-26T12:44:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xS8rD",
          "commit": {
            "abbreviatedOid": "3d82764"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T12:47:16Z",
          "updatedAt": "2024-02-26T12:47:17Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nToken formats secured by JOSE {{IANA.JOSE}} or COSE {{RFC9052}, such as JSON Web Tokens (JWTs) {{RFC7519}}, CBOR Web Tokens (CWTs) {{RFC8392}} and ISO mdoc, have vast possible applications. Some of these applications can involve issuing a token whereby certain semantics about the token can change over time, which are important to be able to communicate to relying parties in an interoperable manner, such as whether the token is considered invalidated or suspended by its issuer.\r\n```",
              "createdAt": "2024-02-26T12:47:16Z",
              "updatedAt": "2024-02-26T12:47:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xaMWZ",
          "commit": {
            "abbreviatedOid": "37a1491"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T07:14:48Z",
          "updatedAt": "2024-02-27T07:14:48Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n      name: \"M. B. Jones\"\r\n```",
              "createdAt": "2024-02-27T07:14:48Z",
              "updatedAt": "2024-02-27T07:14:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xaNgA",
          "commit": {
            "abbreviatedOid": "5d7d82f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T07:16:53Z",
          "updatedAt": "2024-02-27T07:16:53Z",
          "comments": [
            {
              "originalPosition": 159,
              "body": "```suggestion\r\nThe following is a non-normative example for a Status List Token in CWT format (not including the type header yet):\r\n```",
              "createdAt": "2024-02-27T07:16:53Z",
              "updatedAt": "2024-02-27T07:16:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xaP1y",
          "commit": {
            "abbreviatedOid": "fce8bbe"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T07:22:01Z",
          "updatedAt": "2024-02-27T07:22:02Z",
          "comments": [
            {
              "originalPosition": 186,
              "body": "recheck what pre-assigned number to get",
              "createdAt": "2024-02-27T07:22:01Z",
              "updatedAt": "2024-02-27T07:22:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xaQUo",
          "commit": {
            "abbreviatedOid": "fce8bbe"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T07:23:28Z",
          "updatedAt": "2024-02-27T07:23:28Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "```suggestion\r\nThe following content applies to the CWT Claims Set:\r\n```",
              "createdAt": "2024-02-27T07:23:28Z",
              "updatedAt": "2024-02-27T07:23:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xaSfv",
          "commit": {
            "abbreviatedOid": "027bd79"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T07:29:40Z",
          "updatedAt": "2024-02-27T07:29:40Z",
          "comments": [
            {
              "originalPosition": 313,
              "body": "```suggestion\r\n* add COSE/CWT/CBOR encoding\r\n```",
              "createdAt": "2024-02-27T07:29:40Z",
              "updatedAt": "2024-02-27T07:29:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5xaSoE",
          "commit": {
            "abbreviatedOid": "e810131"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T07:30:02Z",
          "updatedAt": "2024-02-27T07:30:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5x-bG1",
          "commit": {
            "abbreviatedOid": "2607d3b"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-01T22:35:42Z",
          "updatedAt": "2024-03-01T22:35:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs5yBQhG",
          "commit": {
            "abbreviatedOid": "2607d3b"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-03T09:50:19Z",
          "updatedAt": "2024-03-03T09:50:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 118,
      "id": "PR_kwDOJZ2aqs5ohcX0",
      "title": "upgrade python dependencies",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/118",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "upgrade python dependencies",
      "createdAt": "2024-03-03T21:44:00Z",
      "updatedAt": "2024-08-28T20:50:11Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "0da03a10b348ce2086439b390c1a39cbc05636ee",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/upgrade-dependencies",
      "headRefOid": "b917d71f880387e456e534baaa504d96e4f48261",
      "closedAt": "2024-03-04T06:07:36Z",
      "mergedAt": "2024-03-04T06:07:36Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "85e42a7f0e91b73d4974678c4c1e4dd6b615246a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5yDMAr",
          "commit": {
            "abbreviatedOid": "b917d71"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T06:07:32Z",
          "updatedAt": "2024-03-04T06:07:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 119,
      "id": "PR_kwDOJZ2aqs5ojKHN",
      "title": "add cborg dependency to publish workflow",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/119",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "add cborg dependency to publish workflow",
      "createdAt": "2024-03-04T07:03:43Z",
      "updatedAt": "2024-08-28T20:50:12Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "32f5c8bc2f4bed7ce2853eff73b7e024678e9e10",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-cborg-dependency",
      "headRefOid": "5a57a4a5962b3d9716b093a90cf5b479af770b2a",
      "closedAt": "2024-03-04T07:08:35Z",
      "mergedAt": "2024-03-04T07:08:35Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "1198edeff82efca8fc22d90b571d57c73813a338"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 124,
      "id": "PR_kwDOJZ2aqs5p6ing",
      "title": "fix references after moving the repo to the new org",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/124",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixes broken links\r\n\r\nfixes #123",
      "createdAt": "2024-03-18T09:43:27Z",
      "updatedAt": "2024-08-28T20:50:12Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1198edeff82efca8fc22d90b571d57c73813a338",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-references-oauthwg",
      "headRefOid": "a5cd5c961d848d27da181d61c6734ab81850465c",
      "closedAt": "2024-03-18T10:32:27Z",
      "mergedAt": "2024-03-18T10:32:27Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "7add93a256b5cb56befd2c83d19f5940c90c1141"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5zySgs",
          "commit": {
            "abbreviatedOid": "a5cd5c9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-18T10:32:06Z",
          "updatedAt": "2024-03-18T10:32:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 129,
      "id": "PR_kwDOJZ2aqs5qkkIR",
      "title": "fix examples & adds ttl text for cwt",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/129",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "- fixes #127, #117\r\n- adds ttl to the generated examples: #121 \r\n\r\nRendered verison: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/fix-examples/draft-ietf-oauth-status-list.html",
      "createdAt": "2024-03-23T22:57:46Z",
      "updatedAt": "2024-05-15T07:09:23Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "7add93a256b5cb56befd2c83d19f5940c90c1141",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-examples",
      "headRefOid": "6858f471bceebc7304ddb5efd91f06e073dad1aa",
      "closedAt": "2024-05-15T07:09:17Z",
      "mergedAt": "2024-05-15T07:09:17Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "f9aabf617fe478ac07c7a7b747f019767be01c93"
      },
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Should be fine now, with some minor fixes to rendering and adding the proposed values. Can you please check again @tplooker?",
          "createdAt": "2024-04-02T07:16:55Z",
          "updatedAt": "2024-04-02T07:16:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs50tY9s",
          "commit": {
            "abbreviatedOid": "3277526"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-25T15:22:21Z",
          "updatedAt": "2024-03-25T15:22:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs51lNoL",
          "commit": {
            "abbreviatedOid": "3277526"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-02T06:09:06Z",
          "updatedAt": "2024-04-02T06:09:06Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "As discussed on the call lets add the Claim Key entry to each IANA registration with the proposed values.",
              "createdAt": "2024-04-02T06:09:06Z",
              "updatedAt": "2024-04-02T06:09:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs56nGfx",
          "commit": {
            "abbreviatedOid": "6858f47"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-15T07:01:11Z",
          "updatedAt": "2024-05-15T07:01:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 131,
      "id": "PR_kwDOJZ2aqs5r_tOG",
      "title": "Fix issuer requirements for CWT status list",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/131",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #130 \r\nPretty straightforward fix for an oversight when relaxing the `iss` requirements for status list\r\n\r\n[Rendered Version](https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/fix-cwt-iss/draft-ietf-oauth-status-list.html)",
      "createdAt": "2024-04-08T11:16:26Z",
      "updatedAt": "2024-05-15T07:10:57Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f9aabf617fe478ac07c7a7b747f019767be01c93",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-cwt-iss",
      "headRefOid": "b10394b00d8ccf28b49564f17bce52ad734eb479",
      "closedAt": "2024-05-15T07:10:54Z",
      "mergedAt": "2024-05-15T07:10:54Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "50687101aeee5251de830daa44acf78f17f3b0f2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs5537mC",
          "commit": {
            "abbreviatedOid": "7e889a0"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-08T06:07:48Z",
          "updatedAt": "2024-05-08T06:07:48Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n* `1` (issuer): REQUIRED when also present in the Referenced Token. Same definition as `iss` claim in [](#referenced-token-jwt).\r\n```",
              "createdAt": "2024-05-08T06:07:48Z",
              "updatedAt": "2024-05-08T06:07:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs5537sy",
          "commit": {
            "abbreviatedOid": "54e0ac0"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-08T06:08:10Z",
          "updatedAt": "2024-05-08T06:08:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs56nHMu",
          "commit": {
            "abbreviatedOid": "54e0ac0"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-15T07:01:52Z",
          "updatedAt": "2024-05-15T07:01:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 139,
      "id": "PR_kwDOJZ2aqs5vavZY",
      "title": "clarify the sub claim of Status List Token",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/139",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-14T15:18:27Z",
      "updatedAt": "2024-05-15T07:12:15Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "50687101aeee5251de830daa44acf78f17f3b0f2",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "125-ambiguouscontradictory-language-in-the-sub-subject-claim-description",
      "headRefOid": "11ebfb5252cf048c83703d5f80469cd16aee48c0",
      "closedAt": "2024-05-15T07:12:12Z",
      "mergedAt": "2024-05-15T07:12:11Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "007bcfe068407895edc7012752a525aa8879ba7b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs56jwbP",
          "commit": {
            "abbreviatedOid": "2cfb30c"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-14T19:05:07Z",
          "updatedAt": "2024-05-14T19:05:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs56nHkQ",
          "commit": {
            "abbreviatedOid": "2cfb30c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-15T07:02:13Z",
          "updatedAt": "2024-05-15T07:02:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 140,
      "id": "PR_kwDOJZ2aqs5vbpVE",
      "title": "clarifications on TLS usage, remove Status List Endpoint",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/140",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\"endpoint\" is still mentioned in there, unsure we we completely want to get rid of it\r\n\r\nCloses #120 \r\nCloses #126 ",
      "createdAt": "2024-05-14T17:44:25Z",
      "updatedAt": "2024-06-06T06:15:07Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "d2ce6bce73c722e98298e66227c3fcec699d2844",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "120-status-list-endpoint-is-undefined",
      "headRefOid": "61d1ea2269c836d8ed4efe6085dccc5dae1340df",
      "closedAt": "2024-06-06T06:15:04Z",
      "mergedAt": "2024-06-06T06:15:04Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "8b844e1ee711a3f2d4e7b9e5b0bd1834124598d1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs56kBFa",
          "commit": {
            "abbreviatedOid": "069499e"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-14T19:44:01Z",
          "updatedAt": "2024-05-14T19:49:49Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis document defines a Status List and its representations in JSON and CBOR formats that describe the individual statuses of multiple Referenced Tokens, which themselves are JWTs or CWTs. The statuses of all Referenced Tokens are conveyed via a bit array in the Status List. Each Referenced Token is allocated an index during issuance that represents its position within this bit array. The value of the bit(s) at this index correspond to the Referenced Token's status. A Status List may either be provided via HTTPS or be signed and embedded into a Status List Token, whereas this document defines its representations in JWT and CWT. Status Lists may be composed for expressing a range of Status Types. This document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types. The document also defines how an issuer of a Referenced Token references a Status List (Token).\r\n```",
              "createdAt": "2024-05-14T19:44:02Z",
              "updatedAt": "2024-05-14T19:49:49Z"
            },
            {
              "originalPosition": 5,
              "body": "not sure about \"HTTPS endpoint\"",
              "createdAt": "2024-05-14T19:47:32Z",
              "updatedAt": "2024-05-14T19:49:49Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nTo obtain the Status List or Status List Token, the Relying Party MUST send an HTTP GET request to the URI provided in the Referenced Token.\r\n```",
              "createdAt": "2024-05-14T19:49:09Z",
              "updatedAt": "2024-05-14T19:49:49Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n* require TLS only for fetching Status List, not for Status List Token\r\n```",
              "createdAt": "2024-05-14T19:49:39Z",
              "updatedAt": "2024-05-14T19:49:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs59ONfb",
          "commit": {
            "abbreviatedOid": "3979c05"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-06T06:12:37Z",
          "updatedAt": "2024-06-06T06:12:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 141,
      "id": "PR_kwDOJZ2aqs5vevnb",
      "title": "batch fetching status lists",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/141",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "closes #27\r\n\r\nRendered Version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/batch-fetching/draft-ietf-oauth-status-list.html \r\n",
      "createdAt": "2024-05-15T06:04:00Z",
      "updatedAt": "2024-08-28T20:49:45Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f9ffaf9705e89ac29d5f2b72e37fd58390c2e3a2",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/batch-fetching",
      "headRefOid": "7ec8736d9c814e2a6d2a43f9d2d0fddce6f20bb9",
      "closedAt": "2024-07-08T07:21:01Z",
      "mergedAt": "2024-07-08T07:21:01Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "16a284405a9849075510c525cfd0a39fa35b254c"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Some ideas for renaming:\r\n- Status List Pool\r\n- Status List Collection\r\n- Status List Set\r\n- Status List Batch",
          "createdAt": "2024-07-04T12:57:12Z",
          "updatedAt": "2024-07-04T12:57:12Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I'd merge this as is and move things to section 8 with another PR that perhaps also finds a better name than `aggregation_uri` if that's fine w/ you @paulbastian @tplooker?",
          "createdAt": "2024-07-07T10:15:04Z",
          "updatedAt": "2024-07-07T10:15:04Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs57ye9h",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T12:47:14Z",
          "updatedAt": "2024-05-24T12:47:14Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Why are we repeating the definitions for CBOR Status List? In the CWT Status List Token we just reference to the JWT.Should we do the same here?",
              "createdAt": "2024-05-24T12:47:14Z",
              "updatedAt": "2024-05-24T12:47:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57ygZo",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T12:50:00Z",
          "updatedAt": "2024-05-24T12:50:00Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nTo allow a Relying Party to fetch all Status Lists for a specific Referenced Token or issuer, an optional mechanism is provided to retrieve a list of URIs to all Status List Tokens called Status List Aggregation. This mechanism is intended to support fetching and caching mechanisms and allow offline validation of the status.\r\n```",
              "createdAt": "2024-05-24T12:50:00Z",
              "updatedAt": "2024-05-24T12:50:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57yhJY",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T12:51:20Z",
          "updatedAt": "2024-05-24T12:51:20Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nThere are two options for a Relying Party to retrieve the Status List Aggregation.\r\n```",
              "createdAt": "2024-05-24T12:51:20Z",
              "updatedAt": "2024-05-24T12:51:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57yiXt",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T12:53:04Z",
          "updatedAt": "2024-05-24T12:53:04Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\n- Issuer metadata: The issuer of the Referenced Token publishes an URI which links to Status List Aggregation, e.g. in publicly available metadata of an issuance protocol\r\n```",
              "createdAt": "2024-05-24T12:53:04Z",
              "updatedAt": "2024-05-24T12:53:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57yjMo",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T12:54:06Z",
          "updatedAt": "2024-05-24T12:54:06Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n- Status List Parameter: The issuer of the Referenced Token includes an additional claim to the Status List (Token) that links to the Status List Aggregation.\r\n```",
              "createdAt": "2024-05-24T12:54:06Z",
              "updatedAt": "2024-05-24T12:54:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57yjou",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T12:55:00Z",
          "updatedAt": "2024-05-24T12:55:00Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "maybe turn these chapters around? Now that we mentioned the two mechanisms, giving the details on those fits better",
              "createdAt": "2024-05-24T12:55:00Z",
              "updatedAt": "2024-05-24T12:55:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57y4au",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T13:27:35Z",
          "updatedAt": "2024-05-24T13:27:36Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n* `status_lists`: REQUIRED. The `status_lists` claim MUST be an array of strings, each containing an URI to a Status List (Token).\r\n```",
              "createdAt": "2024-05-24T13:27:35Z",
              "updatedAt": "2024-05-24T13:27:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57y5-E",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T13:29:49Z",
          "updatedAt": "2024-05-24T13:29:50Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "maybe explain the fetching logic and move the the media type to the Section 8?",
              "createdAt": "2024-05-24T13:29:49Z",
              "updatedAt": "2024-05-24T13:29:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57y6vk",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T13:31:21Z",
          "updatedAt": "2024-05-24T13:31:21Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nThe URI to the Status List Aggregation MAY be provided as the optional parameter `aggregation_uri` in the Status List itself as explained in[](#status-list-cbor) and [](#status-list-json) respectively. A Relying Party may use this link to retrieve an up-to-date list of relevant Status Lists.\r\n```",
              "createdAt": "2024-05-24T13:31:21Z",
              "updatedAt": "2024-05-24T13:31:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs57y7Gk",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Looks already solid. Let's move the fetching and media type to Section 8",
          "createdAt": "2024-05-24T13:32:02Z",
          "updatedAt": "2024-05-24T13:32:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs58G00S",
          "commit": {
            "abbreviatedOid": "ce20ff9"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T08:53:14Z",
          "updatedAt": "2024-05-28T08:53:14Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Hmm, we need to define the major type here, but yeah we can probably make this a bit cleaner - let's briefly discuss tomorrow",
              "createdAt": "2024-05-28T08:53:14Z",
              "updatedAt": "2024-05-28T08:53:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs58PJOC",
          "commit": {
            "abbreviatedOid": "fe3ae5d"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T06:06:46Z",
          "updatedAt": "2024-05-29T06:06:46Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I think we should use major type 3 - text string.",
              "createdAt": "2024-05-29T06:06:46Z",
              "updatedAt": "2024-05-29T06:06:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs58PJPi",
          "commit": {
            "abbreviatedOid": "fe3ae5d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T06:06:51Z",
          "updatedAt": "2024-05-29T06:06:52Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n   * `aggregation_uri`: OPTIONAL. JSON String that contains an URI to retrieve a the Status List Aggregation for this credential type. See section [](#batch-fetching) for further detail.\r\n```",
              "createdAt": "2024-05-29T06:06:52Z",
              "updatedAt": "2024-05-29T06:06:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs58PKXm",
          "commit": {
            "abbreviatedOid": "fe3ae5d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T06:10:19Z",
          "updatedAt": "2024-05-29T06:10:19Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n  * `aggregation_uri`: OPTIONAL. Text string (Major Type3) that contains an URI to retrieve the Status List Aggregation for this credential type. See section [](#batch-fetching) for further detail.\r\n```",
              "createdAt": "2024-05-29T06:10:19Z",
              "updatedAt": "2024-05-29T06:10:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Ao3KT",
          "commit": {
            "abbreviatedOid": "6e4c580"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-07-04T07:34:11Z",
          "updatedAt": "2024-07-04T12:52:14Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n   * `aggregation_uri`: OPTIONAL. JSON String that contains an URI to retrieve the Status List Aggregation for this credential type. See section [](#batch-fetching) for further detail.\r\n```",
              "createdAt": "2024-07-04T07:34:11Z",
              "updatedAt": "2024-07-04T12:52:14Z"
            },
            {
              "originalPosition": 4,
              "body": "Furthermore, we don't have the term \"credential type\" until now?",
              "createdAt": "2024-07-04T07:34:35Z",
              "updatedAt": "2024-07-04T12:52:14Z"
            },
            {
              "originalPosition": 4,
              "body": "maybe say \"type of Referenced Tokens\"",
              "createdAt": "2024-07-04T07:38:05Z",
              "updatedAt": "2024-07-04T12:52:14Z"
            },
            {
              "originalPosition": 12,
              "body": "same as above",
              "createdAt": "2024-07-04T07:48:27Z",
              "updatedAt": "2024-07-04T12:52:14Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nStatus List Aggregation is an optional mechanism to retrieve a list of URIs to all Status List Tokens, allowing a Relying Party to fetch all relevant Status Lists for a specific type of Referenced Token or issuer. This mechanism is intended to support fetching and caching mechanisms and allow offline validation of the status.\r\n```",
              "createdAt": "2024-07-04T09:06:10Z",
              "updatedAt": "2024-07-04T12:52:14Z"
            },
            {
              "originalPosition": 20,
              "body": "rename this to Status List Aggregation?",
              "createdAt": "2024-07-04T09:51:02Z",
              "updatedAt": "2024-07-04T12:52:14Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nThe URI to the Status List Aggregation MAY be provided as the optional parameter `aggregation_uri` in the Status List itself as explained in[](#status-list-cbor) and [](#status-list-json) respectively. A Relying Party may use this URI to retrieve an up-to-date list of relevant Status Lists.\r\n```",
              "createdAt": "2024-07-04T11:46:11Z",
              "updatedAt": "2024-07-04T12:52:14Z"
            },
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n* `status_lists`: REQUIRED. JSON array of strings that contains URIs linking to Status List (Tokens).\r\n```",
              "createdAt": "2024-07-04T12:40:02Z",
              "updatedAt": "2024-07-04T12:52:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6AwAu8",
          "commit": {
            "abbreviatedOid": "6e4c580"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T06:54:48Z",
          "updatedAt": "2024-07-05T06:55:25Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n   * `aggregation_uri`: OPTIONAL. JSON String that contains an URI to retrieve the Status List Aggregation for this type of Referenced Token. See section [](#batch-fetching) for further detail.\r\n```",
              "createdAt": "2024-07-05T06:54:48Z",
              "updatedAt": "2024-07-05T06:57:09Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n  * `aggregation_uri`: OPTIONAL. Text string (Major Type 3) that contains an URI to retrieve the Status List Aggregation for this type of Referenced Token. See section [](#batch-fetching) for further detail.\r\n```",
              "createdAt": "2024-07-05T06:55:10Z",
              "updatedAt": "2024-07-05T06:57:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6AwBUs",
          "commit": {
            "abbreviatedOid": "6e4c580"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T06:56:31Z",
          "updatedAt": "2024-07-05T06:56:31Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n# Status List Aggregation {#batch-fetching}\r\n```",
              "createdAt": "2024-07-05T06:56:31Z",
              "updatedAt": "2024-07-05T06:56:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6A3GrL",
          "commit": {
            "abbreviatedOid": "0d7baae"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-07T21:48:29Z",
          "updatedAt": "2024-07-07T21:48:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6A3d_G",
          "commit": {
            "abbreviatedOid": "0d7baae"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T01:21:16Z",
          "updatedAt": "2024-07-08T01:21:16Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n   * `aggregation_uri`: OPTIONAL. JSON String that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token. See section [](#batch-fetching) for further detail.\r\n```",
              "createdAt": "2024-07-08T01:21:16Z",
              "updatedAt": "2024-07-08T01:21:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6A3eAn",
          "commit": {
            "abbreviatedOid": "0d7baae"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T01:21:28Z",
          "updatedAt": "2024-07-08T01:21:28Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n  * `aggregation_uri`: OPTIONAL. Text string (Major Type 3) that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token. See section [](#batch-fetching) for further detail.\r\n```",
              "createdAt": "2024-07-08T01:21:28Z",
              "updatedAt": "2024-07-08T01:21:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6A3eOu",
          "commit": {
            "abbreviatedOid": "0d7baae"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T01:23:05Z",
          "updatedAt": "2024-07-08T01:23:06Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nStatus List Aggregation is an optional mechanism to retrieve a list of URIs to all Status List Tokens, allowing a Relying Party to fetch all relevant Status Lists for a specific type of Referenced Token or issuer. This mechanism is intended to support fetching and caching mechanisms and allow offline validation of the status of a reference token for a period of time.\r\n```",
              "createdAt": "2024-07-08T01:23:06Z",
              "updatedAt": "2024-07-08T01:23:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6A3eXG",
          "commit": {
            "abbreviatedOid": "0d7baae"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM as a first cut with the minor language changes I highlighted.",
          "createdAt": "2024-07-08T01:24:09Z",
          "updatedAt": "2024-07-08T01:24:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 148,
      "id": "PR_kwDOJZ2aqs5xiqcU",
      "title": "Referenced Token CWT example",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/148",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Changes the CWT example to a Hex and annotated Hex version instead of diagnstic.\r\ncloses: #113\r\nRendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/cwt-referencedtoken/draft-ietf-oauth-status-list.html\r\n\r\n\r\nDid you have time to check this example with your team @tplooker?",
      "createdAt": "2024-06-05T11:35:05Z",
      "updatedAt": "2024-07-04T06:07:34Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "e200685ea7ddf4f20ff13ab2618950d69bdcdfb1",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/cwt-referencedtoken",
      "headRefOid": "5c76164b2003b61b4258efa3e8421c99f4a0d0dd",
      "closedAt": "2024-07-04T06:07:31Z",
      "mergedAt": "2024-07-04T06:07:31Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "5e4043f23c8bb8204aa03d13e66c976dfe14189a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6AoQN1",
          "commit": {
            "abbreviatedOid": "5c76164"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T05:57:51Z",
          "updatedAt": "2024-07-04T05:57:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 149,
      "id": "PR_kwDOJZ2aqs5xj0gy",
      "title": "remove http caching section",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/149",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "removes the http caching reference as we introduced the `ttl` option.\r\ncloses #135\r\n\r\nRendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/http-caching/draft-ietf-oauth-status-list.html",
      "createdAt": "2024-06-05T13:54:26Z",
      "updatedAt": "2024-08-28T20:49:40Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "007bcfe068407895edc7012752a525aa8879ba7b",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/http-caching",
      "headRefOid": "8a65d08946f6c29245808aac47b399b68f20de4d",
      "closedAt": "2024-06-06T06:12:08Z",
      "mergedAt": "2024-06-06T06:12:08Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "d2ce6bce73c722e98298e66227c3fcec699d2844"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs59ONRW",
          "commit": {
            "abbreviatedOid": "8a65d08"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-06T06:11:55Z",
          "updatedAt": "2024-06-06T06:11:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs59ONTj",
          "commit": {
            "abbreviatedOid": "8a65d08"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-06T06:12:01Z",
          "updatedAt": "2024-06-06T06:12:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 150,
      "id": "PR_kwDOJZ2aqs5yE3cK",
      "title": "Update github action versions",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/150",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Updates to current versions from https://github.com/martinthomson/internet-draft-template/",
      "createdAt": "2024-06-11T08:34:55Z",
      "updatedAt": "2024-08-28T20:49:41Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "8b844e1ee711a3f2d4e7b9e5b0bd1834124598d1",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/update-tooling",
      "headRefOid": "0f442a647f339c33db2becec1beb132436bf7e68",
      "closedAt": "2024-06-18T14:34:10Z",
      "mergedAt": "2024-06-18T14:34:10Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "e200685ea7ddf4f20ff13ab2618950d69bdcdfb1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs594ue0",
          "commit": {
            "abbreviatedOid": "0f442a6"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-12T06:04:32Z",
          "updatedAt": "2024-06-12T06:04:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 152,
      "id": "PR_kwDOJZ2aqs50FKIm",
      "title": "Update CWT type reference (published RFC)",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/152",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "closes #144\r\n\r\nRendered Version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/cwt-typ/draft-ietf-oauth-status-list.html ",
      "createdAt": "2024-07-01T14:34:38Z",
      "updatedAt": "2024-07-04T06:07:53Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "e200685ea7ddf4f20ff13ab2618950d69bdcdfb1",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/cwt-typ",
      "headRefOid": "8b2f7b7ae219a9ecb03f2e8564faa8b88711c3ab",
      "closedAt": "2024-07-04T06:07:50Z",
      "mergedAt": "2024-07-04T06:07:50Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "8c14b47d2ae056b84ca0ead886798f09d414fb3c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6AhgBp",
          "commit": {
            "abbreviatedOid": "8b2f7b7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-03T12:05:00Z",
          "updatedAt": "2024-07-03T12:05:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6AoQT9",
          "commit": {
            "abbreviatedOid": "8b2f7b7"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T05:58:12Z",
          "updatedAt": "2024-07-04T05:58:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 153,
      "id": "PR_kwDOJZ2aqs50Plfz",
      "title": "Change affiliation",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/153",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Change my affiliation",
      "createdAt": "2024-07-02T20:09:58Z",
      "updatedAt": "2024-07-04T06:08:16Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "e200685ea7ddf4f20ff13ab2618950d69bdcdfb1",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/affiliation",
      "headRefOid": "2572fbb4540d430f1174da66a1064492e6e312fe",
      "closedAt": "2024-07-04T06:08:13Z",
      "mergedAt": "2024-07-04T06:08:13Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "2013da84e9357ddeb6d8b19d270c512965b53f58"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6AhemS",
          "commit": {
            "abbreviatedOid": "2572fbb"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-03T12:02:08Z",
          "updatedAt": "2024-07-03T12:02:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6AoQa2",
          "commit": {
            "abbreviatedOid": "2572fbb"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T05:58:34Z",
          "updatedAt": "2024-07-04T05:58:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 154,
      "id": "PR_kwDOJZ2aqs50VWXO",
      "title": "relax requirements for status_list claims to contain other parameters",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/154",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #142 ",
      "createdAt": "2024-07-03T14:13:48Z",
      "updatedAt": "2024-07-04T06:13:22Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "2013da84e9357ddeb6d8b19d270c512965b53f58",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "142-add-extensibility-to-referenced-token-status_list-object",
      "headRefOid": "9bb121bb4767b3930e99c648e555a0362cae38ab",
      "closedAt": "2024-07-04T06:13:20Z",
      "mergedAt": "2024-07-04T06:13:20Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "f9ffaf9705e89ac29d5f2b72e37fd58390c2e3a2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6AoQjm",
          "commit": {
            "abbreviatedOid": "e838a13"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T05:59:02Z",
          "updatedAt": "2024-07-04T05:59:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6AoUEC",
          "commit": {
            "abbreviatedOid": "e838a13"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T06:10:23Z",
          "updatedAt": "2024-07-04T06:10:23Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n* `status_list`: REQUIRED. JSON Object that contains a Status List. It MUST contain at least the following claims:\r\n```",
              "createdAt": "2024-07-04T06:10:23Z",
              "updatedAt": "2024-07-04T06:10:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6AoUH4",
          "commit": {
            "abbreviatedOid": "e838a13"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T06:10:35Z",
          "updatedAt": "2024-07-04T06:10:35Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n  * `status_list`: REQUIRED when the status list mechanism defined in this specification is used. It contains a reference to a Status List or Status List Token. It MUST at least contain the following claims:\r\n```",
              "createdAt": "2024-07-04T06:10:35Z",
              "updatedAt": "2024-07-04T06:10:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6AoUN9",
          "commit": {
            "abbreviatedOid": "4e46c0b"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T06:10:54Z",
          "updatedAt": "2024-07-04T06:10:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 155,
      "id": "PR_kwDOJZ2aqs50nahE",
      "title": "first attempt on validation rules",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/155",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #134 \r\nRendered Version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/validation-rules/draft-ietf-oauth-status-list.html",
      "createdAt": "2024-07-07T16:01:39Z",
      "updatedAt": "2024-07-08T20:03:32Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "16a284405a9849075510c525cfd0a39fa35b254c",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/validation-rules",
      "headRefOid": "c5a7ef3562198ad88aa5be665fa6d7828645c054",
      "closedAt": "2024-07-08T20:03:32Z",
      "mergedAt": "2024-07-08T20:03:32Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "f99e04f360ee8f7c872d65c11e2a3bcba02ffe89"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think there is room for improvement but I'd rather start with something to get feedback",
          "createdAt": "2024-07-07T21:55:19Z",
          "updatedAt": "2024-07-07T21:55:19Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6A3Gxs",
          "commit": {
            "abbreviatedOid": "39410f4"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-07T21:51:20Z",
          "updatedAt": "2024-07-07T21:54:40Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "What if ttl is not present?",
              "createdAt": "2024-07-07T21:51:20Z",
              "updatedAt": "2024-07-07T21:54:40Z"
            },
            {
              "originalPosition": 30,
              "body": "Check index value is within size of the byte array?",
              "createdAt": "2024-07-07T21:53:50Z",
              "updatedAt": "2024-07-07T21:54:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6A3d3B",
          "commit": {
            "abbreviatedOid": "39410f4"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T01:20:24Z",
          "updatedAt": "2024-07-08T01:20:24Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n    5. If the Relying Party is using a system for caching the Status List Token, it SHOULD check the `ttl` claim of the Status List Token and retrieve a fresh copy if (time status was resolved + ttl < current time)\r\n```\r\n\r\nIts not IAT you add the TTL too in order to determine whether to resolve an update its the time of resolving the status list.",
              "createdAt": "2024-07-08T01:20:24Z",
              "updatedAt": "2024-07-08T01:20:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6A4vor",
          "commit": {
            "abbreviatedOid": "39410f4"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T06:18:07Z",
          "updatedAt": "2024-07-08T06:18:08Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n    5. If the `ttl` claim is present and the Relying Party is using a system for caching the Status List Token, it SHOULD check the `ttl` claim of the Status List Token and retrieve a fresh copy if (time status was resolved + ttl < current time)\r\n```",
              "createdAt": "2024-07-08T06:18:08Z",
              "updatedAt": "2024-07-08T06:18:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6A4v8E",
          "commit": {
            "abbreviatedOid": "39410f4"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T06:18:43Z",
          "updatedAt": "2024-07-08T06:18:43Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\n6. Retrieve the status value of the index specified in the Referenced Token as described in [](#status-list). Fail if the provided index is out of bound of the status list\r\n```",
              "createdAt": "2024-07-08T06:18:43Z",
              "updatedAt": "2024-07-08T06:18:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6BADzf",
          "commit": {
            "abbreviatedOid": "e814fd2"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T20:01:09Z",
          "updatedAt": "2024-07-08T20:01:09Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nUpon receiving a Referenced Token, a Relying Party MUST first perform the validation of the Referenced Token - e.g., checking for expected attributes, valid signature, expiration time.\r\n```",
              "createdAt": "2024-07-08T20:01:09Z",
              "updatedAt": "2024-07-08T20:01:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6BAEZs",
          "commit": {
            "abbreviatedOid": "bc3453e"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T20:02:02Z",
          "updatedAt": "2024-07-08T20:02:03Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nIf this validation was not successful, the Referenced Token MUST be rejected. If the validation was successful, the Relying Party MUST perform the following validation steps to evaluate the status of the reference token:\r\n```",
              "createdAt": "2024-07-08T20:02:02Z",
              "updatedAt": "2024-07-08T20:02:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6BAFCE",
          "commit": {
            "abbreviatedOid": "11c351f"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T20:02:53Z",
          "updatedAt": "2024-07-08T20:02:53Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n2. Resolve the Status List from the provided URI\r\n```",
              "createdAt": "2024-07-08T20:02:53Z",
              "updatedAt": "2024-07-08T20:02:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6BAFWl",
          "commit": {
            "abbreviatedOid": "c5a7ef3"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T20:03:24Z",
          "updatedAt": "2024-07-08T20:03:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 160,
      "id": "PR_kwDOJZ2aqs548vEW",
      "title": "add cwt claim key for status_list ",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/160",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Adds a claim key for `status_list` used in the status list token in CWT format and fixes the reference.",
      "createdAt": "2024-08-21T08:07:24Z",
      "updatedAt": "2024-08-28T06:37:14Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "5be97eea739a5b4a1d005fc58084e83241c52171",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-cwt-claim-key",
      "headRefOid": "21ec224635fc85ac5f067613a031d9ca8ab3652e",
      "closedAt": "2024-08-28T06:37:11Z",
      "mergedAt": "2024-08-28T06:37:11Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "5da26d60c97def6303957302bdf9afd1f80a005d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6HBYb2",
          "commit": {
            "abbreviatedOid": "1012408"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T06:33:39Z",
          "updatedAt": "2024-08-28T06:33:39Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n* `65533` (status list): REQUIRED. The status list claim MUST specify the Status List conforming to the rules outlined in [](#status-list-cbor).\r\n```",
              "createdAt": "2024-08-28T06:33:39Z",
              "updatedAt": "2024-08-28T06:33:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6HBZIo",
          "commit": {
            "abbreviatedOid": "fdf0036"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-28T06:35:06Z",
          "updatedAt": "2024-08-28T06:35:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 161,
      "id": "PR_kwDOJZ2aqs55HKs6",
      "title": "fix reference of Status List in CBOR format",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/161",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Status List `lst` claim was referencing Chapter 4.1 instead of Chapter 4, which made it ambiguous whether to base64url-encode or not",
      "createdAt": "2024-08-22T11:18:45Z",
      "updatedAt": "2024-08-28T06:38:26Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "5da26d60c97def6303957302bdf9afd1f80a005d",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/minor1",
      "headRefOid": "6bbcebecc5a2a0ed72c2c8638f863b9a4f149ea9",
      "closedAt": "2024-08-28T06:38:23Z",
      "mergedAt": "2024-08-28T06:38:23Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "e4572f0cb71504e5abb3ad10c7305e1ac9138a66"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6GXseK",
          "commit": {
            "abbreviatedOid": "204dd9e"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-22T12:19:36Z",
          "updatedAt": "2024-08-22T12:19:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 162,
      "id": "PR_kwDOJZ2aqs55iDFo",
      "title": "move base64url introduction to terminology",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/162",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "closes #44\r\n\r\nRedered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/44-clarify-base64-encoding/draft-ietf-oauth-status-list.html",
      "createdAt": "2024-08-27T07:56:38Z",
      "updatedAt": "2024-08-28T20:49:50Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f99e04f360ee8f7c872d65c11e2a3bcba02ffe89",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/44-clarify-base64-encoding",
      "headRefOid": "acab6f6fc96145e328128d616b9a7e10462bc5d7",
      "closedAt": "2024-08-28T06:30:48Z",
      "mergedAt": "2024-08-28T06:30:48Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "5be97eea739a5b4a1d005fc58084e83241c52171"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6G2tYu",
          "commit": {
            "abbreviatedOid": "b060cce"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-27T08:04:34Z",
          "updatedAt": "2024-08-27T08:05:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Does this render correctly?",
              "createdAt": "2024-08-27T08:04:34Z",
              "updatedAt": "2024-08-27T08:05:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6G2yB-",
          "commit": {
            "abbreviatedOid": "b060cce"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T08:13:12Z",
          "updatedAt": "2024-08-27T08:13:13Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Same as the rest in the Terminology section: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/44-clarify-base64-encoding/draft-ietf-oauth-status-list.html#name-terminology",
              "createdAt": "2024-08-27T08:13:12Z",
              "updatedAt": "2024-08-27T08:13:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6G24Qw",
          "commit": {
            "abbreviatedOid": "b060cce"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T08:23:51Z",
          "updatedAt": "2024-08-27T08:23:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I meant square brackets instead of double curly brackets. Let's be consistent",
              "createdAt": "2024-08-27T08:23:51Z",
              "updatedAt": "2024-08-27T08:24:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6G27x7",
          "commit": {
            "abbreviatedOid": "b060cce"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-27T08:29:12Z",
          "updatedAt": "2024-08-27T08:29:13Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "ohh - I didn't even realize that :D, changed it",
              "createdAt": "2024-08-27T08:29:12Z",
              "updatedAt": "2024-08-27T08:29:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6G28UR",
          "commit": {
            "abbreviatedOid": "acab6f6"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-27T08:29:42Z",
          "updatedAt": "2024-08-27T08:29:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 163,
      "id": "PR_kwDOJZ2aqs55r9zu",
      "title": "add testing tool",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/163",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #157 ",
      "createdAt": "2024-08-28T10:07:50Z",
      "updatedAt": "2024-08-29T07:05:34Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "e4572f0cb71504e5abb3ad10c7305e1ac9138a66",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/testing",
      "headRefOid": "7388c326e8f88688d40c3bd1dfcd8c830e94aab2",
      "closedAt": "2024-08-29T07:05:30Z",
      "mergedAt": "2024-08-29T07:05:30Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "556dbd132476b9971535f0ee90f4c28ecb04edc9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6HGuhJ",
          "commit": {
            "abbreviatedOid": "7388c32"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-28T15:55:32Z",
          "updatedAt": "2024-08-28T15:55:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6HLLOA",
          "commit": {
            "abbreviatedOid": "7388c32"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-29T07:05:11Z",
          "updatedAt": "2024-08-29T07:05:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 164,
      "id": "PR_kwDOJZ2aqs55wl2L",
      "title": "remove requirement for matching iss claim in Referenced Token and Sta\u2026",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/164",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #159 \r\nCloses #108 ",
      "createdAt": "2024-08-28T21:38:40Z",
      "updatedAt": "2024-09-18T06:38:46Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "4bf0c65f9032df7083f1f88ad417939913faa611",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "159-remove-requirement-on-matching-iss-values",
      "headRefOid": "0076ade18fe5546edba1eb15994508a509308fc3",
      "closedAt": "2024-09-18T06:38:43Z",
      "mergedAt": "2024-09-18T06:38:43Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "ce693f404c4e33424d677be0d047df3b92dfdc3b"
      },
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "We should adjust our examples to remove iss then - want me to push to this PR before we merge, or create another PR?",
          "createdAt": "2024-08-29T07:13:12Z",
          "updatedAt": "2024-08-29T07:13:12Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Rendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/159-remove-requirement-on-matching-iss-values/draft-ietf-oauth-status-list.html",
          "createdAt": "2024-08-29T09:29:20Z",
          "updatedAt": "2024-08-29T09:29:20Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "its still present in Referenced Token in JWT format. Shall we remove it?",
          "createdAt": "2024-08-29T16:18:45Z",
          "updatedAt": "2024-08-29T16:18:45Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Otherwise approved, as I can't review my own PR apparently",
          "createdAt": "2024-08-29T16:56:44Z",
          "updatedAt": "2024-08-29T16:56:44Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker please review",
          "createdAt": "2024-09-05T06:23:00Z",
          "updatedAt": "2024-09-05T06:23:00Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6HK-Lk",
          "commit": {
            "abbreviatedOid": "d0bb5a3"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-29T06:35:42Z",
          "updatedAt": "2024-08-29T06:35:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6JyhJf",
          "commit": {
            "abbreviatedOid": "52c5294"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T06:11:09Z",
          "updatedAt": "2024-09-18T06:11:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 166,
      "id": "PR_kwDOJZ2aqs55yc2c",
      "title": "add cors considerations to the http endpoint",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/166",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #58\r\n\r\nRendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/cors/draft-ietf-oauth-status-list.html",
      "createdAt": "2024-08-29T06:57:47Z",
      "updatedAt": "2024-08-29T07:31:29Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "e4572f0cb71504e5abb3ad10c7305e1ac9138a66",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/cors",
      "headRefOid": "b3a9deca93a8244be60ba5ecd78afac7f347fec3",
      "closedAt": "2024-08-29T07:31:25Z",
      "mergedAt": "2024-08-29T07:31:25Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "b019cbf1c86269329e4bd40731360ddc286c3a12"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6HLXpb",
          "commit": {
            "abbreviatedOid": "b3a9dec"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-29T07:31:06Z",
          "updatedAt": "2024-08-29T07:31:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6HLXqf",
          "commit": {
            "abbreviatedOid": "b3a9dec"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-29T07:31:08Z",
          "updatedAt": "2024-08-29T07:31:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 170,
      "id": "PR_kwDOJZ2aqs563RXq",
      "title": "update security consideration",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/170",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #146 \r\nCloses #165 \r\nCloses #132 \r\nCloses #93 \r\nCloses #73",
      "createdAt": "2024-09-09T14:45:57Z",
      "updatedAt": "2024-09-20T19:23:32Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "ce693f404c4e33424d677be0d047df3b92dfdc3b",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/considerations1",
      "headRefOid": "2d30edce82c042135cf120343a1eeb450bae076b",
      "closedAt": "2024-09-20T19:23:32Z",
      "mergedAt": "2024-09-20T19:23:32Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "9f6323aefbcc5ab3ded4f292c086bbde170c174b"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker I accepted your suggestions. You may approve and merge",
          "createdAt": "2024-09-19T11:59:43Z",
          "updatedAt": "2024-09-19T11:59:43Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6Igcv3",
          "commit": {
            "abbreviatedOid": "58fe222"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-09T15:06:34Z",
          "updatedAt": "2024-09-09T15:06:35Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nImplementers should be particularly careful for the correct parsing and decoding of the status list. Incorrect implementations might check the index at the wrong position or miscalculate the bit and byte index leading to an erroneous status of the Referenced Token. Beware, that bits are indexed (bit order) from least significant bit to most significant bit (also called \"right to left\") while bytes are indexed (byte order) in their natural incrementing byte order (usually written for display purpose from left to write). Endianness does not apply here because each status value fits within a single byte.\r\n```",
              "createdAt": "2024-09-09T15:06:35Z",
              "updatedAt": "2024-09-09T15:06:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6IgupS",
          "commit": {
            "abbreviatedOid": "8111f4c"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-09T15:36:13Z",
          "updatedAt": "2024-09-09T15:36:13Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "with the first phrase \"on the wrong data\" I meant for example calculating index on the still compressed data, which happened to my colleagues during a test. Shall we keep this?",
              "createdAt": "2024-09-09T15:36:13Z",
              "updatedAt": "2024-09-09T15:36:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6IhMzO",
          "commit": {
            "abbreviatedOid": "58fe222"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-09T16:30:40Z",
          "updatedAt": "2024-09-09T16:30:41Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nImplementers should be particularly careful for the correct parsing and decoding of the status list. Incorrect implementations might check the index on the wrong data or miscalculate the bit and byte index leading to an erroneous status of the Referenced Token. Beware, that bits are indexed (bit order) from least significant bit to most significant bit (also called \"right to left\") while bytes are indexed (byte order) in their natural incrementing byte order (usually written for display purpose from left to write). Endianness does not apply here because each status value fits within a single byte.\r\n```",
              "createdAt": "2024-09-09T16:30:40Z",
              "updatedAt": "2024-09-09T16:30:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6JqCwQ",
          "commit": {
            "abbreviatedOid": "543b2ba"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Not sure about the language in the security considerations section. Other RFCs seem to use normative language here - e.g., https://datatracker.ietf.org/doc/html/rfc9449#name-security-considerations.\r\n\r\nLooks good apart from that part IMHO",
          "createdAt": "2024-09-17T11:40:39Z",
          "updatedAt": "2024-09-17T11:45:12Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Should we use stronger language here? If yes, we have probably more parts in this section, where it would make sense.\r\n```suggestion\r\nImplementations are RECOMMENDED to verify correctness using the test vectors given by this specification.\r\n```",
              "createdAt": "2024-09-17T11:40:39Z",
              "updatedAt": "2024-09-17T11:45:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6JynIf",
          "commit": {
            "abbreviatedOid": "543b2ba"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T06:28:07Z",
          "updatedAt": "2024-09-18T06:28:07Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Are we leaving this in or shall we move it to an issue?",
              "createdAt": "2024-09-18T06:28:07Z",
              "updatedAt": "2024-09-18T06:28:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Jyu6s",
          "commit": {
            "abbreviatedOid": "2a6af2c"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T06:45:51Z",
          "updatedAt": "2024-09-18T06:45:51Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "we had in before, so I would leave it in here",
              "createdAt": "2024-09-18T06:45:51Z",
              "updatedAt": "2024-09-18T06:45:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6J0Tey",
          "commit": {
            "abbreviatedOid": "2a6af2c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T09:45:06Z",
          "updatedAt": "2024-09-18T09:45:07Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nA Status List Token in the JWT format should follow the security considerations of {{RFC7519}} and the best current practices of {{RFC8725}}.\r\n```",
              "createdAt": "2024-09-18T09:45:06Z",
              "updatedAt": "2024-09-18T09:45:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6J0Tol",
          "commit": {
            "abbreviatedOid": "2a6af2c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T09:45:23Z",
          "updatedAt": "2024-09-18T09:45:23Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nA Status List Token in the CWT format should follow the security considerations of {{RFC8392}}.\r\n```",
              "createdAt": "2024-09-18T09:45:23Z",
              "updatedAt": "2024-09-18T09:45:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6KO0zW",
          "commit": {
            "abbreviatedOid": "2d30edc"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-20T19:23:25Z",
          "updatedAt": "2024-09-20T19:23:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 171,
      "id": "PR_kwDOJZ2aqs563mTs",
      "title": "sd jwt example",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/171",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Rendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/sd-jwt-example/draft-ietf-oauth-status-list.html \r\n\r\nAdds an example for a referenced token in sd-jwt-vc form.",
      "createdAt": "2024-09-09T15:26:26Z",
      "updatedAt": "2024-09-18T06:09:08Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1482e02bc5d37dd8fd4c66aeb7d2927e1ed9ae2c",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/sd-jwt-example",
      "headRefOid": "804102380f50642616bababa5fc03a2d7ff797a3",
      "closedAt": "2024-09-18T06:09:05Z",
      "mergedAt": "2024-09-18T06:09:05Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "4bf0c65f9032df7083f1f88ad417939913faa611"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closes #112, except for the COSE part. Do we want to merge those sections as well in this PR?",
          "createdAt": "2024-09-10T17:26:04Z",
          "updatedAt": "2024-09-10T17:26:55Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I'd prefer a separate PR that includes the COSE parts and a mDL/mDoc example.",
          "createdAt": "2024-09-10T18:04:16Z",
          "updatedAt": "2024-09-10T18:04:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6Igtup",
          "commit": {
            "abbreviatedOid": "a35ce2d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "- rename previous section to Referenced Token with JOSE\r\n- make first phrase \"The Referenced Token MUST be..\" less strict\r\n- combine with this section and make JWT+SD-JWT two examples for the same section",
          "createdAt": "2024-09-09T15:34:33Z",
          "updatedAt": "2024-09-09T15:34:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6IhSaE",
          "commit": {
            "abbreviatedOid": "da83e8c"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-09T16:42:11Z",
          "updatedAt": "2024-09-09T16:42:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6I1nxv",
          "commit": {
            "abbreviatedOid": "da83e8c"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-11T06:17:11Z",
          "updatedAt": "2024-09-11T06:17:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6Jyfnk",
          "commit": {
            "abbreviatedOid": "da83e8c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T06:06:17Z",
          "updatedAt": "2024-09-18T06:06:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 172,
      "id": "PR_kwDOJZ2aqs564MzS",
      "title": "add implementation consideration for Default Values and Double Alloca\u2026",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/172",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #47\r\nCloses #24 ",
      "createdAt": "2024-09-09T16:53:00Z",
      "updatedAt": "2024-09-24T18:54:59Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "28065cb20213e3464555ab1d11217212e2a8df5f",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/considerations2",
      "headRefOid": "d37cabfa1e63e62c22b4c443df5053001fdf5d61",
      "closedAt": "2024-09-24T18:54:44Z",
      "mergedAt": "2024-09-24T18:54:44Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "2f57d2f6f18f7ce60aff52763ab2c3c9df4751b2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6IiKoU",
          "commit": {
            "abbreviatedOid": "7cd5197"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-09T18:25:56Z",
          "updatedAt": "2024-09-09T18:25:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6J0K2O",
          "commit": {
            "abbreviatedOid": "9fe284f"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T09:38:10Z",
          "updatedAt": "2024-09-18T09:38:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nReferenced Tokens may be regularly re-issued to mitigate linkability of presentations to Relying Parties. In this case, every re-issued Referenced Token MUST have a fresh Status List entry in order to prevent this becoming possible source of correlation.\r\n```\r\n\r\nMinor nit",
              "createdAt": "2024-09-18T09:38:10Z",
              "updatedAt": "2024-09-18T09:38:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6J0LmE",
          "commit": {
            "abbreviatedOid": "9fe284f"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T09:39:10Z",
          "updatedAt": "2024-09-18T09:39:11Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nImplementations producing Status Lists are RECOMMENDED to initialize the Status List byte array with a default value and provide this as an initialization parameter to the Issuer. The Issuer is RECOMMENDED to use a default value that represents the most common value for its Referenced Tokens to avoid an update during issuance.\r\n```",
              "createdAt": "2024-09-18T09:39:10Z",
              "updatedAt": "2024-09-19T16:00:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6J0L3f",
          "commit": {
            "abbreviatedOid": "9fe284f"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T09:39:29Z",
          "updatedAt": "2024-09-18T09:39:29Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nImplementations producing Status Lists are RECOMMENDED to prevent double allocation, i.e. re-using the same `uri` and `index` for multiple Referenced Tokens. The Issuer MUST prevent any unintended double allocation by using the Status List.\r\n```",
              "createdAt": "2024-09-18T09:39:29Z",
              "updatedAt": "2024-09-19T16:00:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6J0Rqp",
          "commit": {
            "abbreviatedOid": "9fe284f"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T09:43:32Z",
          "updatedAt": "2024-09-18T09:43:33Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nThe Status List Issuer may increase the size of a Status List if it requires indices for additional Referenced Tokens. It is RECOMMENDED that the size of a Status List in bits is divisible in bytes (8 bits) without a remainder, i.e. `size-in-bits` % 8 = 0.\r\n```",
              "createdAt": "2024-09-18T09:43:33Z",
              "updatedAt": "2024-09-18T09:43:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6KC13M",
          "commit": {
            "abbreviatedOid": "1ccb2ab"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T16:04:46Z",
          "updatedAt": "2024-09-19T16:04:46Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I think we are talking about different points here. I'm talking about this issue: https://github.com/oauth-wg/draft-ietf-oauth-status-list/issues/47 which means the last byte should be filled and nto have some dangling bits",
              "createdAt": "2024-09-19T16:04:46Z",
              "updatedAt": "2024-09-19T16:04:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6KOkrC",
          "commit": {
            "abbreviatedOid": "9fe284f"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T19:05:50Z",
          "updatedAt": "2024-09-20T19:05:50Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I'm talking about that too, it just felt like describing it as a byte-boundary is perhaps not that intuitive, rather then simply saying the total size of the list needs to be dividable by 8 without remainder?",
              "createdAt": "2024-09-20T19:05:50Z",
              "updatedAt": "2024-09-20T19:05:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6KPIU0",
          "commit": {
            "abbreviatedOid": "1ccb2ab"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T19:52:01Z",
          "updatedAt": "2024-09-20T19:52:01Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "You are correct. I think yours is good as well",
              "createdAt": "2024-09-20T19:52:01Z",
              "updatedAt": "2024-09-20T19:52:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6KpbIw",
          "commit": {
            "abbreviatedOid": "d37cabf"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-24T18:54:38Z",
          "updatedAt": "2024-09-24T18:54:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 173,
      "id": "PR_kwDOJZ2aqs57VCHx",
      "title": "fix CWT status_list map encoding",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/173",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "`status_list` in the Status List Token in CWT form was encoded as Byte String instead of Map (type 5) as defined in the CBOR Section (4.2).\r\n\r\nRendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/fix-cwt-statuslist-encoding/draft-ietf-oauth-status-list.html",
      "createdAt": "2024-09-12T16:27:54Z",
      "updatedAt": "2024-09-18T06:07:36Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "9940f5589a8019619088374513896c355c7b95f9",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-cwt-statuslist-encoding",
      "headRefOid": "737f92c5d1835984e748b96d374aef7e89e583d6",
      "closedAt": "2024-09-18T06:07:33Z",
      "mergedAt": "2024-09-18T06:07:33Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "1482e02bc5d37dd8fd4c66aeb7d2927e1ed9ae2c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6JTgNQ",
          "commit": {
            "abbreviatedOid": "a1b7e51"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-13T16:41:51Z",
          "updatedAt": "2024-09-13T16:41:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6Jyc8V",
          "commit": {
            "abbreviatedOid": "a1b7e51"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T06:02:47Z",
          "updatedAt": "2024-09-18T06:02:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 175,
      "id": "PR_kwDOJZ2aqs57xzUC",
      "title": "fix rendering & improve IANA registration text",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/175",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "- fixes the list rendering (missing newline)\r\n- clarifies IANA text to just reference other tokens\r\n\r\nRendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/editiorial-fixes/draft-ietf-oauth-status-list.html ",
      "createdAt": "2024-09-17T15:13:55Z",
      "updatedAt": "2024-09-18T06:05:38Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "b019cbf1c86269329e4bd40731360ddc286c3a12",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/editiorial-fixes",
      "headRefOid": "1154bbd133636e5422e464da7bf023ad96249bce",
      "closedAt": "2024-09-18T06:05:01Z",
      "mergedAt": "2024-09-18T06:05:01Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "9940f5589a8019619088374513896c355c7b95f9"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I did further fixes on media types",
          "createdAt": "2024-09-17T19:05:29Z",
          "updatedAt": "2024-09-17T19:05:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6JuFu2",
          "commit": {
            "abbreviatedOid": "1dde590"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-17T18:35:14Z",
          "updatedAt": "2024-09-17T18:35:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6Jybal",
          "commit": {
            "abbreviatedOid": "1154bbd"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T06:01:34Z",
          "updatedAt": "2024-09-18T06:01:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 176,
      "id": "PR_kwDOJZ2aqs58Fp9N",
      "title": "status list token cwt example uses new claim key",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/176",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "#160 introduced the new claim key for status_list within the status list cwt, but the example wasn't adjusted",
      "createdAt": "2024-09-19T20:21:20Z",
      "updatedAt": "2024-09-20T19:36:17Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "ce693f404c4e33424d677be0d047df3b92dfdc3b",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/status-list-cwt-claim-example",
      "headRefOid": "6cf08e4939b7e1db71bd9e3598232ea05fd98e52",
      "closedAt": "2024-09-20T19:36:17Z",
      "mergedAt": "2024-09-20T19:36:17Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "28065cb20213e3464555ab1d11217212e2a8df5f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6KNrcj",
          "commit": {
            "abbreviatedOid": "6cf08e4"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-20T17:23:30Z",
          "updatedAt": "2024-09-20T17:23:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6KO0OE",
          "commit": {
            "abbreviatedOid": "6cf08e4"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-20T19:23:05Z",
          "updatedAt": "2024-09-20T19:23:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 178,
      "id": "PR_kwDOJZ2aqs59HqwV",
      "title": "add optional support for historical status resolution",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/178",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Adds support for historical resolution of status as an optional feature.\r\n\r\nCloses #138\r\nRendered Version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/historical-resolution/draft-ietf-oauth-status-list.html\r\n\r\nI will take another look at the wording / normative text and mark as ready for review when I am done.",
      "createdAt": "2024-09-30T13:27:29Z",
      "updatedAt": "2024-10-21T18:32:20Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "604435b54e6274c6d04be78e88b5f3f0cd269c96",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/historical-resolution",
      "headRefOid": "f9217049232e26a67d5e3749e08349d5f9e47f78",
      "closedAt": "2024-10-21T18:32:20Z",
      "mergedAt": "2024-10-21T18:32:20Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "1ae169297c0781f33681498150c85610d631ab95"
      },
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "todo: \r\n- fix the references to this in privacy considerations\r\n- fix some wording / language",
          "createdAt": "2024-10-09T08:08:20Z",
          "updatedAt": "2024-10-09T08:08:20Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> The whole text is in the Security Considerations section. I believe we should move the normative text to the section 8.\r\n\r\nGood point - I moved the whole part to the end of Section 8.",
          "createdAt": "2024-10-21T08:38:45Z",
          "updatedAt": "2024-10-21T08:38:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6Lgqe9",
          "commit": {
            "abbreviatedOid": "3cfa6b0"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-10-01T14:47:30Z",
          "updatedAt": "2024-10-01T20:41:25Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nTo obtain the Status List or Status List Token, the Relying Party MUST send an HTTP GET request to the URI provided in the Referenced Token with the additional query parameter `time` and its value being a unix timestamp. The response for a valid request SHOULD contain a Status List that was valid for that specified time or an error for the JWT and CWT variants and MUST contain a valid status list or an error for the unsigned option.\r\n```",
              "createdAt": "2024-10-01T14:47:30Z",
              "updatedAt": "2024-10-01T20:41:25Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nThe following is a non-normative example for a GET request using the `time` query parameter:\r\n```",
              "createdAt": "2024-10-01T14:48:08Z",
              "updatedAt": "2024-10-01T20:41:25Z"
            },
            {
              "originalPosition": 45,
              "body": "Not sure if the SHOULD is a benefit, if implementers cannot rely on it, they SHOULD rather use `iat` and `exp`",
              "createdAt": "2024-10-01T14:49:55Z",
              "updatedAt": "2024-10-01T20:41:25Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nIf support for historical status information is needed, this can be achieved by extending the request for the Status List as defined in [](#status-list-request) with a timestamp. There are strong privacy concerns that have to be carefully taken into considerations when providing a mechanism that allows historic requests for status information - see [](#privacy-relying-party) for more details. Support for this functionality is optional and Implementers are RECOMMENDED to not support historic requests unless there are strong reasons to do so and after carefully considering the privacy implications.\r\n```",
              "createdAt": "2024-10-01T20:41:04Z",
              "updatedAt": "2024-10-01T20:41:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6MiAeF",
          "commit": {
            "abbreviatedOid": "69f2649"
          },
          "author": "decentralgabe",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "the language looks good, thanks for including it.\r\n\r\nI will only add that while there may be privacy risks, there are legitimate business cases that require such historical data, such as guaranteeing compliance with financial regulation. In these cases, user privacy is made better by using this specification (as opposed to amore privacy-eroding solution), even if maximal privacy is not achieved. I hope the privacy section can speak to this nuance.",
          "createdAt": "2024-10-09T17:03:24Z",
          "updatedAt": "2024-10-09T17:03:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6N0GC9",
          "commit": {
            "abbreviatedOid": "a9b070c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T06:37:21Z",
          "updatedAt": "2024-10-19T06:37:21Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n## Historical resolution {#historical-resolution}\r\n\r\n```",
              "createdAt": "2024-10-19T06:37:21Z",
              "updatedAt": "2024-10-19T06:37:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N0GEf",
          "commit": {
            "abbreviatedOid": "a9b070c"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T06:38:06Z",
          "updatedAt": "2024-10-19T06:38:06Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nBy design, the Status List mechanism only conveys information about the state of Reference Tokens at the time the Status List Token was issued. The validity period for this information, as defined by the issuer, is explicitly stated by the `iat` (issued at) and `exp` (expiration time) claims for JWT, and their corresponding ones for the CWT representation.\r\n```",
              "createdAt": "2024-10-19T06:38:06Z",
              "updatedAt": "2024-10-19T06:38:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N5UFS",
          "commit": {
            "abbreviatedOid": "240c927"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "The whole text is in the Security Considerations section. I believe we should move the normative text to the section 8.",
          "createdAt": "2024-10-20T17:09:17Z",
          "updatedAt": "2024-10-20T17:09:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6OAcfm",
          "commit": {
            "abbreviatedOid": "f364c9d"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T15:29:48Z",
          "updatedAt": "2024-10-21T15:29:48Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nBy default, the Status List mechanism only conveys information about the state of Reference Tokens at the time the Status List Token was issued. The validity period for this information, as defined by the issuer, is explicitly stated by the `iat` (issued at) and `exp` (expiration time) claims for JWT, and their corresponding ones for the CWT representation.\r\n```",
              "createdAt": "2024-10-21T15:29:48Z",
              "updatedAt": "2024-10-21T15:29:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCTIf",
          "commit": {
            "abbreviatedOid": "3496266"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:08:19Z",
          "updatedAt": "2024-10-21T18:08:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6OChnK",
          "commit": {
            "abbreviatedOid": "0e07ad8"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:32:04Z",
          "updatedAt": "2024-10-21T18:32:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 179,
      "id": "PR_kwDOJZ2aqs59PV41",
      "title": "consolidate CWT and CBOR section and add mDL example",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/179",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #114 \r\nCloses #112 ",
      "createdAt": "2024-10-01T11:23:27Z",
      "updatedAt": "2024-10-02T08:12:16Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "2f57d2f6f18f7ce60aff52763ab2c3c9df4751b2",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "114-add-example-for-mdoc-as-referenced-token",
      "headRefOid": "0dc3a676109dfa7dd830e461b1ba57e988e3fdbf",
      "closedAt": "2024-10-02T08:12:12Z",
      "mergedAt": "2024-10-02T08:12:12Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "9c990a91033371372fb25fbfa340ed92eeccebe0"
      },
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Rendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/114-add-example-for-mdoc-as-referenced-token/draft-ietf-oauth-status-list.html\r\n\r\nWe need to fix width - otherwise the datatracker will refuse the document. I will make suggestions",
          "createdAt": "2024-10-01T11:26:49Z",
          "updatedAt": "2024-10-01T11:26:49Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tplooker please approve",
          "createdAt": "2024-10-01T17:59:34Z",
          "updatedAt": "2024-10-01T17:59:34Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6Leoy8",
          "commit": {
            "abbreviatedOid": "727c4db"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "should we move the annotated version to an annex?",
          "createdAt": "2024-10-01T12:31:18Z",
          "updatedAt": "2024-10-01T12:48:02Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion 8443a10126a118215901f3308201ef30820195a00302010202140bfec7da97e048e\r\n15ac3dacb9eafe82e64fd07f5300a06082a8648ce3d040302302331143012060355\r\n04030c0b75746f7069612069616361310b3009060355040613025553301e170d323\r\n4313030313030303030305a170d3235313030313030303030305a30213112301006\r\n035504030c0975746f706961206473310b300906035504061302555330593013060\r\n72a8648ce3d020106082a8648ce3d03010703420004ace7ab7340e5d9648c5a72a9\r\na6f56745c7aad436a03a43efea77b5fa7b88f0197d57d8983e1b37d3a539f4d5883\r\n65e38cbbf5b94d68c547b5bc8731dcd2f146ba381a83081a5301c0603551d1f0415\r\n30133011a00fa00d820b6578616d706c652e636f6d301e0603551d1204173015811\r\n36578616d706c65406578616d706c652e636f6d301d0603551d0e0416041414e290\r\n17a6c35621ffc7a686b7b72db06cd12351301f0603551d2304183016801454fa238\r\n3a04c28e0d930792261c80c4881d2c00b300e0603551d0f0101ff04040302078030\r\n150603551d250101ff040b3009060728818c5d050102300a06082a8648ce3d04030\r\n20348003045022100b7103fd4b90529f50bd6f70c5ae5ce7f4f3d4d15a4e082812f\r\n9fa1f5c2e5aa0a0220070b2822ec7ce6c56804923a85b2cfbffd054cf9a915f070c\r\nfef7179a4bc6569590320d81859031ba766737461747573a16b7374617475735f6c\r\n697374a26369647819019c63757269782168747470733a2f2f6578616d706c652e6\r\n36f6d2f7374617475736c697374732f3167646f6354797065756f72672e69736f2e\r\n31383031332e352e312e6d444c6776657273696f6e63312e306c76616c696469747\r\n9496e666fa3667369676e6564c074323032342d31302d30315431333a33303a3032\r\n5a6976616c696446726f6dc074323032342d31302d30315431333a33303a30325a6\r\na76616c6964556e74696cc074323032352d31302d30315431333a33303a30325a6c\r\n76616c756544696765737473a1716f72672e69736f2e31383031332e352e31ac005\r\n820a81d65ed5075fbd7ee19fa66e2bb3047ed826e2769873e7ef07c923da7a6f243\r\n01582048701a9546492284d266ed81d439230a582d0e1f17a08ab1859a3efe98069\r\n0a4025820d11fe48c8835b30bfb3895c3905436ddfb63f59ab9eee181b110985329\r\n2a8f62035820a741bf05e20a8bc359e32426106ed0899b2c60262cc3acc637ddc99\r\n41095fb7a045820ab67cb9a8f20a8572f77f02727367d08dc8e57fb89deb46b9c62\r\n6e94457b7d8b055820bacddb4142b3842bd555206eb5acb27ded063294995c7e7fe\r\nfbf93ece522604d065820bfd02b3aebdc05b53b5539226c38088d6d784b0ea0fab6\r\n9eb9311650a48d325307582027dab70fe71da63e5e5d199e8ae5b79cbe8904bc30c\r\n5b7544fb809e02ccb3e6a0858200dbd7ccc9c7727d3d17295f1b6f1914071670ee2\r\n3d4d33530c31f1f406b8e3b7095820a5beb5efadf37f21637209abc519830681cc5\r\n1f334818a823fec13b29552f5ba0a5820d8047c95f9272d7d07b2c13a9f5ac2ee02\r\n380ab272a165e569391d89a2152c3c0b582004939930ffb4911ef03487a153605a3\r\n0368b69f2437d6d21b4c90f92bc144c3e6d6465766963654b6579496e666fa16964\r\n65766963654b6579a40102200121582096313d6c63e24e3372742bfdb1a33ba2c89\r\n7dcd68ab8c753e4fbd48dca6b7f9a2258201fb3269edd418857de1b39a4e4a44b92\r\nfa484caa722c228288f01d0c03a2c3d66f646967657374416c676f726974686d675\r\n348412d3235365840b7c2d4abe85aa5ba814ef95de0385c71c802be8ac33a4a971a\r\n85ed800ba7acb59cb21035f4a68fc0caa450cbefd3b255aec72f83595f0ae7b7d50\r\nfe8a1c4cafe\r\n```",
              "createdAt": "2024-10-01T12:31:18Z",
              "updatedAt": "2024-10-01T12:48:02Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\n~~~~~~~~~~\r\n[\r\n  << {\r\n    1: -7\r\n  } >>,\r\n  {\r\n    33: h'308201ef30820195a00302010202140bfec7da97e048e15ac3dacb9ea\r\n    fe82e64fd07f5300a06082a8648ce3d04030230233114301206035504030c0b\r\n    75746f7069612069616361310b3009060355040613025553301e170d3234313\r\n    030313030303030305a170d3235313030313030303030305a30213112301006\r\n    035504030c0975746f706961206473310b30090603550406130255533059301\r\n    306072a8648ce3d020106082a8648ce3d03010703420004ace7ab7340e5d964\r\n    8c5a72a9a6f56745c7aad436a03a43efea77b5fa7b88f0197d57d8983e1b37d\r\n    3a539f4d588365e38cbbf5b94d68c547b5bc8731dcd2f146ba381a83081a530\r\n    1c0603551d1f041530133011a00fa00d820b6578616d706c652e636f6d301e0\r\n    603551d120417301581136578616d706c65406578616d706c652e636f6d301d\r\n    0603551d0e0416041414e29017a6c35621ffc7a686b7b72db06cd12351301f0\r\n    603551d2304183016801454fa2383a04c28e0d930792261c80c4881d2c00b30\r\n    0e0603551d0f0101ff04040302078030150603551d250101ff040b300906072\r\n    8818c5d050102300a06082a8648ce3d0403020348003045022100b7103fd4b9\r\n    0529f50bd6f70c5ae5ce7f4f3d4d15a4e082812f9fa1f5c2e5aa0a0220070b2\r\n    822ec7ce6c56804923a85b2cfbffd054cf9a915f070cfef7179a4bc6569'\r\n  },\r\n  << 24( << {\r\n    \"status\": {\r\n      \"status_list\": {\r\n        \"idx\": 412,\r\n        \"uri\": \"https://example.com/statuslists/1\"\r\n      }\r\n    },\r\n    \"docType\": \"org.iso.18013.5.1.mDL\",\r\n    \"version\": \"1.0\",\r\n    \"validityInfo\": {\r\n      \"signed\": 2024-10-01 13:30:02+00:00,\r\n      \"validFrom\": 2024-10-01 13:30:02+00:00,\r\n      \"validUntil\": 2025-10-01 13:30:02+00:00\r\n    },\r\n    \"valueDigests\": {\r\n      \"org.iso.18013.5.1\": {\r\n        0: h'a81d65ed5075fbd7ee19fa66e2bb3047ed826e2769873e7ef07c92\r\n        3da7a6f243',\r\n        1: h'48701a9546492284d266ed81d439230a582d0e1f17a08ab1859a3e\r\n        fe980690a4',\r\n        2: h'd11fe48c8835b30bfb3895c3905436ddfb63f59ab9eee181b11098\r\n        53292a8f62',\r\n        3: h'a741bf05e20a8bc359e32426106ed0899b2c60262cc3acc637ddc9\r\n        941095fb7a',\r\n        4: h'ab67cb9a8f20a8572f77f02727367d08dc8e57fb89deb46b9c626e\r\n        94457b7d8b',\r\n        5: h'bacddb4142b3842bd555206eb5acb27ded063294995c7e7fefbf93\r\n        ece522604d',\r\n        6: h'bfd02b3aebdc05b53b5539226c38088d6d784b0ea0fab69eb93116\r\n        50a48d3253',\r\n        7: h'27dab70fe71da63e5e5d199e8ae5b79cbe8904bc30c5b7544fb809\r\n        e02ccb3e6a',\r\n        8: h'0dbd7ccc9c7727d3d17295f1b6f1914071670ee23d4d33530c31f1\r\n        f406b8e3b7',\r\n        9: h'a5beb5efadf37f21637209abc519830681cc51f334818a823fec13\r\n        b29552f5ba',\r\n        10: h'd8047c95f9272d7d07b2c13a9f5ac2ee02380ab272a165e569391\r\n        d89a2152c3c',\r\n        11: h'04939930ffb4911ef03487a153605a30368b69f2437d6d21b4c90\r\n        f92bc144c3e'\r\n      }\r\n    },\r\n    \"deviceKeyInfo\": {\r\n      \"deviceKey\": {\r\n        1: 2,\r\n        -1: 1,\r\n        -2: h'96313d6c63e24e3372742bfdb1a33ba2c897dcd68ab8c753e4fbd\r\n        48dca6b7f9a',\r\n        -3: h'1fb3269edd418857de1b39a4e4a44b92fa484caa722c228288f01\r\n        d0c03a2c3d6'\r\n      }\r\n    },\r\n    \"digestAlgorithm\": \"SHA-256\"\r\n  } >> ) >>,\r\n  h'b7c2d4abe85aa5ba814ef95de0385c71c802be8ac33a4a971a85ed800ba7acb\r\n  59cb21035f4a68fc0caa450cbefd3b255aec72f83595f0ae7b7d50fe8a1c4cafe'\r\n]\r\n~~~~~~~~~~\r\n```",
              "createdAt": "2024-10-01T12:47:28Z",
              "updatedAt": "2024-10-01T12:48:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6LgmtI",
          "commit": {
            "abbreviatedOid": "232a01a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:41:51Z",
          "updatedAt": "2024-10-01T14:41:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n## Referenced Token in JOSE {#referenced-token-jose}\r\n```",
              "createdAt": "2024-10-01T14:41:51Z",
              "updatedAt": "2024-10-01T14:41:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6LgniX",
          "commit": {
            "abbreviatedOid": "232a01a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:43:05Z",
          "updatedAt": "2024-10-01T14:43:05Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThe Referenced Token MAY be encoded as a \"COSE Web Token (CWT)\" object according to {{RFC8392}} or other formats based on COSE.\r\n```",
              "createdAt": "2024-10-01T14:43:05Z",
              "updatedAt": "2024-10-01T14:43:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Lg3EE",
          "commit": {
            "abbreviatedOid": "2db6f4d"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T15:05:23Z",
          "updatedAt": "2024-10-01T15:08:44Z",
          "comments": [
            {
              "originalPosition": 104,
              "body": "This is not annotated hex, but I do believe Diagnostic Notation makes a lot of sense for such a big example\r\n```suggestion\r\nThe following is the CBOR Diagnostic Notation of the example above:\r\n```",
              "createdAt": "2024-10-01T15:05:24Z",
              "updatedAt": "2024-10-01T15:08:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6LhyAv",
          "commit": {
            "abbreviatedOid": "2db6f4d"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T16:37:14Z",
          "updatedAt": "2024-10-01T16:37:14Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nThe following is a non-normative example for an IssuerAuth as specified in ISO mDL (also referred to as signed MSO) in Hex:\r\n```",
              "createdAt": "2024-10-01T16:37:14Z",
              "updatedAt": "2024-10-01T17:58:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6LiWqh",
          "commit": {
            "abbreviatedOid": "f189c68"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T17:57:27Z",
          "updatedAt": "2024-10-01T17:57:27Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nISO mdoc {{ISO.mdoc}} may utilize the Status List mechanism by introducing the `status` parameter in the Mobile Security Object (MSO) as specified in Section 9.1.2. The `status` parameter uses the same encoding as a CWT as defined in {{referenced-token-cose}}.\r\n```",
              "createdAt": "2024-10-01T17:57:27Z",
              "updatedAt": "2024-10-01T17:57:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6LirW0",
          "commit": {
            "abbreviatedOid": "0dc3a67"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Looks good imho",
          "createdAt": "2024-10-01T18:36:32Z",
          "updatedAt": "2024-10-01T18:36:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 180,
      "id": "PR_kwDOJZ2aqs597Zeh",
      "title": "editorial fixes",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/180",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial"
      ],
      "body": "",
      "createdAt": "2024-10-08T10:13:23Z",
      "updatedAt": "2024-10-09T06:14:11Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "9c990a91033371372fb25fbfa340ed92eeccebe0",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "editorial",
      "headRefOid": "950b026cb657166ec41204508b7b863ecaa93964",
      "closedAt": "2024-10-09T06:14:11Z",
      "mergedAt": "2024-10-09T06:14:11Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "d0dbf2753366d7193248223fe901561851434fca"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6MUdhT",
          "commit": {
            "abbreviatedOid": "bdabba1"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:13:57Z",
          "updatedAt": "2024-10-08T11:13:57Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n- disable the Status List Aggregation [](#batch-fetching)\r\n```",
              "createdAt": "2024-10-08T11:13:57Z",
              "updatedAt": "2024-10-08T11:13:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6MYQbS",
          "commit": {
            "abbreviatedOid": "950b026"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-08T17:56:03Z",
          "updatedAt": "2024-10-08T17:56:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 183,
      "id": "PR_kwDOJZ2aqs5-8GeQ",
      "title": "mixing formats and media types",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/183",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "closes #38\r\ncloses #168\r\ncloses #137\r\n\r\nRendered preview: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/mixing-formats/draft-ietf-oauth-status-list.html\r\n\r\nThis PR attempts to add a bit of language about mixing formats and also changes the content-type in the status list response to SHOULD and language around content type parsing that is similar to the language used in HTTP/1.1.\r\n\r\nI am happy to remove the media types part if we want a bit more discussion, but when I started writing this, it felt like right path so I decided to include it as a proposal.",
      "createdAt": "2024-10-17T09:15:17Z",
      "updatedAt": "2024-11-17T14:27:33Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "96d7bfd0ebbe8b652063b234b15d5f48ebb4d59d",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/mixing-formats",
      "headRefOid": "85144dffcfbb4ac371475354bb85b08ece11a901",
      "closedAt": "2024-11-17T14:27:33Z",
      "mergedAt": "2024-11-17T14:27:33Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "f2a651aba3fd5a429c51324050ef87b0868bed45"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6N0F8H",
          "commit": {
            "abbreviatedOid": "38b916d"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T06:33:30Z",
          "updatedAt": "2024-10-19T06:33:31Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n```\r\n\r\nGenerally we shouldn't document decisions in spec text.",
              "createdAt": "2024-10-19T06:33:30Z",
              "updatedAt": "2024-10-19T06:33:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N0F_w",
          "commit": {
            "abbreviatedOid": "38b916d"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T06:35:22Z",
          "updatedAt": "2024-10-19T06:35:22Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n This specification defines 4 different formats of the status list:\r\n```",
              "createdAt": "2024-10-19T06:35:22Z",
              "updatedAt": "2024-10-19T06:35:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N5UeW",
          "commit": {
            "abbreviatedOid": "d828648"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-20T17:10:32Z",
          "updatedAt": "2024-10-20T17:10:32Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Why is the reference called status-**types**-response?",
              "createdAt": "2024-10-20T17:10:32Z",
              "updatedAt": "2024-10-20T17:10:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N5Uin",
          "commit": {
            "abbreviatedOid": "d828648"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-20T17:12:29Z",
          "updatedAt": "2024-10-20T17:12:30Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThis specification states no requirements to not mix different formats like a CBOR based Referenced Token using a JWT for the Status List, but the expectation is that within an ecosystem, a choice for specific formats is made.\r\n```",
              "createdAt": "2024-10-20T17:12:29Z",
              "updatedAt": "2024-10-20T17:12:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N5VIH",
          "commit": {
            "abbreviatedOid": "d828648"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "I'm not feeling confident with the change of MUST -> SHOULD for media type return. Maybe \"MUST .. unless media type is known out-of-band\"?",
          "createdAt": "2024-10-20T17:22:16Z",
          "updatedAt": "2024-10-20T17:22:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6N5evg",
          "commit": {
            "abbreviatedOid": "d828648"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-20T19:03:18Z",
          "updatedAt": "2024-10-20T19:03:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "copy paste mistake - fixed it",
              "createdAt": "2024-10-20T19:03:19Z",
              "updatedAt": "2024-10-20T19:03:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N5e6d",
          "commit": {
            "abbreviatedOid": "bbee3a8"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-20T19:08:02Z",
          "updatedAt": "2024-10-20T19:08:02Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Would this work for you @paulbastian?\r\n```suggestion\r\nIn the successful response, the Status List Provider MUST use the following content-type unless known out of band:\r\n```",
              "createdAt": "2024-10-20T19:08:02Z",
              "updatedAt": "2024-10-20T19:08:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Q96xH",
          "commit": {
            "abbreviatedOid": "48c244e"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T07:33:55Z",
          "updatedAt": "2024-11-13T07:33:56Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-11-13T07:33:55Z",
              "updatedAt": "2024-11-13T07:33:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Q97j2",
          "commit": {
            "abbreviatedOid": "48c244e"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T07:34:55Z",
          "updatedAt": "2024-11-13T07:34:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nIn the successful response, the Status List Provider MUST use the following content-type:\r\n```",
              "createdAt": "2024-11-13T07:34:55Z",
              "updatedAt": "2024-11-13T07:34:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6RDorR",
          "commit": {
            "abbreviatedOid": "173728a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-13T15:43:59Z",
          "updatedAt": "2024-11-13T15:43:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 184,
      "id": "PR_kwDOJZ2aqs5_KayE",
      "title": "fix: update cwt claim definitions",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/184",
      "state": "MERGED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #145 ",
      "createdAt": "2024-10-19T06:58:36Z",
      "updatedAt": "2024-10-21T18:31:34Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "20b2526d0c752011c26bc46295362f669cb3117a",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "tl/issue-145",
      "headRefOid": "ac38b8b82ffe0cb81ea5e044448af771bfb41c0f",
      "closedAt": "2024-10-21T18:31:31Z",
      "mergedAt": "2024-10-21T18:31:31Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "604435b54e6274c6d04be78e88b5f3f0cd269c96"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "please reference CBOR major types as we did for Status List object",
          "createdAt": "2024-10-20T15:54:25Z",
          "updatedAt": "2024-10-20T15:54:25Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Update based on feedback.",
          "createdAt": "2024-10-21T08:52:00Z",
          "updatedAt": "2024-10-21T08:52:00Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6N1pB2",
          "commit": {
            "abbreviatedOid": "57b3bb3"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "We should adjust adjust lines 415-417 as well",
          "createdAt": "2024-10-19T17:16:23Z",
          "updatedAt": "2024-10-19T17:16:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6N5FLh",
          "commit": {
            "abbreviatedOid": "57b3bb3"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-20T15:53:28Z",
          "updatedAt": "2024-10-20T15:53:28Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Should we talk about what CBOR type this is'? (Major Type 0)?",
              "createdAt": "2024-10-20T15:53:28Z",
              "updatedAt": "2024-10-20T15:53:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N_prE",
          "commit": {
            "abbreviatedOid": "f1dd2ad"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T14:20:24Z",
          "updatedAt": "2024-10-21T14:46:12Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Should we refer to the same rules as exp ?\r\n```suggestion\r\n* `ttl`: OPTIONAL. The `ttl` (time to live) claim, if present, MUST specify the maximum amount of time, in seconds, that the Status List Token can be cached by a consumer before a fresh copy SHOULD be retrieved. Its value MUST be a positive number containing a NumericDate value as defined in Section 2 of {{RFC7519}}.\r\n```",
              "createdAt": "2024-10-21T14:20:25Z",
              "updatedAt": "2024-10-21T14:46:50Z"
            },
            {
              "originalPosition": 26,
              "body": "Same as above: Should we re-use the same data type as exp and iat?\r\n```suggestion\r\n* `65534` (time to live): OPTIONAL. The time to live claim, if present, MUST specify the maximum amount of time, in seconds, that the Status List Token can be cached by a consumer before a fresh copy SHOULD be retrieved. The value of the claim MUST be a NumericDate, as defined in Section 2 of {{RFC8392}}\r\n```",
              "createdAt": "2024-10-21T14:45:55Z",
              "updatedAt": "2024-10-21T14:46:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OATbM",
          "commit": {
            "abbreviatedOid": "f1dd2ad"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T15:15:29Z",
          "updatedAt": "2024-10-21T15:15:29Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "This language is a different style than what we did for the Status List, e.g.\r\n\r\n> bits: REQUIRED. Unsigned int (Major Type 0) that contains the number of bits per Referenced Token in the Status List. The allowed values for bits are 1, 2, 4 and 8.\r\n\r\nI would prefer starting the explanation with the type definition",
              "createdAt": "2024-10-21T15:15:29Z",
              "updatedAt": "2024-10-21T15:15:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCbe1",
          "commit": {
            "abbreviatedOid": "f1dd2ad"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T18:19:50Z",
          "updatedAt": "2024-10-21T18:19:50Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "ttl is a time duration",
              "createdAt": "2024-10-21T18:19:50Z",
              "updatedAt": "2024-10-21T18:19:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCfDk",
          "commit": {
            "abbreviatedOid": "fbb9c17"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T18:27:23Z",
          "updatedAt": "2024-10-21T18:27:24Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n    * `uri`: REQUIRED. Text string (Major Type 3). The `uri` (URI) claim MUST specify a String value that identifies the Status List or Status List Token containing the status information for the Referenced Token. The value of `uri` MUST be a URI conforming to {{RFC3986}}.\r\n```",
              "createdAt": "2024-10-21T18:27:23Z",
              "updatedAt": "2024-10-21T18:27:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCg5H",
          "commit": {
            "abbreviatedOid": "ac38b8b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:31:13Z",
          "updatedAt": "2024-10-21T18:31:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCg7H",
          "commit": {
            "abbreviatedOid": "ac38b8b"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:31:17Z",
          "updatedAt": "2024-10-21T18:31:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 185,
      "id": "PR_kwDOJZ2aqs5_Onmv",
      "title": "remove constraint that Status List Token must not use a MAC",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/185",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #111 ",
      "createdAt": "2024-10-20T14:52:11Z",
      "updatedAt": "2024-10-21T18:10:08Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "d0dbf2753366d7193248223fe901561851434fca",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/relax_mac",
      "headRefOid": "e69b8ba0f277443ead063bd7791d3a422e15f3b2",
      "closedAt": "2024-10-21T18:10:08Z",
      "mergedAt": "2024-10-21T18:10:08Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "80df1bdbe79df6e562bc3365aad1f86fe4ce212e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6N5DpY",
          "commit": {
            "abbreviatedOid": "6ad3410"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Document history entry is missing and I think we should also adjust line 90\r\n\r\n> A Status List may either be provided via HTTPS or be signed and embedded into a Status List Token, whereas this document defines its representations in JWT and CWT.",
          "createdAt": "2024-10-20T15:30:13Z",
          "updatedAt": "2024-10-20T15:30:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6N5FOW",
          "commit": {
            "abbreviatedOid": "530e92b"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-20T15:54:42Z",
          "updatedAt": "2024-10-20T15:54:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6N8NNT",
          "commit": {
            "abbreviatedOid": "530e92b"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T08:54:23Z",
          "updatedAt": "2024-10-21T08:54:24Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n2. The CWT MUST be secured using a cryptographic signature or MAC algorithm. Relying Parties MUST reject CWTs with an invalid signature.\r\n```",
              "createdAt": "2024-10-21T08:54:23Z",
              "updatedAt": "2024-10-21T08:54:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6N8Ndw",
          "commit": {
            "abbreviatedOid": "530e92b"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "One typo otherwise looks good.",
          "createdAt": "2024-10-21T08:54:50Z",
          "updatedAt": "2024-10-21T08:55:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCUi3",
          "commit": {
            "abbreviatedOid": "e69b8ba"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:10:01Z",
          "updatedAt": "2024-10-21T18:10:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 186,
      "id": "PR_kwDOJZ2aqs5_OtD-",
      "title": "improve section on Status Types and introduce IANA registry for it",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/186",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #177 \r\nCloses #181 ",
      "createdAt": "2024-10-20T15:45:13Z",
      "updatedAt": "2024-10-21T18:18:04Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "29f5e7f30537386a64fe38d5ef31d8ab73c3ac9b",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/iana_status_types",
      "headRefOid": "fb584f7c69b65eaf689862e183d642db7e2fdda3",
      "closedAt": "2024-10-21T18:18:03Z",
      "mergedAt": "2024-10-21T18:18:03Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "20b2526d0c752011c26bc46295362f669cb3117a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6N8OHn",
          "commit": {
            "abbreviatedOid": "253abf2"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T08:55:54Z",
          "updatedAt": "2024-10-21T08:55:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis document defines statuses of Referenced Tokens as Status Type values. A status describes the state, mode, condition or stage of an entity that is represented by the Referenced Token.\r\n```\r\n\r\nIs this what you meant?",
              "createdAt": "2024-10-21T08:55:54Z",
              "updatedAt": "2024-10-21T08:55:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCaEF",
          "commit": {
            "abbreviatedOid": "fb584f7"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:16:34Z",
          "updatedAt": "2024-10-21T18:16:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCanX",
          "commit": {
            "abbreviatedOid": "fb584f7"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:17:50Z",
          "updatedAt": "2024-10-21T18:17:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 187,
      "id": "PR_kwDOJZ2aqs5_PK46",
      "title": "Status Issuer and Status Provider role description to the introductio\u2026",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/187",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #158 ",
      "createdAt": "2024-10-20T18:08:14Z",
      "updatedAt": "2024-10-21T18:12:53Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "80df1bdbe79df6e562bc3365aad1f86fe4ce212e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/terminology",
      "headRefOid": "e65f52e80beb06737581a51d30dd2310f5a3f83a",
      "closedAt": "2024-10-21T18:12:53Z",
      "mergedAt": "2024-10-21T18:12:53Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "29f5e7f30537386a64fe38d5ef31d8ab73c3ac9b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6N8mzW",
          "commit": {
            "abbreviatedOid": "f63f5fa"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T09:36:19Z",
          "updatedAt": "2024-10-21T14:16:42Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "This part is introduced as the Issuer-Holder-Verifier model and the ascii art then contains no Verifier. Would it make sense to Change \"Relying Party\" to \"Verifier/RP\" or perhaps better add a remark to the sentence introducing the 3 party model  that Verifier=RP here?",
              "createdAt": "2024-10-21T09:36:19Z",
              "updatedAt": "2024-10-21T14:16:42Z"
            },
            {
              "originalPosition": 226,
              "body": "```suggestion\r\nIf the roles of the Issuer and the Status Provider are performed by two different entities, this may give additional privacy assurances as the Issuer has no means to identify the Relying Party or its request.\r\n```",
              "createdAt": "2024-10-21T14:11:31Z",
              "updatedAt": "2024-10-21T14:16:42Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nAn Issuer issues Referenced Tokens to a Holder, the Holder uses and presents those Referenced Tokens to a Relying Party. The Issuer gives updated status information to the Status Issuer, who creates a Status List (Token). The Status Issuer gives the Status List (Token) to the Status Provider, who serves the Status List (Token) on a public, resolvable endpoint. The roles of the Issuer (of the Referenced Token), the Status Issuer and the Status Provider may be fulfilled by the same entity. If not further specified, the term Issuer may refer to an entity acting for all three roles.\r\n```",
              "createdAt": "2024-10-21T14:13:47Z",
              "updatedAt": "2024-10-21T14:16:42Z"
            },
            {
              "originalPosition": 215,
              "body": "Not sure about this one, but I guess we are talking about a trusted third party?\r\n```suggestion\r\n- using trusted Third Party Hosting, see [](#third-party-hosting).\r\n```",
              "createdAt": "2024-10-21T14:16:18Z",
              "updatedAt": "2024-10-21T14:16:42Z"
            },
            {
              "originalPosition": 231,
              "body": "```suggestion\r\nThird Party hosting may also allow for greater scalability, as the Status List Tokens may be served by operators with greater resources, like CDNs.\r\n```",
              "createdAt": "2024-10-21T14:16:34Z",
              "updatedAt": "2024-10-21T14:16:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OAVjy",
          "commit": {
            "abbreviatedOid": "f63f5fa"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T15:18:59Z",
          "updatedAt": "2024-10-21T15:18:59Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe following diagram depicts the relationship between the involved roles (Relying Party is equivalent to Verifier of {{SD-JWT.VC}}):\r\n```",
              "createdAt": "2024-10-21T15:18:59Z",
              "updatedAt": "2024-10-21T15:18:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OAWxo",
          "commit": {
            "abbreviatedOid": "f63f5fa"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T15:20:57Z",
          "updatedAt": "2024-10-21T15:20:57Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "Move this from privacy to implementers consideration?",
              "createdAt": "2024-10-21T15:20:57Z",
              "updatedAt": "2024-10-21T15:20:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCVbo",
          "commit": {
            "abbreviatedOid": "f39114d"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:11:05Z",
          "updatedAt": "2024-10-21T18:11:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6OCVcM",
          "commit": {
            "abbreviatedOid": "f39114d"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T18:11:06Z",
          "updatedAt": "2024-10-21T18:11:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 190,
      "id": "PR_kwDOJZ2aqs6Au-dm",
      "title": "fixes from IETF review",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/190",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-03T21:04:00Z",
      "updatedAt": "2024-11-17T14:25:36Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1ae169297c0781f33681498150c85610d631ab95",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "ietf_review",
      "headRefOid": "2bf299013ec00ab77498a45e50119a8e820825f8",
      "closedAt": "2024-11-17T14:25:36Z",
      "mergedAt": "2024-11-17T14:25:36Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "96d7bfd0ebbe8b652063b234b15d5f48ebb4d59d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6RR2pK",
          "commit": {
            "abbreviatedOid": "2bf2990"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-14T23:11:48Z",
          "updatedAt": "2024-11-14T23:11:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 193,
      "id": "PR_kwDOJZ2aqs6BvY0m",
      "title": "Add implementations to README",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/193",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #192 ",
      "createdAt": "2024-11-13T08:02:00Z",
      "updatedAt": "2024-11-13T15:41:38Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1ae169297c0781f33681498150c85610d631ab95",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "impls",
      "headRefOid": "1e8a964f9767e38e57a5150efffe0bbc39b8fba0",
      "closedAt": "2024-11-13T15:41:32Z",
      "mergedAt": "2024-11-13T15:41:32Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "eff7aa82052336c352967113870b1dcda9f3f81b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6Q-pBa",
          "commit": {
            "abbreviatedOid": "e6e6fe9"
          },
          "author": "lukasjhan",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T08:55:40Z",
          "updatedAt": "2024-11-13T08:55:40Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "In my point of view, the repo is would be better: https://github.com/openwallet-foundation/sd-jwt-js\r\nWhat do you guys think?",
              "createdAt": "2024-11-13T08:55:40Z",
              "updatedAt": "2024-11-13T08:55:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Q-2_l",
          "commit": {
            "abbreviatedOid": "e6e6fe9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T09:17:21Z",
          "updatedAt": "2024-11-13T09:17:21Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "sure I don't mind",
              "createdAt": "2024-11-13T09:17:21Z",
              "updatedAt": "2024-11-13T09:17:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Q-3Li",
          "commit": {
            "abbreviatedOid": "e6e6fe9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T09:17:38Z",
          "updatedAt": "2024-11-13T09:17:38Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n- TypeScript: [OWF sd-jwt-js](https://github.com/openwallet-foundation/sd-jwt-js)\r\n```",
              "createdAt": "2024-11-13T09:17:38Z",
              "updatedAt": "2024-11-13T09:17:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Q_E0Z",
          "commit": {
            "abbreviatedOid": "ed8cf2a"
          },
          "author": "lukasjhan",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Thank you",
          "createdAt": "2024-11-13T09:37:59Z",
          "updatedAt": "2024-11-13T09:37:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6RCxM6",
          "commit": {
            "abbreviatedOid": "ed8cf2a"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-13T14:30:34Z",
          "updatedAt": "2024-11-13T14:30:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6RDlKr",
          "commit": {
            "abbreviatedOid": "ed8cf2a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:38:56Z",
          "updatedAt": "2024-11-13T15:38:56Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n| Project | Language | Issuer | Holder | Relying Party |\r\n|---|---|---|---|---|\r\n| [OWF sd-jwt-js](https://github.com/openwallet-foundation/sd-jwt-js) | TypeScript | yes | yes | yes |\r\n```",
              "createdAt": "2024-11-13T15:38:56Z",
              "updatedAt": "2024-11-13T15:39:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 195,
      "id": "PR_kwDOJZ2aqs6CKSzh",
      "title": "Remove unsigned option",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/195",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Still needs some work. I've kept the overall document structure as it felt cleaner to me this way instead of moving status list data structures directly into the JWT/CWT sections.\r\n\r\nRendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/remove-unsigned-option/draft-ietf-oauth-status-list.html",
      "createdAt": "2024-11-17T15:40:44Z",
      "updatedAt": "2024-11-20T16:44:48Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f2a651aba3fd5a429c51324050ef87b0868bed45",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/remove-unsigned-option",
      "headRefOid": "65ad8df4a2de23d71b4652b80e21d605b7484b8d",
      "closedAt": "2024-11-20T16:44:48Z",
      "mergedAt": "2024-11-20T16:44:48Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "2c39902b601813cb6f6a2ba2ba7cc0e83565af06"
      },
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Looking good there is still some text in section 8.4 referring to the unsigned option that will need to be removed too.",
          "createdAt": "2024-11-17T18:26:14Z",
          "updatedAt": "2024-11-17T18:26:14Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6RgINF",
          "commit": {
            "abbreviatedOid": "67a85aa"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-17T18:19:52Z",
          "updatedAt": "2024-11-17T18:19:52Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThis document defines a Status List and its representations in JWT and CWT formats that describe the individual statuses of multiple Referenced Tokens, which themselves are most commonly data structures secure by JOSE or COSE. The statuses of all Referenced Tokens are conveyed via a bit array in the Status List. Each Referenced Token is allocated an index during issuance that represents its position within this bit array. The value of the bit(s) at this index correspond to the Referenced Token's status. A Status List is provided within a Status List Token protected by cryptographic signature or MAC and this document defines its representations in JWT and CWT format. Status Lists may be composed for expressing a range of Status Types. This document defines basic Status Types for the most common use cases as well as an extensibility mechanism for custom Status Types. The document also defines how an issuer of a Referenced Token references a Status List Token.\r\n```\r\n\r\nNot sure if I like this language that much but we need to widen it a little given an mDoc isn't a CWT. ",
              "createdAt": "2024-11-17T18:19:52Z",
              "updatedAt": "2024-11-17T18:22:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6R5qQ0",
          "commit": {
            "abbreviatedOid": "7bd59bf"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T08:11:34Z",
          "updatedAt": "2024-11-20T08:11:34Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nAn Issuer issues Referenced Tokens to a Holder, the Holder uses and presents those Referenced Tokens to a Relying Party. The Issuer gives updated status information to the Status Issuer, who creates a Status List Token. The Status Issuer provides the Status List Token to the Status Provider, who serves the Status List Token on a public, resolvable endpoint. The roles of the Issuer (of the Referenced Token), the Status Issuer and the Status Provider may be fulfilled by the same entity. If not further specified, the term Issuer may refer to an entity acting for all three roles.\r\n```",
              "createdAt": "2024-11-20T08:11:34Z",
              "updatedAt": "2024-11-20T08:11:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6R5sYP",
          "commit": {
            "abbreviatedOid": "7bd59bf"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T08:15:14Z",
          "updatedAt": "2024-11-20T08:15:14Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Relying Party: Status List -> Status List Token",
              "createdAt": "2024-11-20T08:15:14Z",
              "updatedAt": "2024-11-20T08:15:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6R5t5r",
          "commit": {
            "abbreviatedOid": "7bd59bf"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T08:18:15Z",
          "updatedAt": "2024-11-20T08:18:16Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "status list mechanism -> Status List mechanism",
              "createdAt": "2024-11-20T08:18:16Z",
              "updatedAt": "2024-11-20T08:18:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6R56AS",
          "commit": {
            "abbreviatedOid": "e1d1b4b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-20T08:39:15Z",
          "updatedAt": "2024-11-20T08:39:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6R-2hA",
          "commit": {
            "abbreviatedOid": "65ad8df"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-20T16:40:46Z",
          "updatedAt": "2024-11-20T16:40:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 198,
      "id": "PR_kwDOJZ2aqs6Cjs69",
      "title": "rework the introduction",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/198",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #197 \r\nCloses #196 \r\nCloses #189 ",
      "createdAt": "2024-11-20T16:45:58Z",
      "updatedAt": "2024-11-29T07:25:54Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "732ce210b719f908b46889a5abfb126cbcff1643",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/introduction2",
      "headRefOid": "ec49cbe8d166897a1ac86f0336227a5d3a97c804",
      "closedAt": "2024-11-29T07:25:50Z",
      "mergedAt": "2024-11-29T07:25:50Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "2159cc0776bf8386bc3a9d052335f092b79f9285"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6SwpKv",
          "commit": {
            "abbreviatedOid": "ffbefd1"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-26T17:11:51Z",
          "updatedAt": "2024-11-26T17:14:50Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThis specification defines a mechanism, data structures and processing rules for representing the status of tokens secured by JSON Object Signing and Encryption (JOSE) or CBOR Object Signing and Encryption (COSE), such as JWT, SD-JWT VC, CBOR Web Token and ISO mdoc. It also defines an extension point and a registry for future status mechanisms.\r\n```",
              "createdAt": "2024-11-26T17:11:51Z",
              "updatedAt": "2024-11-26T17:14:50Z"
            },
            {
              "originalPosition": 82,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-11-26T17:14:34Z",
              "updatedAt": "2024-11-26T17:14:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TLb0x",
          "commit": {
            "abbreviatedOid": "31141aa"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-29T07:24:57Z",
          "updatedAt": "2024-11-29T07:24:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6TLb2Z",
          "commit": {
            "abbreviatedOid": "f686b00"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-29T07:25:01Z",
          "updatedAt": "2024-11-29T07:25:01Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nToken formats secured by JOSE {{IANA.JOSE}} or COSE {{RFC9052}}, such as JWTs {{RFC7519}}, SD-JWT VCs {{SD-JWT.VC}}, CWTs {{RFC8392}} and ISO mdoc {{ISO.mdoc}}, have vast possible applications. Some of these applications can involve issuing a token whereby certain semantics about the token or its validity may change over time. Communicating these changes to relying parties in an interoperable manner, such as whether the token is considered invalidated or suspended by its issuer, is important for many of these applications.\r\n```",
              "createdAt": "2024-11-29T07:25:01Z",
              "updatedAt": "2024-11-29T07:25:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 200,
      "id": "PR_kwDOJZ2aqs6Csei5",
      "title": "add status_list_aggregation_endpoint OAuth metadata",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/200",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #143 ",
      "createdAt": "2024-11-21T16:21:14Z",
      "updatedAt": "2024-11-29T07:07:18Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "2c39902b601813cb6f6a2ba2ba7cc0e83565af06",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "oauth-metadata",
      "headRefOid": "cb7edb665d76eaac43e6470bc9b0bd2b74d6df83",
      "closedAt": "2024-11-29T07:07:18Z",
      "mergedAt": "2024-11-29T07:07:18Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "b2efabb139d93eec422f911db10491e8de45a632"
      },
      "comments": [
        {
          "author": "nynymike",
          "authorAssociation": "NONE",
          "body": "yes, `aggregation_uri` looks great.",
          "createdAt": "2024-11-21T19:14:42Z",
          "updatedAt": "2024-11-21T19:14:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6SSG4y",
          "commit": {
            "abbreviatedOid": "729b871"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-22T11:40:44Z",
          "updatedAt": "2024-11-22T11:40:45Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "This sounds wrong to me?\r\n```suggestion\r\nThis specification requests registration of the following value in the IANA \"OAuth Authorization Server Metadata\" registry {{IANA.OAuth.Params}} established by {{RFC8414}}.\r\n```",
              "createdAt": "2024-11-22T11:40:45Z",
              "updatedAt": "2024-11-22T11:40:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Swsic",
          "commit": {
            "abbreviatedOid": "729b871"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM apart from the minor text change",
          "createdAt": "2024-11-26T17:18:25Z",
          "updatedAt": "2024-11-26T17:18:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6TKXfm",
          "commit": {
            "abbreviatedOid": "cb7edb6"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-29T02:11:34Z",
          "updatedAt": "2024-11-29T02:11:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 201,
      "id": "PR_kwDOJZ2aqs6C89q8",
      "title": "status codes & redirect",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/201",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #188\r\n\r\nRendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/status-code-redirect/draft-ietf-oauth-status-list.html",
      "createdAt": "2024-11-24T22:48:46Z",
      "updatedAt": "2024-11-29T07:09:15Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "b2efabb139d93eec422f911db10491e8de45a632",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/status-code-redirect",
      "headRefOid": "ae2500769c9283cf072dcf479c333e9df44ec1f3",
      "closedAt": "2024-11-29T07:09:15Z",
      "mergedAt": "2024-11-29T07:09:15Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "8423ed2fe0230e3419751fabe89fb5f17c0bcc1f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6S_MSf",
          "commit": {
            "abbreviatedOid": "8288ea2"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-27T22:30:34Z",
          "updatedAt": "2024-11-27T22:30:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6S_MXg",
          "commit": {
            "abbreviatedOid": "8288ea2"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-27T22:30:57Z",
          "updatedAt": "2024-11-27T22:30:57Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "is redirect rather a SHOULD?",
              "createdAt": "2024-11-27T22:30:57Z",
              "updatedAt": "2024-11-27T22:30:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TD9e6",
          "commit": {
            "abbreviatedOid": "8288ea2"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-28T09:16:04Z",
          "updatedAt": "2024-11-28T09:16:04Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nA response MAY also choose to redirect the client to another URI using a HTTP status code in the 3xx range, which clients SHOULD follow. A client SHOULD detect and intervene in cyclical redirections (i.e., \"infinite\" redirection loops).\r\n```",
              "createdAt": "2024-11-28T09:16:04Z",
              "updatedAt": "2024-11-28T09:16:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TKWsT",
          "commit": {
            "abbreviatedOid": "84302ba"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-29T02:07:37Z",
          "updatedAt": "2024-11-29T02:07:37Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nA successful response that contains a Status List Token MUST use an HTTP status code in the 2xx range.\r\n```\r\n\r\nWhile I think your right with regard to the majority of implementations here I dont think it pays to call out just 404, otherwise why not other 4xx range codes and or 5xx range codes too?",
              "createdAt": "2024-11-29T02:07:37Z",
              "updatedAt": "2024-11-29T02:07:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TKXa1",
          "commit": {
            "abbreviatedOid": "84302ba"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Ok to merge with the minor suggestion.",
          "createdAt": "2024-11-29T02:11:09Z",
          "updatedAt": "2024-11-29T02:11:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 202,
      "id": "PR_kwDOJZ2aqs6DhutF",
      "title": "Add further guidance around ttl",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/202",
      "state": "MERGED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #107",
      "createdAt": "2024-11-29T04:43:49Z",
      "updatedAt": "2024-12-03T20:15:29Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "2159cc0776bf8386bc3a9d052335f092b79f9285",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "tl/ttl-guidance",
      "headRefOid": "91ac82464f760e8869be020ad8c560e2246971d6",
      "closedAt": "2024-12-03T20:15:29Z",
      "mergedAt": "2024-12-03T20:15:29Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "bdc125ddd541cd678ab79f56ac501343c94bef6a"
      },
      "comments": [
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "Note from editors call, perhaps add a little bit of rationale on why we have the ttl and exp claims defined.",
          "createdAt": "2024-11-29T07:54:08Z",
          "updatedAt": "2024-11-29T07:54:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6TLY6G",
          "commit": {
            "abbreviatedOid": "d0b47e6"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-29T07:16:20Z",
          "updatedAt": "2024-11-29T07:16:21Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nupdates to a Status List. The 'ttl' (time-to-live) claim in the Status List Token provides one mechanism for setting a maximum cache time for the\r\n```",
              "createdAt": "2024-11-29T07:16:21Z",
              "updatedAt": "2024-11-29T07:16:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TT4sJ",
          "commit": {
            "abbreviatedOid": "6affe37"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-01T16:55:11Z",
          "updatedAt": "2024-12-01T16:56:50Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nWhen fetching a Status List, Relying Parties must carefully evaluate how long a status list is cached for. Collectively the iat, exp and ttl claims when present in a Status List communicate how long a Status List should be cached and should be considered valid for. The following diagram illustrates the relationship between these claims and how they are designed to influence caching.\r\n```",
              "createdAt": "2024-12-01T16:55:11Z",
              "updatedAt": "2024-12-01T16:56:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TUJO_",
          "commit": {
            "abbreviatedOid": "9116540"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-01T23:18:42Z",
          "updatedAt": "2024-12-01T23:18:43Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nIf caching-related HTTP headers are present in the HTTP response, Relying Parties SHOULD prioritize the exp and ttl claims within the Status List Token over the HTTP headers for determining caching behavior.\r\n```",
              "createdAt": "2024-12-01T23:18:42Z",
              "updatedAt": "2024-12-01T23:18:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TUJVS",
          "commit": {
            "abbreviatedOid": "9116540"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-01T23:20:26Z",
          "updatedAt": "2024-12-01T23:20:26Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nWhen fetching a Status List Token, Relying Parties must carefully evaluate how long a Status List is cached for. Collectively the `iat`, `exp` and `ttl` claims when present in a Status List Token communicate how long a Status List should be cached and should be considered valid for. The following diagram illustrates the relationship between these claims and how they are designed to influence caching.\r\n```",
              "createdAt": "2024-12-01T23:20:26Z",
              "updatedAt": "2024-12-01T23:20:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TUJjU",
          "commit": {
            "abbreviatedOid": "9116540"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-01T23:23:59Z",
          "updatedAt": "2024-12-01T23:24:00Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nIt is essential to understand the distinct purposes of the `ttl` and `exp` claims. The `ttl` claim represents a duration to be interpreted relative to the time the Status List is fetched, indicating when a new version of the Status List may be available. In contrast, the `exp` claim specifies an absolute timestamp, marking the point in time when the Status List expires and MUST NOT be relied upon any longer. Together, these claims provide guidance on when to check for updates (`ttl` claim) and when the Status List must be refreshed or replaced (`exp` claim).\r\n```",
              "createdAt": "2024-12-01T23:24:00Z",
              "updatedAt": "2024-12-01T23:24:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TUJj8",
          "commit": {
            "abbreviatedOid": "9116540"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-01T23:24:11Z",
          "updatedAt": "2024-12-01T23:24:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 203,
      "id": "PR_kwDOJZ2aqs6DhwoK",
      "title": "Resolution for issue 182",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/203",
      "state": "MERGED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #182 ",
      "createdAt": "2024-11-29T04:54:44Z",
      "updatedAt": "2024-11-29T07:11:48Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "8423ed2fe0230e3419751fabe89fb5f17c0bcc1f",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "tl/issue-182",
      "headRefOid": "f0efd7b52c11e774ec79c7110497b81e5365d1be",
      "closedAt": "2024-11-29T07:11:45Z",
      "mergedAt": "2024-11-29T07:11:45Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "732ce210b719f908b46889a5abfb126cbcff1643"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6TLXbh",
          "commit": {
            "abbreviatedOid": "f0efd7b"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-29T07:11:39Z",
          "updatedAt": "2024-11-29T07:11:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6TLXbi",
          "commit": {
            "abbreviatedOid": "f0efd7b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-29T07:11:40Z",
          "updatedAt": "2024-11-29T07:11:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 204,
      "id": "PR_kwDOJZ2aqs6Dic3s",
      "title": "update security considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/204",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #199",
      "createdAt": "2024-11-29T07:48:29Z",
      "updatedAt": "2024-12-03T21:03:08Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "2159cc0776bf8386bc3a9d052335f092b79f9285",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/security-considerations",
      "headRefOid": "18c39b01b8d39f39d48d369559752d8218e4193e",
      "closedAt": "2024-12-03T21:03:08Z",
      "mergedAt": "2024-12-03T21:03:08Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "7426e72d8beb6afd6c37c4cb6cef10ee2f839bef"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6TRyjW",
          "commit": {
            "abbreviatedOid": "6575771"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-30T14:25:39Z",
          "updatedAt": "2024-11-30T14:25:39Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "this is a little confusing to me, are we talking about the Status List object, that is only communciated in Status List Tokens or about referenced Tokens?",
              "createdAt": "2024-11-30T14:25:39Z",
              "updatedAt": "2024-11-30T14:25:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TR29f",
          "commit": {
            "abbreviatedOid": "6575771"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-30T15:22:28Z",
          "updatedAt": "2024-11-30T15:22:28Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "status list object currently (after the change) only exists in secured containers",
              "createdAt": "2024-11-30T15:22:28Z",
              "updatedAt": "2024-11-30T15:22:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TUJKV",
          "commit": {
            "abbreviatedOid": "6575771"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-01T23:17:25Z",
          "updatedAt": "2024-12-01T23:17:25Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "should we add reference to the section?",
              "createdAt": "2024-12-01T23:17:25Z",
              "updatedAt": "2024-12-01T23:17:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6TUJK2",
          "commit": {
            "abbreviatedOid": "6575771"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-01T23:17:33Z",
          "updatedAt": "2024-12-01T23:17:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6TVtC1",
          "commit": {
            "abbreviatedOid": "6575771"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-02T07:39:29Z",
          "updatedAt": "2024-12-02T07:39:29Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe Status List as defined in [](#status-list) only exists in cryptographically secured containers which allows checking the integrity and origin without relying on other aspects like transport security (e.g., the web PKI).\r\n```",
              "createdAt": "2024-12-02T07:39:29Z",
              "updatedAt": "2024-12-02T07:39:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ToCqP",
          "commit": {
            "abbreviatedOid": "18c39b0"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-03T21:02:54Z",
          "updatedAt": "2024-12-03T21:02:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 206,
      "id": "PR_kwDOJZ2aqs6DuOu4",
      "title": "additional text for iana registry",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/206",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #194 \r\n\r\nWe would register:\r\nCWT Status Mechanisms registry in CWT \r\nJWT Status Mechanisms registry in JWT \r\nStatus Types registry in OAuth parameters\r\n\r\nAny ideas how we could simplify this?",
      "createdAt": "2024-12-02T09:58:27Z",
      "updatedAt": "2024-12-03T21:07:00Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "7426e72d8beb6afd6c37c4cb6cef10ee2f839bef",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/iana-registration",
      "headRefOid": "47da5f59f54788e10b35423cafcb6139ade63655",
      "closedAt": "2024-12-03T21:06:54Z",
      "mergedAt": "2024-12-03T21:06:54Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "1f6cade632ed31ebea16aae0b0b37597c5818227"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "looks good to me in general. I would extend this to more than two weeks, if I look back how the current year went by. I think this is a good start for now, so we should merge this first and then evaluate afterwards if we can merge both status registries.",
          "createdAt": "2024-12-02T10:23:19Z",
          "updatedAt": "2024-12-02T10:23:19Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> looks good to me in general. I would extend this to more than two weeks, if I look back how the current year went by. I think this is a good start for now, so we should merge this first and then evaluate afterwards if we can merge both status registries.\r\n\r\nJWT/CWT registries use three week periods, the OAuth Parameter one uses two weeks. Should we just align with these registries for each one?",
          "createdAt": "2024-12-02T12:38:54Z",
          "updatedAt": "2024-12-02T12:38:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6TYKMO",
          "commit": {
            "abbreviatedOid": "e450420"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-02T12:37:35Z",
          "updatedAt": "2024-12-02T12:39:38Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nJWT Status Mechanism Methods are registered by Specification Required [RFC5226] after a three-week\r\n```",
              "createdAt": "2024-12-02T12:37:35Z",
              "updatedAt": "2024-12-02T12:39:38Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nCWT Status Mechanism Methods are registered by Specification Required [RFC5226] after a three-week\r\n```",
              "createdAt": "2024-12-02T12:37:48Z",
              "updatedAt": "2024-12-02T12:39:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ToChJ",
          "commit": {
            "abbreviatedOid": "eb8996f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-03T21:02:33Z",
          "updatedAt": "2024-12-03T21:02:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6ToDhq",
          "commit": {
            "abbreviatedOid": "eb8996f"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-03T21:05:04Z",
          "updatedAt": "2024-12-03T21:05:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 210,
      "id": "PR_kwDOJZ2aqs6FRcnD",
      "title": "changes as requested by IANA review",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/210",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #208 ",
      "createdAt": "2024-12-15T18:58:46Z",
      "updatedAt": "2024-12-22T23:57:04Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "98bf4d54f84964fba2eec192cd1a77387ba22d71",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "iana_feedback_v2",
      "headRefOid": "4eee4e2f6f23e3a450e920d0382938151142545b",
      "closedAt": "2024-12-22T23:57:00Z",
      "mergedAt": "2024-12-22T23:57:00Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "0d2827dd1720eabcd4c818900f098b1849311e67"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6VS_IA",
          "commit": {
            "abbreviatedOid": "8ec49ea"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-15T22:34:17Z",
          "updatedAt": "2024-12-15T22:34:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6WL37G",
          "commit": {
            "abbreviatedOid": "8ec49ea"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-22T20:33:34Z",
          "updatedAt": "2024-12-22T20:33:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 211,
      "id": "PR_kwDOJZ2aqs6FRgt6",
      "title": "differentiate unlinkability between Issuer-RP and RP-RP",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/211",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #207 \r\nCloses #209 ",
      "createdAt": "2024-12-15T19:35:31Z",
      "updatedAt": "2024-12-22T23:56:19Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "1f6cade632ed31ebea16aae0b0b37597c5818227",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "unlinability",
      "headRefOid": "a8c1b4417d309c45ac73cf2d9d5ece7da46ad97c",
      "closedAt": "2024-12-22T23:56:15Z",
      "mergedAt": "2024-12-22T23:56:15Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "98bf4d54f84964fba2eec192cd1a77387ba22d71"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've seen that we currently say:\r\n\r\n> IANA \" JWT Status Mechanism Methods\" registry ...\r\n\r\nI was wondering if we should cut out \"Methods\"?",
          "createdAt": "2024-12-16T07:42:10Z",
          "updatedAt": "2024-12-16T07:42:10Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> I've seen that we currently say:\r\n> \r\n> > IANA \" JWT Status Mechanism Methods\" registry ...\r\n> \r\n> I was wondering if we should cut out \"Methods\"?\r\n\r\nHmm, Yeah I guess it is somewhat redundant - would be fine for me",
          "createdAt": "2024-12-18T09:21:16Z",
          "updatedAt": "2024-12-18T09:21:16Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Hmm, Yeah I guess it is somewhat redundant - would be fine for me\r\n\r\nYep I agree \"Methods\" in this context is redundant, so we should be able to drop.",
          "createdAt": "2024-12-22T20:32:45Z",
          "updatedAt": "2024-12-22T20:32:45Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6VrrCp",
          "commit": {
            "abbreviatedOid": "104a7c4"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-18T09:19:01Z",
          "updatedAt": "2024-12-18T09:20:00Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nTwo or more colluding Relying Parties may link two transactions involving the same Referenced Token by comparing the status claims of received Referenced Tokens, and therefore determine that they have interacted with the same Holder.\r\n```",
              "createdAt": "2024-12-18T09:19:01Z",
              "updatedAt": "2024-12-18T09:20:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6VruMl",
          "commit": {
            "abbreviatedOid": "a8c1b44"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-18T09:24:36Z",
          "updatedAt": "2024-12-18T09:24:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6WL358",
          "commit": {
            "abbreviatedOid": "a8c1b44"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-22T20:32:53Z",
          "updatedAt": "2024-12-22T20:32:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 213,
      "id": "PR_kwDOJZ2aqs6GmEoi",
      "title": "Nit - change \"write\" to \"right\" for describing directionality",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/213",
      "state": "MERGED",
      "author": "dhs-BI",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Minor change to address the use of the homonym \"write\" instead of \"right\".",
      "createdAt": "2025-01-02T16:30:12Z",
      "updatedAt": "2025-01-09T07:07:56Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "0d2827dd1720eabcd4c818900f098b1849311e67",
      "headRepository": "dhs-BI/draft-ietf-oauth-status-list",
      "headRefName": "patch-1",
      "headRefOid": "7b8e9dd80d36e01f8cd0df729d60d413f9a47a2e",
      "closedAt": "2025-01-09T07:07:55Z",
      "mergedAt": "2025-01-09T07:07:55Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "530e5b82ed19a7b295a6b12c5a0c08ec757952cb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6Wt4tK",
          "commit": {
            "abbreviatedOid": "7b8e9dd"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Good catch, thank you!",
          "createdAt": "2025-01-03T06:37:32Z",
          "updatedAt": "2025-01-03T06:37:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6WupAn",
          "commit": {
            "abbreviatedOid": "7b8e9dd"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-03T09:51:11Z",
          "updatedAt": "2025-01-03T09:51:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6XVGd0",
          "commit": {
            "abbreviatedOid": "7b8e9dd"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-09T07:07:49Z",
          "updatedAt": "2025-01-09T07:07:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 214,
      "id": "PR_kwDOJZ2aqs6Gy1mH",
      "title": "rename Status Mechanism Methods registry to Status Mechanisms registry",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/214",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-01-06T08:25:03Z",
      "updatedAt": "2025-01-09T07:10:23Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "0d2827dd1720eabcd4c818900f098b1849311e67",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "registry_rename",
      "headRefOid": "7756457cbc57e9912355140b87e477d19e571582",
      "closedAt": "2025-01-09T07:10:19Z",
      "mergedAt": "2025-01-09T07:10:19Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "b8a535a224d009e8e4dd2c4bb737bbae8026013e"
      },
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "There is still a bunch of mentions of `method` after the changed parts. IMHO, let's change everywhere?",
          "createdAt": "2025-01-06T11:05:19Z",
          "updatedAt": "2025-01-06T11:05:19Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> There is still a bunch of mentions of `method` after the changed parts. IMHO, let's change everywhere?\r\n\r\nThanks, I only searched for \"Methods\" and forgot about \"Method\", should be fixed now",
          "createdAt": "2025-01-06T11:58:18Z",
          "updatedAt": "2025-01-06T11:58:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6W6yL5",
          "commit": {
            "abbreviatedOid": "7756457"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-06T11:57:45Z",
          "updatedAt": "2025-01-06T11:57:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6XVHDR",
          "commit": {
            "abbreviatedOid": "7756457"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-09T07:09:37Z",
          "updatedAt": "2025-01-09T07:09:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 215,
      "id": "PR_kwDOJZ2aqs6GzJMo",
      "title": "chore: fix python example build for newer ubuntu versions",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/215",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Github updated the ubuntu version of the runners creating problems with oscrypto - this should fix the builds for now.",
      "createdAt": "2025-01-06T09:17:49Z",
      "updatedAt": "2025-01-06T09:53:06Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "0d2827dd1720eabcd4c818900f098b1849311e67",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-example-build",
      "headRefOid": "01a78c7aec09d153900ee6fafd05a418a3b39e87",
      "closedAt": "2025-01-06T09:53:04Z",
      "mergedAt": "2025-01-06T09:53:03Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "fb8f6e789a3ebc906db8608c6daa83bb46691228"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6W50pW",
          "commit": {
            "abbreviatedOid": "01a78c7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-06T09:31:53Z",
          "updatedAt": "2025-01-06T09:31:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 226,
      "id": "PR_kwDOJZ2aqs6Hs02b",
      "title": "update organization",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/226",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Change my organization",
      "createdAt": "2025-01-14T12:53:12Z",
      "updatedAt": "2025-01-16T08:04:51Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "b8a535a224d009e8e4dd2c4bb737bbae8026013e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/change-org",
      "headRefOid": "268be2006352bbf7c3e2f57b18e3e6336f48da9d",
      "closedAt": "2025-01-16T08:04:51Z",
      "mergedAt": "2025-01-16T08:04:51Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "a4f70cfbbf560b859e897ac3b2eb64da77f50559"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6YC3rD",
          "commit": {
            "abbreviatedOid": "268be20"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-14T19:53:22Z",
          "updatedAt": "2025-01-14T19:53:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6YSc6z",
          "commit": {
            "abbreviatedOid": "268be20"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-16T07:19:24Z",
          "updatedAt": "2025-01-16T07:19:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 230,
      "id": "PR_kwDOJZ2aqs6IIQoc",
      "title": "interims feedback #1",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/230",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #229 \r\nCloses #223 ",
      "createdAt": "2025-01-17T09:29:00Z",
      "updatedAt": "2025-01-23T07:06:49Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "a4f70cfbbf560b859e897ac3b2eb64da77f50559",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/interims_feedback1",
      "headRefOid": "308828979870a54f62bd8c6611bc8917aff0a6d5",
      "closedAt": "2025-01-23T07:06:49Z",
      "mergedAt": "2025-01-23T07:06:49Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "3f2d7141ecd52a8e57481b681691bd4dc06cd1d5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6YflDn",
          "commit": {
            "abbreviatedOid": "973f1c9"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-17T09:49:39Z",
          "updatedAt": "2025-01-17T09:50:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nRevocation mechanisms are an essential part for most identity ecosystems. In the past, revocation of X.509 TLS certificates has been proven difficult. Traditional certificate revocation lists (CRLs) have limited scalability; Online Certificate Status Protocol (OCSP) has additional privacy risks, since the client is leaking the requested website to a third party. OCSP stapling is addressing some of these problems at the cost of less up-to-date data. Modern approaches use accumulator-based revocation registries and Zero-Knowledge-Proofs to accommodate for this privacy gap, but face scalability issues again. Another alternative is short-lived Referenced Tokens with regular re-issuance, but this puts additional burden on the Issuer's infrastructure.\r\n```",
              "createdAt": "2025-01-17T09:49:39Z",
              "updatedAt": "2025-01-17T09:50:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6YhDsu",
          "commit": {
            "abbreviatedOid": "3088289"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-17T11:38:07Z",
          "updatedAt": "2025-01-17T11:38:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZH3S_",
          "commit": {
            "abbreviatedOid": "3088289"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-23T06:30:13Z",
          "updatedAt": "2025-01-23T06:30:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 231,
      "id": "PR_kwDOJZ2aqs6IJ914",
      "title": "Mention prior art",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/231",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Close #83 \r\n\r\nRendered Version: https://drafts.oauth.net/draft-ietf-oauth-status-list/83-prior-art/draft-ietf-oauth-status-list.html",
      "createdAt": "2025-01-17T13:19:53Z",
      "updatedAt": "2025-01-23T07:07:15Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "a4f70cfbbf560b859e897ac3b2eb64da77f50559",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "83-prior-art",
      "headRefOid": "119eda2bd67f65d205f6d8dd09808ad2ba8f5b5d",
      "closedAt": "2025-01-23T07:07:15Z",
      "mergedAt": "2025-01-23T07:07:15Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "8bf6633b37077904ccaaadd657a70dea18c331be"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6YicId",
          "commit": {
            "abbreviatedOid": "7cdb8c2"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-17T14:30:07Z",
          "updatedAt": "2025-01-17T14:30:08Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n\r\n## Status Mechanisms Registry\r\n```",
              "createdAt": "2025-01-17T14:30:07Z",
              "updatedAt": "2025-01-17T14:30:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Yicr7",
          "commit": {
            "abbreviatedOid": "7cdb8c2"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-17T14:31:05Z",
          "updatedAt": "2025-01-17T14:31:06Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nRepresenting a status with bits in array is a rather old and well-known concept in computer science and there has been prior work to use this for revocation and status management such as a paper by Smith et al. {{smith2020let}} that proposed a mechanism called Certificate Revocation Vectors based on xz compressed bit vectors for each expiration day and the W3C bit Status List {{W3C.SL}} that similarly uses a compressed bit representation.\r\n```",
              "createdAt": "2025-01-17T14:31:05Z",
              "updatedAt": "2025-01-17T14:31:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6YidIH",
          "commit": {
            "abbreviatedOid": "7cdb8c2"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-17T14:31:51Z",
          "updatedAt": "2025-01-17T14:31:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZH3nF",
          "commit": {
            "abbreviatedOid": "119eda2"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-23T06:31:06Z",
          "updatedAt": "2025-01-23T06:31:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 232,
      "id": "PR_kwDOJZ2aqs6ILAtT",
      "title": "More test vectors",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/232",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #216 \r\n\r\nI've moved the existing 2 bit examples and ascii art up - we can revert that change, but it felt more consistent to me that way\r\nI am not exactly sure how to better displays the input (status values for specific positions) - any ideas?\r\n\r\nRendered version: https://drafts.oauth.net/draft-ietf-oauth-status-list/216-test-vectors/draft-ietf-oauth-status-list.html",
      "createdAt": "2025-01-17T15:45:12Z",
      "updatedAt": "2025-02-02T09:37:09Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "53bfe1f752ecbc4cacbdea27be5570af046c8e54",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "216-test-vectors",
      "headRefOid": "c6bf98d20ab99860d62288fa16e176f75c9233a9",
      "closedAt": "2025-02-02T09:37:09Z",
      "mergedAt": "2025-02-02T09:37:09Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "4d43c670eddd71fba284e653f71e6659aeab7c0f"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I like it! I initially proposed to move the 2 bit acsii art up there, so that's fine for me :)\r\nI think we require the CWT examples as well in the test vectors, having them for the same input values would be good.",
          "createdAt": "2025-01-17T15:57:56Z",
          "updatedAt": "2025-01-17T15:57:56Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> I like it! I initially proposed to move the 2 bit acsii art up there, so that's fine for me :) I think we require the CWT examples as well in the test vectors, having them for the same input values would be good.\r\n\r\nHmm, so we would provide the results in CBOR and JSON (we can easily re-use the same values)? ",
          "createdAt": "2025-01-17T16:07:04Z",
          "updatedAt": "2025-01-17T16:07:04Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "todo:\r\n- status list token JWT rendering\r\n- verifying test vectors inpendently wiht implementations",
          "createdAt": "2025-01-23T07:10:36Z",
          "updatedAt": "2025-01-23T07:10:36Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've got the feedback that it may be irritating to not have dedicated 1-bit test vectors in the appendix",
          "createdAt": "2025-01-23T14:02:07Z",
          "updatedAt": "2025-01-23T14:02:07Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "I will create a longer 1 bit example then",
          "createdAt": "2025-01-23T14:18:41Z",
          "updatedAt": "2025-01-23T14:18:41Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "Todo: Wait for feedback on test vectors (check with at least one alternative implementation)",
          "createdAt": "2025-01-27T08:43:05Z",
          "updatedAt": "2025-01-27T08:43:05Z"
        },
        {
          "author": null,
          "authorAssociation": "NONE",
          "body": "I checked the test vectors by\r\n- Defining the status[*] = * entries in the code (copy paste + search replace)\r\n- Parsing the JSON and CBOR from the document with our library\r\n- Checking in automated testcases, that all status entries have the expected value (0 for the ones not mentioned and the given value for the ones mentioned in the test vectors)\r\n\r\nVerification was successful for all values.\r\n\r\nNevertheless I noticed, that **the samples (CBOR and JSON) for the one bit status list have 2 instead of 1 bits**.",
          "createdAt": "2025-01-30T12:06:30Z",
          "updatedAt": "2025-01-30T12:07:24Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "> I checked the test vectors by\r\n> \r\n> * Defining the status[*] = * entries in the code (copy paste + search replace)\r\n> * Parsing the JSON and CBOR from the document with our library\r\n> * Checking in automated testcases, that all status entries have the expected value (0 for the ones not mentioned and the given value for the ones mentioned in the test vectors)\r\n> \r\n> Verification was successful for all values.\r\n> \r\n> Nevertheless I noticed, that **the samples (CBOR and JSON) for the one bit status list have 2 instead of 1 bits**.\r\n\r\nThank you for catching that! That was a copy/paste mistake on my side and should be fixed now. \r\nCould you re-check if everything looks fine now?",
          "createdAt": "2025-01-30T13:32:55Z",
          "updatedAt": "2025-01-30T13:32:55Z"
        },
        {
          "author": null,
          "authorAssociation": "NONE",
          "body": "> Thank you for catching that! That was a copy/paste mistake on my side and should be fixed now. Could you re-check if everything looks fine now?\r\n\r\nEverything is fine now.",
          "createdAt": "2025-01-30T14:18:56Z",
          "updatedAt": "2025-01-30T14:19:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6YjOtQ",
          "commit": {
            "abbreviatedOid": "303f9f7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-17T15:58:47Z",
          "updatedAt": "2025-01-17T15:58:48Z",
          "comments": [
            {
              "originalPosition": 136,
              "body": "```suggestion\r\nAll values that are not mentioned for the examples below can be assumed to be 0 (VALID). All examples are initialized with a size of 2^20 entries.\r\n```",
              "createdAt": "2025-01-17T15:58:47Z",
              "updatedAt": "2025-01-17T15:58:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZAe3B",
          "commit": {
            "abbreviatedOid": "7e73837"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-22T12:14:53Z",
          "updatedAt": "2025-01-22T12:14:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6aSX9a",
          "commit": {
            "abbreviatedOid": "c6bf98d"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-02T09:37:01Z",
          "updatedAt": "2025-02-02T09:37:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 239,
      "id": "PR_kwDOJZ2aqs6Imvwo",
      "title": "editorial fixes",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/239",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Trying to fix some obvious spelling mistakes and increase readability in general. Not sure about all of the minor / non-obvious changes.",
      "createdAt": "2025-01-22T10:10:39Z",
      "updatedAt": "2025-01-23T08:13:14Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "5bc7b4ef4e0e42193f801f53b5e5bf7daf2cda02",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/editorial-review",
      "headRefOid": "dff2e318bc5d7f4252dca88e880a8dbde91703d0",
      "closedAt": "2025-01-23T08:13:14Z",
      "mergedAt": "2025-01-23T08:13:14Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "9222058f1f181886506e131bc313629c524e7c4e"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "todo:\r\n- remove oxford comma\r\n- merge afterwards",
          "createdAt": "2025-01-23T07:12:46Z",
          "updatedAt": "2025-01-23T07:12:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6ZAct7",
          "commit": {
            "abbreviatedOid": "4050828"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-22T12:11:00Z",
          "updatedAt": "2025-01-22T12:11:00Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "not sure on this one",
              "createdAt": "2025-01-22T12:11:00Z",
              "updatedAt": "2025-01-22T12:11:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZAeqP",
          "commit": {
            "abbreviatedOid": "4050828"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "The only things I'm not sure is about putting a comma before \"and\"",
          "createdAt": "2025-01-22T12:14:31Z",
          "updatedAt": "2025-01-22T12:14:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZH8eJ",
          "commit": {
            "abbreviatedOid": "4050828"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T06:45:21Z",
          "updatedAt": "2025-01-23T06:45:21Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Yeah we aren't using oxford comma's consistently so I wouldn't.",
              "createdAt": "2025-01-23T06:45:21Z",
              "updatedAt": "2025-01-23T06:45:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZH8qf",
          "commit": {
            "abbreviatedOid": "4050828"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T06:45:53Z",
          "updatedAt": "2025-01-23T06:45:53Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Same here we either need to use oxford comma's consistently or not, I would suggest not.",
              "createdAt": "2025-01-23T06:45:53Z",
              "updatedAt": "2025-01-23T06:45:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZH8-8",
          "commit": {
            "abbreviatedOid": "4050828"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T06:46:54Z",
          "updatedAt": "2025-01-23T06:46:55Z",
          "comments": [
            {
              "originalPosition": 198,
              "body": "Same comment r.e oxford comma's",
              "createdAt": "2025-01-23T06:46:55Z",
              "updatedAt": "2025-01-23T06:46:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZIDx9",
          "commit": {
            "abbreviatedOid": "4050828"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-23T07:06:44Z",
          "updatedAt": "2025-01-23T07:06:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 240,
      "id": "PR_kwDOJZ2aqs6It_Bh",
      "title": "Minor editorial change to address issue 217",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/240",
      "state": "MERGED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #217",
      "createdAt": "2025-01-23T06:57:16Z",
      "updatedAt": "2025-01-23T07:21:02Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "8bf6633b37077904ccaaadd657a70dea18c331be",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "tl/issue-217",
      "headRefOid": "ac2063824fcbc5d9f57c21633c779ba886da4ce6",
      "closedAt": "2025-01-23T07:20:58Z",
      "mergedAt": "2025-01-23T07:20:58Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "5bc7b4ef4e0e42193f801f53b5e5bf7daf2cda02"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6ZIHst",
          "commit": {
            "abbreviatedOid": "1b6075a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T07:17:09Z",
          "updatedAt": "2025-01-23T07:17:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nTo avoid privacy risks for colluding Relying Parties, it is RECOMMENDED that Issuers provide the ability to issue batches of one-time-use Referenced Tokens, enabling Holders to use in a single interaction with a Relying Party before discarding. See [](#implementation-lifecycle) to avoid further correlatable information by the values of `uri` and `index`, Status Issuers are RECOMMENDED to:\r\n```",
              "createdAt": "2025-01-23T07:17:09Z",
              "updatedAt": "2025-01-23T07:17:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZIIta",
          "commit": {
            "abbreviatedOid": "ac20638"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-23T07:19:48Z",
          "updatedAt": "2025-01-23T07:19:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZIItf",
          "commit": {
            "abbreviatedOid": "98fe013"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-23T07:19:48Z",
          "updatedAt": "2025-01-23T07:19:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 241,
      "id": "PR_kwDOJZ2aqs6IzJiN",
      "title": "editorial changes on terminology and Referenced Tokens",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/241",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #238 ",
      "createdAt": "2025-01-23T18:11:14Z",
      "updatedAt": "2025-01-27T07:07:16Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "9222058f1f181886506e131bc313629c524e7c4e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/interims_feedback2",
      "headRefOid": "29639bacbd39af034a9ea9686df6e759bf221fef",
      "closedAt": "2025-01-27T07:07:15Z",
      "mergedAt": "2025-01-27T07:07:15Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "518c28d2ab0f23eed34f66666fcc264b6dcc87ec"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6ZYwyX",
          "commit": {
            "abbreviatedOid": "29639ba"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-24T19:12:35Z",
          "updatedAt": "2025-01-24T19:12:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6Zdjym",
          "commit": {
            "abbreviatedOid": "29639ba"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-27T07:06:59Z",
          "updatedAt": "2025-01-27T07:06:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 242,
      "id": "PR_kwDOJZ2aqs6Izddi",
      "title": "update templates",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/242",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-01-23T18:56:35Z",
      "updatedAt": "2025-01-24T09:25:52Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "9222058f1f181886506e131bc313629c524e7c4e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/update-templates",
      "headRefOid": "19ce918a1bf582d1e015db1f1c0b0f1fa417c5d4",
      "closedAt": "2025-01-24T09:25:52Z",
      "mergedAt": "2025-01-24T09:25:52Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "53bfe1f752ecbc4cacbdea27be5570af046c8e54"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6ZOwZR",
          "commit": {
            "abbreviatedOid": "5ba614e"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-23T19:01:13Z",
          "updatedAt": "2025-01-23T19:01:13Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nYou may use this [Cyberchef script](https://gchq.github.io/CyberChef/#recipe=JWT_Decode()JPath_expression('status_list.lst','%5C%5Cn')From_Base64('A-Za-z0-9-_',true,false)Zlib_Inflate(0,0,'Adaptive',false,false)To_Binary('Line%20feed',8)Add_line_numbers()) to quickly analyze a Token Status List in JWT format.\r\n\r\n```",
              "createdAt": "2025-01-23T19:01:13Z",
              "updatedAt": "2025-01-23T19:01:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZTOV3",
          "commit": {
            "abbreviatedOid": "19ce918"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-24T07:54:37Z",
          "updatedAt": "2025-01-24T07:54:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 244,
      "id": "PR_kwDOJZ2aqs6JC_i1",
      "title": "Fix issue 225",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/244",
      "state": "MERGED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #225 ",
      "createdAt": "2025-01-27T07:49:10Z",
      "updatedAt": "2025-01-27T08:15:59Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "518c28d2ab0f23eed34f66666fcc264b6dcc87ec",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "tl/issue-225",
      "headRefOid": "9f926246d90fb33d81bdf826196e7cb83ecf277e",
      "closedAt": "2025-01-27T08:15:58Z",
      "mergedAt": "2025-01-27T08:15:58Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "e653b05e83ffed532cef7516ffd0ced79001547d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6Zdyc-",
          "commit": {
            "abbreviatedOid": "12d7ed3"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-27T07:50:36Z",
          "updatedAt": "2025-01-27T07:50:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6Zd8Ms",
          "commit": {
            "abbreviatedOid": "9f92624"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-27T08:15:28Z",
          "updatedAt": "2025-01-27T08:15:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 245,
      "id": "PR_kwDOJZ2aqs6JDmnw",
      "title": "security consideration for signature/mac",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/245",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #233 ",
      "createdAt": "2025-01-27T09:24:25Z",
      "updatedAt": "2025-02-03T09:46:07Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "e653b05e83ffed532cef7516ffd0ced79001547d",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "233-signature-algorithms",
      "headRefOid": "36d8bfea5d814622a7eee386e6138dfe9d60d2ac",
      "closedAt": "2025-01-29T07:11:18Z",
      "mergedAt": "2025-01-29T07:11:18Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "94a4d385748e075d06af8530b9f734c32e576b05"
      },
      "comments": [
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "The text states:\r\n\r\n> For (H)MAC based deployments, the security implications of a shared secret should be understood and should match the general security considerations of the deployment.\r\n\r\nThis text is too vague.\r\n\r\nReplace by:\r\n\r\n> For (H)MAC based deployments, it should be understood that any Relying Party able to use a secret key to verify a (H)MAC will be in a position to forge Status List Tokens. This means that the system will be secure only if the Relying Parties can trust each other of not doing it.\r\n\r\n\r\n",
          "createdAt": "2025-02-03T09:46:06Z",
          "updatedAt": "2025-02-03T09:46:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6Zf-Ij",
          "commit": {
            "abbreviatedOid": "cbb592a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-27T12:23:39Z",
          "updatedAt": "2025-01-27T12:23:39Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThis specification allows for both cryptographic signatures and message authentication codes (MAC) to secure a Status List Token. Implementers are RECOMMENDED to match the mechanism used for the Status List Token with the one used for its Referenced Tokens. For (H)MAC based deployments, the security implications of a shared secret should be understood and should match the general security considerations of the deployment.\r\n```",
              "createdAt": "2025-01-27T12:23:39Z",
              "updatedAt": "2025-01-27T12:23:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZgDLU",
          "commit": {
            "abbreviatedOid": "2bf2f12"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-27T12:33:16Z",
          "updatedAt": "2025-01-27T12:33:17Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I feel like we don't underline the challenges and typical cirumstances of MAC-based setup enough yet: Issuers and Verifiers likely have a trusted relationship and a possiblity to exchange symmetric keys out-of-band",
              "createdAt": "2025-01-27T12:33:17Z",
              "updatedAt": "2025-01-27T12:33:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Zyktk",
          "commit": {
            "abbreviatedOid": "25b4813"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-29T07:07:49Z",
          "updatedAt": "2025-01-29T07:07:49Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThis specification allows for both cryptographic signatures and message authentication codes (MAC) to secure a Status List Token. For (H)MAC based deployments, the security implications of a shared secret should be understood and should match the general security considerations of the deployment.\r\n```",
              "createdAt": "2025-01-29T07:07:49Z",
              "updatedAt": "2025-01-29T07:07:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZylAS",
          "commit": {
            "abbreviatedOid": "60e08a7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-29T07:08:45Z",
          "updatedAt": "2025-01-29T07:08:45Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n## MAC-secured Status Lists\r\n```",
              "createdAt": "2025-01-29T07:08:45Z",
              "updatedAt": "2025-01-29T07:08:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6Zylat",
          "commit": {
            "abbreviatedOid": "60e08a7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-29T07:10:06Z",
          "updatedAt": "2025-01-29T07:10:06Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nThis specification allows for both cryptographic signatures and message authentication codes (MAC) to secure a Status List Token. For (H)MAC based deployments, the security implications of a shared secret should be understood and should match the general security considerations of the deployment. There usually exists a stronger relationship between RP and Issuer for such deployments and they have the capability to securely distribute a shared secret ouf of band.\r\n```",
              "createdAt": "2025-01-29T07:10:06Z",
              "updatedAt": "2025-01-29T07:10:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6ZylrW",
          "commit": {
            "abbreviatedOid": "36d8bfe"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-29T07:10:49Z",
          "updatedAt": "2025-01-29T07:10:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6Zylzd",
          "commit": {
            "abbreviatedOid": "36d8bfe"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-29T07:11:12Z",
          "updatedAt": "2025-01-29T07:11:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 246,
      "id": "PR_kwDOJZ2aqs6JUpbO",
      "title": "Adds an EKU based X.509 certificate extension",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/246",
      "state": "CLOSED",
      "author": "tplooker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #234 \r\nCloses #235 ",
      "createdAt": "2025-01-29T07:51:38Z",
      "updatedAt": "2025-02-03T09:46:42Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "94a4d385748e075d06af8530b9f734c32e576b05",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "tl/eku-certificate-extension",
      "headRefOid": "0b2d845ee4e763b4f9cea07039e2ef0807f120d7",
      "closedAt": "2025-01-31T13:30:38Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "body": "superseded by #248 \r\n\r\nI made comments in that PR",
          "createdAt": "2025-01-31T08:48:14Z",
          "updatedAt": "2025-01-31T09:09:30Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Close in favor of #248 (change included there)",
          "createdAt": "2025-01-31T13:30:38Z",
          "updatedAt": "2025-01-31T13:30:38Z"
        },
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "Instead of using the Key Usage extension (Section 4.2.1. from RFC 5280) as initially proposed, \r\nit has been noticed that the current proposal is to use the Extended Key Usage Extension (Section 4.2.1.12 from RFC 5280).\r\n\r\nSection 4.2.1.12 (Extended Key Usage Extension) from RFC 5280 states:\r\n\r\n> This extension indicates one or more purposes for which the certified public key may be used, in addition to or in place of the basic purposes indicated in the key usage extension. In general, this extension will appear only in end entity certificates.\r\n\r\nAs the text states, this extension will not appear in a CA certificate. This means that the public key can be used for verifying Status List Tokens, but not for verifying end entity certificates. This is a better choice as it is more secure: the key from the CA and the key from the Status Issuer will be different.\r\n\r\nSection 2.6 (OCSP Signature Authority Delegation) from RFC 6960 states:\r\n\r\n> A certificate's issuer explicitly delegates OCSP signing authority by issuing a certificate containing a unique value for the extended key usage extension (defined in [RFC5280], Section 4.2.1.12).\r\n\r\nThe new text states:\r\n\r\n> 10. X.509 Certificate Extensions\r\n> \r\n> 10.1. Extended Key Usage Extension \r\n> \r\n> [RFC5280] specifies the Extended Key Usage (EKU) X.509 certificate extension for use on end entity certificates. The extension indicates one or more purposes for which the certified public key is valid. The EKU extension can be used in conjunction with the Key Usage (KU) extension, which indicates the set of basic cryptographic operations for which the certified key may be used.\r\n> \r\n> The following OID is defined for usage in the EKU extension``` id-kp OBJECT IDENTIFIER ::= { iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) 3 } id-kp-oauthStatusListSigning OBJECT IDENTIFIER ::= { id-kp TBD }\r\n> \r\n\r\nThe text is not sufficiently descriptive. It is proposed to use the following text instead:\r\n\r\n> 10. X.509 Certificate Extensions\r\n> \r\n> 10.1. Extended Key Usage Extension \r\n> \r\n> [RFC5280] specifies the Extended Key Usage (EKU) X.509 certificate extension for use on end entity certificates. A certificate's issuer explicitly delegates Status List Token signing authority by issuing a certificate containing a unique value for the extended key usage extension (originally defined in [RFC5280], Section 4.2.1.12).\r\n> \r\n> The following additional key usage purpose is defined under the id-kp OBJECT IDENTIFIER ::= { id-pkix 3 } defined in RFC5280:\r\n> \r\n> id-kp-StatusListTokenSigning            OBJECT IDENTIFIER ::= { id-kp 10 }\r\n> -- The StatusListSigning OID is used when the subject public key can be used\r\n> -- for verifying Status List Tokens.\r\n\r\nLet us now take a look, at section 9 (IANA Considerations) from RFC 5280. It states:\r\n\r\n>    Extensions in certificates and CRLs are identified using object\r\n>    identifiers.  The objects are defined in an arc delegated by IANA to \r\n>    the PKIX Working Group.  No further action by IANA is necessary for\r\n>    this document or any anticipated updates.\r\n\r\nHowever, the OAuth WG is not the PKIX WG. If another WG would pick { id-kp 10 } for another purpose, there would be a collision.\r\n\r\nThis means that a sub-section should be added into section 14 (IANA Considerations).\r\n",
          "createdAt": "2025-02-03T09:46:40Z",
          "updatedAt": "2025-02-03T09:46:40Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 248,
      "id": "PR_kwDOJZ2aqs6JhAiO",
      "title": "add recommendations for Key Resolution and Trust Management",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/248",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #237 \r\nCloses #235\r\nCloses #234 \r\nCloses #227 \r\nCloses #224 ",
      "createdAt": "2025-01-30T15:23:59Z",
      "updatedAt": "2025-02-02T13:47:52Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "4aa9d6480a8451124122cb70e74070939b43e96f",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "deployment_models",
      "headRefOid": "f2d027143f875e141b34e763c5f2227919a11d93",
      "closedAt": "2025-02-02T13:47:52Z",
      "mergedAt": "2025-02-02T13:47:52Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "b9565523552cc77801171a7f52cd6a6c54900371"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6aINLG",
          "commit": {
            "abbreviatedOid": "4351b33"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T07:14:49Z",
          "updatedAt": "2025-01-31T07:17:37Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n- an `x5u`, `jwks`, `jwks_uri` or `kid` parameter referencing to a key using the same web-based resolution as used in the Referenced Token for JOSE.\r\n- an `x5u` or `kid` parameter referencing to a key using the same web-based resolution as used in the Referenced Token for COSE.\r\n```",
              "createdAt": "2025-01-31T07:14:49Z",
              "updatedAt": "2025-01-31T07:17:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aISJM",
          "commit": {
            "abbreviatedOid": "4351b33"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T07:26:45Z",
          "updatedAt": "2025-01-31T07:26:46Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n\r\n~~~ ascii-art\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 resolve key \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 Issuer \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u25ba\u2502 well-known metadata \u2502\r\n\u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n  \u25bc update status \u2502                           \r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502                           \r\n\u2502 Status Issuer \u251c\u2500\u2518                           \r\n\u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                             \r\n  \u25bc provide Status List                       \r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                           \r\n\u2502 Status Provider \u2502                           \r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                           \r\n~~~\r\n```",
              "createdAt": "2025-01-31T07:26:46Z",
              "updatedAt": "2025-01-31T07:26:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aI2Af",
          "commit": {
            "abbreviatedOid": "4351b33"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T08:46:40Z",
          "updatedAt": "2025-01-31T08:46:40Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n\r\n~~~ ascii-art\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  host keys  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 Issuer \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u25ba\u2502 .well-known metadata \u2502\r\n\u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n  \u25bc update status \u2502                           \r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502                           \r\n\u2502 Status Issuer \u251c\u2500\u2518                           \r\n\u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                             \r\n  \u25bc provide Status List                       \r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                           \r\n\u2502 Status Provider \u2502                           \r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                           \r\n~~~\r\n```",
              "createdAt": "2025-01-31T08:46:40Z",
              "updatedAt": "2025-01-31T08:47:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aI3NK",
          "commit": {
            "abbreviatedOid": "4351b33"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T08:49:24Z",
          "updatedAt": "2025-01-31T08:49:24Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n{{RFC5280}} specifies the Extended Key Usage (EKU) X.509 certificate extension for use on end entity certificates. The extension indicates one or more purposes for which the certified public key is valid. The EKU extension can be used in conjunction with the Key Usage (KU) extension, which indicates the set of basic cryptographic operations for which the certified key may be used.\r\n```",
              "createdAt": "2025-01-31T08:49:24Z",
              "updatedAt": "2025-01-31T08:49:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aI3lR",
          "commit": {
            "abbreviatedOid": "4351b33"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T08:50:11Z",
          "updatedAt": "2025-01-31T08:50:12Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n## Extended Key Usage Extension {#eku}\r\n```",
              "createdAt": "2025-01-31T08:50:12Z",
              "updatedAt": "2025-01-31T08:50:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aLwGM",
          "commit": {
            "abbreviatedOid": "c7e1ea7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T13:32:17Z",
          "updatedAt": "2025-01-31T13:32:17Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "```suggestion\r\n* add recommendations for Key Resolution and Trust Management\r\n* add extended key usage extensions for x509\r\n```",
              "createdAt": "2025-01-31T13:32:17Z",
              "updatedAt": "2025-01-31T13:32:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aLwp3",
          "commit": {
            "abbreviatedOid": "be75cd4"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-31T13:33:19Z",
          "updatedAt": "2025-01-31T13:33:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6aSYF3",
          "commit": {
            "abbreviatedOid": "6255be3"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-02T09:39:34Z",
          "updatedAt": "2025-02-02T09:39:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6aSkKN",
          "commit": {
            "abbreviatedOid": "3d90219"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-02T13:45:52Z",
          "updatedAt": "2025-02-02T13:45:52Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-02-02T13:45:52Z",
              "updatedAt": "2025-02-02T13:45:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 249,
      "id": "PR_kwDOJZ2aqs6Jip6G",
      "title": "222 suspended privacy considerations",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/249",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #222 \r\nRendered Version: https://drafts.oauth.net/draft-ietf-oauth-status-list/222-suspended-privacy-considerations/draft-ietf-oauth-status-list.html",
      "createdAt": "2025-01-30T19:08:21Z",
      "updatedAt": "2025-02-02T19:26:03Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "ef4ee62d8732352d7d5c22fe09d44aadfad1ed66",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "222-suspended-privacy-considerations",
      "headRefOid": "04bd6abeb6eb8bf785c2220e291004a3ea298a89",
      "closedAt": "2025-02-02T19:26:03Z",
      "mergedAt": "2025-02-02T19:26:03Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "cebd437915a9caddffdd9954716192bd1a64fd62"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6aFmpj",
          "commit": {
            "abbreviatedOid": "ee0e8e1"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-30T22:09:15Z",
          "updatedAt": "2025-01-30T22:09:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6aINO7",
          "commit": {
            "abbreviatedOid": "ee0e8e1"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T07:15:01Z",
          "updatedAt": "2025-01-31T07:15:01Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nAs previously explained, there is the potential risk of observability by Relying Parties and Outsiders. That means that any Status Type that transports special information about a Token can leak information to other parties. This documents defines one additional Status Type with \"SUSPENDED\" that conveys such additional information. Depending on the use-case, suspended could for example provide information that an authorization in the Token is suspended, but the token itself is still valid.\r\n```",
              "createdAt": "2025-01-31T07:15:01Z",
              "updatedAt": "2025-01-31T07:15:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aSYLL",
          "commit": {
            "abbreviatedOid": "d588284"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-02T09:40:47Z",
          "updatedAt": "2025-02-02T09:40:47Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Maybe we should be specific around where this is \"previous explained\" e.g by linking to a section.",
              "createdAt": "2025-02-02T09:40:47Z",
              "updatedAt": "2025-02-02T09:40:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aSkhU",
          "commit": {
            "abbreviatedOid": "d588284"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-02T13:52:59Z",
          "updatedAt": "2025-02-02T13:52:59Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Would that be fine for you @tplooker \r\n```suggestion\r\nAs previously explained, there is the potential risk of observability by Relying Parties (see [](#privacy-relying-party)) and Outsiders (see [](#privacy-outsider)). That means that any Status Type that transports special information about a Token can leak information to other parties. This documents defines one additional Status Type with \"SUSPENDED\" that conveys such additional information. Depending on the use-case, suspended could for example provide information that an authorization in the Token is suspended, but the token itself is still valid.\r\n```",
              "createdAt": "2025-02-02T13:52:59Z",
              "updatedAt": "2025-02-02T13:53:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aSzHi",
          "commit": {
            "abbreviatedOid": "04bd6ab"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-02T19:25:56Z",
          "updatedAt": "2025-02-02T19:25:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 250,
      "id": "PR_kwDOJZ2aqs6JpK7s",
      "title": "aggregation uri text",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/250",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #247 ",
      "createdAt": "2025-01-31T13:45:43Z",
      "updatedAt": "2025-01-31T13:49:41Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "94a4d385748e075d06af8530b9f734c32e576b05",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "247-aggregation-uri",
      "headRefOid": "f7bded5005069c270aa59d45a7157e74ff7381df",
      "closedAt": "2025-01-31T13:49:41Z",
      "mergedAt": "2025-01-31T13:49:41Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "f181925ffa8b7c9bb3e978c3922faa7032da6850"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6aL4-_",
          "commit": {
            "abbreviatedOid": "8231621"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T13:46:47Z",
          "updatedAt": "2025-01-31T13:46:48Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n   * `aggregation_uri`: OPTIONAL. JSON String that contains a URI to retrieve the Status List Aggregation for this type of Referenced Token or Issuer. See section [](#aggregation) for further details.\r\n```",
              "createdAt": "2025-01-31T13:46:47Z",
              "updatedAt": "2025-01-31T13:46:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6aL5JC",
          "commit": {
            "abbreviatedOid": "f7bded5"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-31T13:46:58Z",
          "updatedAt": "2025-01-31T13:46:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 251,
      "id": "PR_kwDOJZ2aqs6JpheC",
      "title": "Relying Parties avoiding correlatable Information",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/251",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-01-31T14:25:33Z",
      "updatedAt": "2025-02-02T13:40:01Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f181925ffa8b7c9bb3e978c3922faa7032da6850",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "Relying-Parties-avoiding-correlatable-Information",
      "headRefOid": "14be2ba5dd38b5efcac25f4b5c80fa57ac7e7a78",
      "closedAt": "2025-02-02T13:40:01Z",
      "mergedAt": "2025-02-02T13:40:01Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "4aa9d6480a8451124122cb70e74070939b43e96f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6aMXXF",
          "commit": {
            "abbreviatedOid": "14be2ba"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-31T14:27:04Z",
          "updatedAt": "2025-01-31T14:27:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6aSYOR",
          "commit": {
            "abbreviatedOid": "14be2ba"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-02T09:41:46Z",
          "updatedAt": "2025-02-02T09:41:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 252,
      "id": "PR_kwDOJZ2aqs6JqjDW",
      "title": "mention key resolution in the validation rules section",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/252",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #205 \r\n\r\nDepends on #248",
      "createdAt": "2025-01-31T16:37:38Z",
      "updatedAt": "2025-02-02T13:51:04Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "b9565523552cc77801171a7f52cd6a6c54900371",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "205-validation-rules",
      "headRefOid": "efcf1e77c06e5dab4c976f80acfb4dbc0f9fbf73",
      "closedAt": "2025-02-02T13:51:04Z",
      "mergedAt": "2025-02-02T13:51:04Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "ef4ee62d8732352d7d5c22fe09d44aadfad1ed66"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#248 must be merged first to solve the checks",
          "createdAt": "2025-01-31T16:51:55Z",
          "updatedAt": "2025-01-31T16:51:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6aNtQg",
          "commit": {
            "abbreviatedOid": "efcf1e7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-31T16:50:31Z",
          "updatedAt": "2025-02-02T13:48:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6aSYPu",
          "commit": {
            "abbreviatedOid": "efcf1e7"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-02T09:42:13Z",
          "updatedAt": "2025-02-02T13:48:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 257,
      "id": "PR_kwDOJZ2aqs6KPPpI",
      "title": "fix category",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/257",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Rendered Version: https://drafts.oauth.net/draft-ietf-oauth-status-list/c2bo/fix-intended-status/draft-ietf-oauth-status-list.html",
      "createdAt": "2025-02-06T07:41:23Z",
      "updatedAt": "2025-02-06T08:28:57Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "cebd437915a9caddffdd9954716192bd1a64fd62",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "c2bo/fix-intended-status",
      "headRefOid": "5356a18fde9dc61dbb66812266dc6ed646f3612d",
      "closedAt": "2025-02-06T08:28:57Z",
      "mergedAt": "2025-02-06T08:28:57Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "379f5233f64ad98b25af96b7184bb7d3cc5a70ef"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6a2Z29",
          "commit": {
            "abbreviatedOid": "5356a18"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-06T08:17:44Z",
          "updatedAt": "2025-02-06T08:17:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6a2cL5",
          "commit": {
            "abbreviatedOid": "5356a18"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-06T08:22:29Z",
          "updatedAt": "2025-02-06T08:22:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 258,
      "id": "PR_kwDOJZ2aqs6KbW20",
      "title": "EKU guidance",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/258",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-07T14:36:49Z",
      "updatedAt": "2025-02-17T00:27:52Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "379f5233f64ad98b25af96b7184bb7d3cc5a70ef",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/eku",
      "headRefOid": "b231e3490ff4d958c40443e3f7844fdc78e3ba8e",
      "closedAt": "2025-02-17T00:27:52Z",
      "mergedAt": "2025-02-17T00:27:52Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "55b08dfceb819087590d464e97b7ca3c8d34eeda"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6bFiDQ",
          "commit": {
            "abbreviatedOid": "b1d0dd6"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-07T14:40:52Z",
          "updatedAt": "2025-02-07T14:40:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6bvmCe",
          "commit": {
            "abbreviatedOid": "b1d0dd6"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-12T19:05:23Z",
          "updatedAt": "2025-02-12T19:05:23Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n{{RFC5280}} specifies the Extended Key Usage (EKU) X.509 certificate extension for use on end entity certificates. The extension indicates one or more purposes for which the certified public key is valid. The EKU extension can be used in conjunction with the Key Usage (KU) extension, which indicates the set of basic cryptographic operations for which the certified key may be used. A certificate's issuer explicitly delegates Status List Token signing authority by issuing a certificate containing a the following value in the extended key usage extension.\r\n```",
              "createdAt": "2025-02-12T19:05:23Z",
              "updatedAt": "2025-02-12T19:05:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6bvmSU",
          "commit": {
            "abbreviatedOid": "b1d0dd6"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-12T19:05:43Z",
          "updatedAt": "2025-02-12T19:05:43Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think we need to tie the value used to the below definition right?",
              "createdAt": "2025-02-12T19:05:43Z",
              "updatedAt": "2025-02-12T19:05:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6cACHo",
          "commit": {
            "abbreviatedOid": "b1d0dd6"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-14T09:44:22Z",
          "updatedAt": "2025-02-14T09:44:23Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n{{RFC5280}} specifies the Extended Key Usage (EKU) X.509 certificate extension for use on end entity certificates. The extension indicates one or more purposes for which the certified public key is valid. The EKU extension can be used in conjunction with the Key Usage (KU) extension, which indicates the set of basic cryptographic operations for which the certified key may be used. A certificate's issuer explicitly delegates Status List Token signing authority by issuing a X.509 certificate containing the KeyPurposeId defined below in the extended key usage extension.\r\n```",
              "createdAt": "2025-02-14T09:44:23Z",
              "updatedAt": "2025-02-14T09:44:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6cCnZS",
          "commit": {
            "abbreviatedOid": "b1d0dd6"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-14T14:19:55Z",
          "updatedAt": "2025-02-14T14:19:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Would this work for you @tplooker?",
              "createdAt": "2025-02-14T14:19:55Z",
              "updatedAt": "2025-02-14T14:19:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6cJoS2",
          "commit": {
            "abbreviatedOid": "b231e34"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-17T00:27:22Z",
          "updatedAt": "2025-02-17T00:27:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 259,
      "id": "PR_kwDOJZ2aqs6KcRzz",
      "title": "Holders may also fetch and verify Status List Tokens",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/259",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #254 ",
      "createdAt": "2025-02-07T16:34:59Z",
      "updatedAt": "2025-02-07T16:36:18Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "379f5233f64ad98b25af96b7184bb7d3cc5a70ef",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/holders_fetching",
      "headRefOid": "d51d7de712eb8dc23a10428aff246e4eb79bb3a8",
      "closedAt": "2025-02-07T16:36:17Z",
      "mergedAt": "2025-02-07T16:36:17Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "d51d7de712eb8dc23a10428aff246e4eb79bb3a8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 260,
      "id": "PR_kwDOJZ2aqs6KcVZL",
      "title": "Holders may also fetch and verify Status List Tokens",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/260",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #254",
      "createdAt": "2025-02-07T16:41:16Z",
      "updatedAt": "2025-02-17T00:29:14Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "55b08dfceb819087590d464e97b7ca3c8d34eeda",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/holdersfetching3",
      "headRefOid": "199cc82829cf12c7e18c81940f5abec40fe6a4ab",
      "closedAt": "2025-02-17T00:29:14Z",
      "mergedAt": "2025-02-17T00:29:14Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "4b51b5138491cd990e8327149cc703202d49e998"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6bNd-Y",
          "commit": {
            "abbreviatedOid": "95295dd"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-08T18:22:35Z",
          "updatedAt": "2025-02-08T18:22:46Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nAn Issuer issues Referenced Tokens to a Holder, the Holder uses and presents those Referenced Tokens to a Relying Party. The Issuer gives updated status information to the Status Issuer, who issues a Status List Token. The Status Issuer can be either the Issuer or an entity that has been authorized by the Issuer to issue Status List Tokens. The Status Issuer provides the Status List Token to the Status Provider, who serves the Status List Token on a public, resolvable endpoint. The Relying Party or the Holder may fetch the Status List Token to retrieve the status of the Referenced Token.\r\n```",
              "createdAt": "2025-02-08T18:22:36Z",
              "updatedAt": "2025-02-08T18:22:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6cJoIs",
          "commit": {
            "abbreviatedOid": "5592ba6"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-17T00:25:58Z",
          "updatedAt": "2025-02-17T00:25:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 261,
      "id": "PR_kwDOJZ2aqs6KcfX2",
      "title": "minor nits by Denis",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/261",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #256 ",
      "createdAt": "2025-02-07T16:58:41Z",
      "updatedAt": "2025-02-14T14:18:15Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "549d9e0c5e7b19a386a563e1e6fd4c7588ea30b7",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "pb/token_lifecycle",
      "headRefOid": "9b3746f27488c83da4c4422579d41c2e3cd09b2e",
      "closedAt": "2025-02-14T14:18:15Z",
      "mergedAt": "2025-02-14T14:18:15Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "9130e8c23ce4569a4c2bca1a239c0edba53e4f53"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6bNd_m",
          "commit": {
            "abbreviatedOid": "9b3746f"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-08T18:23:23Z",
          "updatedAt": "2025-02-08T18:23:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6bvj8K",
          "commit": {
            "abbreviatedOid": "9b3746f"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-12T19:03:01Z",
          "updatedAt": "2025-02-12T19:03:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 263,
      "id": "PR_kwDOJZ2aqs6Ki2-r",
      "title": "fix cwt typ to use full media type",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/263",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #262 \r\n\r\nCOSE/CWT typ behaves a bit differently than JOSE/JWT typ and requires the full media type.",
      "createdAt": "2025-02-09T09:03:59Z",
      "updatedAt": "2025-02-17T09:21:14Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "8dc4f7e51fe9f6bc62d9c6008e7fc6f3d95f1f7f",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "262-cwt-typ",
      "headRefOid": "6e75d266a612a8565f1d7998d0152339904a8911",
      "closedAt": "2025-02-17T09:21:14Z",
      "mergedAt": "2025-02-17T09:21:14Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "9459928c2eeb7a8edef727137bcb0b4c4c8159b2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6bvjjn",
          "commit": {
            "abbreviatedOid": "4c65fa5"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-12T19:02:25Z",
          "updatedAt": "2025-02-12T19:02:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6cML0s",
          "commit": {
            "abbreviatedOid": "893029c"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-17T09:09:26Z",
          "updatedAt": "2025-02-17T09:09:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 264,
      "id": "PR_kwDOJZ2aqs6Kjjky",
      "title": "fix referenced token terminology",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/264",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #253 ",
      "createdAt": "2025-02-09T15:08:22Z",
      "updatedAt": "2025-02-12T19:02:08Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "549d9e0c5e7b19a386a563e1e6fd4c7588ea30b7",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "253-referenced-token",
      "headRefOid": "735a272ca785dc8053782697f9eed9bfb6baae54",
      "closedAt": "2025-02-12T19:02:08Z",
      "mergedAt": "2025-02-12T19:02:08Z",
      "mergedBy": "tplooker",
      "mergeCommit": {
        "oid": "407682f26445edf4f09b21448e72ad00c64c439b"
      },
      "comments": [
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "I am sorry but I can't see which changes have been done.\r\nI downloaded the Editor's copy but it is dated 7 February 2025.\r\n\r\nIf you were able to copy and paste below the text that has been changed, it would be possible for me to see it.",
          "createdAt": "2025-02-12T17:29:55Z",
          "updatedAt": "2025-02-12T17:29:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6bOpx3",
          "commit": {
            "abbreviatedOid": "735a272"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-09T16:32:40Z",
          "updatedAt": "2025-02-09T16:32:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6bvjNK",
          "commit": {
            "abbreviatedOid": "735a272"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-12T19:02:02Z",
          "updatedAt": "2025-02-12T19:02:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 266,
      "id": "PR_kwDOJZ2aqs6LWf2G",
      "title": "clarification on recommendations for key resolution",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/266",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #265 ",
      "createdAt": "2025-02-15T21:49:42Z",
      "updatedAt": "2025-02-17T09:08:44Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "9130e8c23ce4569a4c2bca1a239c0edba53e4f53",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "265-key-resolution-recommendations",
      "headRefOid": "c87da71856f5b5162866ed172df766d511c7bb21",
      "closedAt": "2025-02-17T09:08:44Z",
      "mergedAt": "2025-02-17T09:08:44Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "8dc4f7e51fe9f6bc62d9c6008e7fc6f3d95f1f7f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6cJoC9",
          "commit": {
            "abbreviatedOid": "c87da71"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-17T00:25:13Z",
          "updatedAt": "2025-02-17T00:25:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6cMLTt",
          "commit": {
            "abbreviatedOid": "c87da71"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-17T09:08:35Z",
          "updatedAt": "2025-02-17T09:08:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 269,
      "id": "PR_kwDOJZ2aqs6MNE_i",
      "title": "Clarify Status List definition",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/269",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #268 ",
      "createdAt": "2025-02-23T17:50:26Z",
      "updatedAt": "2025-03-03T07:54:42Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "233f2ca5641edcf2044e46c9d2472840c46ad98e",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "status_list_def",
      "headRefOid": "8b3c09be50fa99caff3f2ed2b0d929b53d9b3a7a",
      "closedAt": "2025-03-03T07:54:42Z",
      "mergedAt": "2025-03-03T07:54:42Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "f80b63b6d943adb409b82afa99b4162ef538a9fb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6eB9uj",
          "commit": {
            "abbreviatedOid": "6594d79"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T17:02:32Z",
          "updatedAt": "2025-02-28T17:17:27Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: An object in JSON or CBOR representation containing a compressed byte array that represents the statuses of many Referenced Tokens.\r\n```",
              "createdAt": "2025-02-28T17:02:33Z",
              "updatedAt": "2025-02-28T17:17:27Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nA Status List is a data structure that contains the statuses of many Referenced Tokens represented by one or multiple bits. The [first section](#status-list-byte-array) describes how to construct a compressed byte array that is the base component for the Status List data structure. The second and third section describe how to encode such a Status List in JSON and CBOR representation.\r\n```",
              "createdAt": "2025-02-28T17:04:56Z",
              "updatedAt": "2025-02-28T17:17:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6eHiLC",
          "commit": {
            "abbreviatedOid": "22f0a2d"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-02T17:16:20Z",
          "updatedAt": "2025-03-02T17:16:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6eJk-e",
          "commit": {
            "abbreviatedOid": "6a91868"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T07:53:16Z",
          "updatedAt": "2025-03-03T07:53:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 270,
      "id": "PR_kwDOJZ2aqs6M8TlK",
      "title": "Add cddl for statuslist cbor encoding",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/270",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #267 \r\nI only added the CDDL for the StatusList object CBOR encoding which seemed to be the most important to provide CDDL for. I don't think CDDL for the CWT would help (and I didn't find many examples in other specs doing CDDL for CWT).\r\n\r\n@rohanmahy Would that work for you?",
      "createdAt": "2025-02-28T13:50:58Z",
      "updatedAt": "2025-03-03T07:52:52Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "fdd538082e23fa5ac51ea5c583d0c56ee911f502",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "267-cddl-for-cbor",
      "headRefOid": "e479eebcf31a857fd5d3c81783208f5631e44bcb",
      "closedAt": "2025-03-03T07:52:44Z",
      "mergedAt": "2025-03-03T07:52:44Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "233f2ca5641edcf2044e46c9d2472840c46ad98e"
      },
      "comments": [
        {
          "author": "rohanmahy",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Closes #267 I only added the CDDL for the StatusList object CBOR encoding which seemed to be the most important to provide CDDL for. I don't think CDDL for the CWT would help (and I didn't find many examples in other specs doing CDDL for CWT).\r\n> \r\n> @rohanmahy Would that work for you?\r\n\r\nI proposed a one line change in the CDDL. `bits` can't take any arbitrary integer value. It has exactly 4 choices, so just enumerate them.\r\n\r\nUsing text string keys instead of integer keys is unconventional. I don't have an objection, as long as you are deliberately making that decision.\r\n\r\nI agree that anyone using CWTs does not need you to provide CDDL for a generic structure.\r\n\r\nThanks, -r",
          "createdAt": "2025-02-28T14:31:01Z",
          "updatedAt": "2025-02-28T14:31:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6eAY0d",
          "commit": {
            "abbreviatedOid": "ed86717"
          },
          "author": "rohanmahy",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T14:24:13Z",
          "updatedAt": "2025-02-28T14:24:13Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nStatusList = {\r\n    bits: 1 / 2 / 4 / 8, ; The number of bits used per Referenced Token\r\n    lst: bstr, ; Byte string that contains the Status List\r\n    ? aggregation_uri: tstr, ; link to the Status List Aggregation\r\n}\r\n```",
              "createdAt": "2025-02-28T14:24:13Z",
              "updatedAt": "2025-02-28T14:24:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJZ2aqs6eBvzE",
          "commit": {
            "abbreviatedOid": "1b0acae"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T16:38:07Z",
          "updatedAt": "2025-02-28T16:38:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6eB_AP",
          "commit": {
            "abbreviatedOid": "1b0acae"
          },
          "author": "rohanmahy",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T17:04:59Z",
          "updatedAt": "2025-02-28T17:04:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6eJkOA",
          "commit": {
            "abbreviatedOid": "b9734d4"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T07:51:31Z",
          "updatedAt": "2025-03-03T07:51:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 272,
      "id": "PR_kwDOJZ2aqs6NCOq-",
      "title": "add diagram for Status List Aggregation for further explanation, rena\u2026",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/272",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026me chunking to divide up\r\n\r\nCloses #255 ",
      "createdAt": "2025-03-01T14:44:33Z",
      "updatedAt": "2025-03-03T07:51:31Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "9459928c2eeb7a8edef727137bcb0b4c4c8159b2",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "chunking",
      "headRefOid": "26e324410782331a86c0d1ad39c4f01c118970e4",
      "closedAt": "2025-03-03T07:51:31Z",
      "mergedAt": "2025-03-03T07:51:30Z",
      "mergedBy": "c2bo",
      "mergeCommit": {
        "oid": "fdd538082e23fa5ac51ea5c583d0c56ee911f502"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6eHiIC",
          "commit": {
            "abbreviatedOid": "26e3244"
          },
          "author": "c2bo",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-02T17:15:23Z",
          "updatedAt": "2025-03-02T17:15:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJZ2aqs6eJj5t",
          "commit": {
            "abbreviatedOid": "26e3244"
          },
          "author": "tplooker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T07:50:46Z",
          "updatedAt": "2025-03-03T07:50:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 273,
      "id": "PR_kwDOJZ2aqs6NHTPG",
      "title": "update acknowledgments",
      "url": "https://github.com/oauth-wg/draft-ietf-oauth-status-list/pull/273",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "First set of #271 - I'll leave the issue open and update again when more people have answered",
      "createdAt": "2025-03-03T08:36:46Z",
      "updatedAt": "2025-03-03T18:42:35Z",
      "baseRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "baseRefName": "main",
      "baseRefOid": "f80b63b6d943adb409b82afa99b4162ef538a9fb",
      "headRepository": "oauth-wg/draft-ietf-oauth-status-list",
      "headRefName": "271-update-acks",
      "headRefOid": "c6f0fa908794d463c2d1879eab8fea2ce268fcde",
      "closedAt": "2025-03-03T18:42:31Z",
      "mergedAt": "2025-03-03T18:42:31Z",
      "mergedBy": "paulbastian",
      "mergeCommit": {
        "oid": "91656c2d124a2576a898306c2d8b15d8cd929e2c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJZ2aqs6ePvRI",
          "commit": {
            "abbreviatedOid": "c6f0fa9"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T18:31:13Z",
          "updatedAt": "2025-03-03T18:31:13Z",
          "comments": []
        }
      ]
    }
  ]
}